openapi: 3.0.2
info:
  title: Zap Storage (Gulliver)
  description: Zap Storage API. Maintained by the Editor Reliance team.
  version: 2023.01.24
  contact:
    name: Editor Reliance (#team-editor-reliance)
    email: team-editor-reliance@zapier.com
    url: 'https://zapier.slack.com/archives/C406QGE15'
servers:
  - url: 'http://localhost:8000/api/gulliver'
    description: Monolith local development
  - url: 'https://zapier-staging.com/api/gulliver'
    description: Staging environment
  - url: 'https://zapier.com/api/gulliver'
    description: Production environment
paths:
  '/metadata/v1/zaps/{zap_id}':
    get:
      operationId: get_zap_metadata_view
      summary: Get Zap Metadata
      description: Retrieve metadata for a specific Zap
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: container
          in: query
          description: The container and ID in which the Zap is being viewed (e.g. 'canvas:1b7cdd38-9422-4f52-af40-293151417c56')
          required: false
          schema:
            type: string
            title: Container Id
      responses:
        '200':
          description: Successful response with Zap metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapMetadata'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Metadata

  '/steptesting/v1/zaps/{zap_id}/draft':
    delete:
      operationId: delete_draft_zdl_and_draft_zaps
      summary: Delete Zap Draft & Samples
      description: Deletes a Zap's Samples alongside its Draft
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '204':
          description: Successful response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/duplicate':
    post:
      operationId: duplicate_zap_and_samples
      summary: Duplicate Zap
      description: Duplicates a Zap along with its Samples.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateZapResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/duplicate/samples':
    post:
      operationId: duplicate_samples_for_steps
      summary: Duplicate Step Samples
      description: Takes a list of 'from' and 'to' Step IDs and copies the samples between these steps.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateSamplesForStepsRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateSamplesForStepsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/needs':
    post:
      operationId: get_needs
      summary: Get Step Needs
      description: Grab the needs for a step.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNeedsRequest'
      responses:
        '200':
          description: Step needs successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNeedsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/gives':
    get:
      operationId: get_gives
      summary: Get Step Gives
      description: 'Grab the gives (including custom gives) for a step, defaults to storage as long as the validation hash is still good. Stores them in the selected sample.'
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGivesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/published/gives':
    get:
      operationId: get_published_gives
      summary: Get All Published Zap Step Gives
      description: Returns all published gives for the provided Zap Step.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPublishedGivesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/published/samples':
    get:
      operationId: get_published_samples
      summary: Get All Published Zap Step Samples
      description: Returns all published samples for the provided Zap Step.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPublishedSamplesResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing

  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/modified':
    get:
      operationId: get_modified_samples
      summary: Get All Modified Zap Step Samples
      description: Returns all modified samples for the provided Zap Step.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModifiedSamplesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/modified/{sample_id}':
    delete:
      operationId: delete_modified_sample
      summary: Deletes a modified sample
      description: Deletes a modified sample
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
            title: Sample Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            type: integer
            title: Account Id
      responses:
        '204':
          description: Successfully deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Step Testing
    patch:
      operationId: update_modified_sample
      summary: Update a Modified Zap Step Sample
      description: Replaces the output and gives of the selected Modified Sample with the provided payload.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
            title: Sample Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModifiedSampleRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateModifiedSampleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples':
    get:
      operationId: get_samples
      summary: Get All Stored Zap Steps Samples
      description: Returns all valid samples for the provided Zap Step.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllSamplesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v2/zaps/{zap_id}/steps/{step_id}/output/samples':
    get:
      operationId: get_all_samples
      summary: Get All Stored Zap Steps Samples including Modified Samples
      description: Returns all valid samples (including Modified samples) for the provided Zap Step.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllSamplesInclModifiedResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/selected':
    get:
      operationId: get_selected_sample
      summary: Get Stored Zap Steps' Selected Sample
      description: 'This would return a single sample that has been selected, or 404 not found.'
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZapStepsSelectedResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/skip':
    post:
      operationId: skip_and_create_sample
      summary: Create a Skipped Sample
      description: This will create a skipped sample with our best guess of what the user will be able to map in following steps.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkipTestResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/{sample_id}/create_modified':
    post:
      operationId: create_modified
      summary: Creates a modified sample from an existing draft sample
      description: Creates a modified sample from an existing draft sample
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
            title: Sample Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            type: integer
            title: Account Id
      responses:
        '201':
          description: Successfully Duplicated
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "Conflict (ex: maximum number of modified samples already exist)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/zap_run/{zap_run_id}/create_modified':
    post:
      operationId: create_modified_from_zap_run
      summary: Creates a modified sample from the trigger output of the given Zap run
      description: Creates a modified sample from the trigger output of the given Zap run
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: zap_run_id
          in: path
          required: true
          schema:
            type: string
            title: Zap run ID
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            type: integer
            title: Account Id
      responses:
        '201':
          description: Successfully Duplicated
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "Conflict (ex: maximum number of modified samples already exist)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/modified/{sample_id}/rename':
    post:
      operationId: rename_modified_sample
      summary: Renames a modified sample
      description: Renames a modified sample
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
            title: Sample Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameModifiedSampleRequest'
        required: true
      responses:
        '201':
          description: Successfully Renamed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenameModifiedSampleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/modified/{sample_id}/duplicate':
    post:
      operationId: duplicate_modified_sample
      summary: Duplicates a modified sample
      description: Duplicates a modified sample
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
            title: Sample Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '201':
          description: Successfully Duplicated
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "Conflict (ex: maximum number of modified samples already exist)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/{sample_id}/select':
    post:
      operationId: mark_sample_as_selected
      summary: Set Sample as Selected
      description: Sets a stored sample as the selected sample for the provided Zap Step.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
            title: Sample Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetSampleAsSelectedResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/samples/modified/{sample_id}/reset':
    post:
      operationId: reset_modified_sample
      summary: Reset a modified sample to it's original content
      description: |-
        Overwrites the current output and gives of a modified sample with the original content.
        Any changes made to the sample will be lost and the sample will be returned to it's original state.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
            title: Sample Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetModifiedSampleContentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/test/prepare':
    get:
      operationId: prepare_for_sampling
      summary: Prepare Step Testing
      description: |-
        Prepares for and enables collection of data for triggers (e.g. data coming
        in via hooks etc.).

        More specifically a call to this endpoint (for a trigger step) will request
        session details from App Platform and in doing so set things in motion so
        that data coming in for the trigger step is collected and stored (prior to
        this any incoming data would be ignored).

        **Notes:**
          - Is safe to call for an action step, it is not needed though so suggest it is skipped unless it’s a trigger step.
          - `expires_at` will be None for polling triggers.
          - This endpoint will return any cached metadata (i.e. from previous
            `prepare` calls), it will not overwrite the metadata unless the step
            has changed enough since the last call that the validation_hash has
            changed.
          - It is suggested to call `prepare` again after any step configuration
            changes. If the step has changed enough then any cached session for the
            step will be considered invalid. Calling the `run` endpoint without a
            valid cached session will result in a 400 error.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreparedMetadataResponse'
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreparedMetadataResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/steps/{step_id}/output/test/run':
    post:
      operationId: run_test_sample
      summary: Test Zap Step & Stores Samples
      description: |-
        Run (and in the process test) the provided Zap Step. Returns any
        resulting new deduplicated samples.

        This endpoint is called the same regardless if it’s an action or trigger.
        It will either return 0-MAX samples or error, it will never return metadata
        details.

        **When calling this endpoint for a trigger/read step there are some details
        to keep in mind:**

        A `200` response indicates that a step was tested successfully but no new
        samples resulted (e.g. the response was a duplicate or no data returned) a
        `201` response will contain samples.

        Receiving a `410`` status code indicates that the caller should call the
        /prepare endpoint before then calling this endpoint again.

        A trigger step may return a 410 error on the following occasions:

        - **Session has expired for this trigger. Call prepare.**:
          Returned when a prepared session has expired. This is likely to happen
          (but not limited to) when there is a session_id in cache but App Platform
          considers it expired.

        - **No valid session found for trigger.**: Returned if there is no
          session in cache at all for this step. This could happen (but not limited
          to) when enough changes are made to a step and the `prepare` endpoint is
          not called before the `run` endpoint.

        The status code `202` is returned when the trigger steps execution has not
        yet finished.
        The suggested reaction to a `202` status response is to call (or poll)
        again in the very near future and to continue to do so until a non-`202`
        response is returned.

        **Note:** To test a trigger step one _must_ call
        `/zaps/{zap_id}/steps/{step_id}/output/test/prepare` prior to calling this
        endpoint.

        **Note:**
         (implementation detail) The successful collection of data for a
         polling trigger will result in the session ID being invalidated (by App
         Platform, no invalidation happens for other trigger types).
         The `run` endpoint glosses over this by ‘re-preparing’ for this step if
         this happens. (It’s possible that the session_id in a previously returned
         call to prepare may now differ if prepare is called again. This shouldn’t
         be an issue as session_id should only be used by the BE service).

        The status codes `202` and `410` will _only_ ever be returned for a trigger
        step and not for action steps.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: step_id
          in: path
          required: true
          schema:
            type: string
            title: Step Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreparedTestResponse'
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreparedTestResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  '/steptesting/v1/zaps/{zap_id}/subscriptions':
    get:
      operationId: get_subscriptions
      summary: Get Zap Subscription & Claims
      description: 'Returns the Zap''s subscriptions, if any. Retrieve the information around the claim ids associated with steps for an enabled version of a Zap, this is done by munging up data from ZDL Storage (per Zap claim ids) with the data from the App Platform (claim id details). This includes webhook static hook URLs which may help the user send data.'
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZapSubscriptionsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Step Testing
  /storage/v1/zaps:
    get:
      operationId: get_zaps
      summary: Get Zaps
      description: |-
        Get Zaps for this exact user and account, or, in a folder they can see.

        Note:
            `folder_id` can be `0` which will be “Home Folder”, no other virtual
            folders are supported. Pagination is locked to 25 Zaps, with Zaps
            in reverse chronological order. If pagination cursor is `null`,
            there are no more Zaps to paginate through.

        When your Zap is enabled, you’ll have a `current_version: {zdl: {...}}`,
        and when it is disabled, you’ll have a `draft: {zdl: {...}}`. For now,
        you can **only have one or the other**, but once we move away from Nodes
        you’ll be able to have both a live version and a draft!
      parameters:
        - name: folder_id
          in: query
          description: Filter Zaps belonging to a particular folder.
          required: false
          schema:
            description: Filter Zaps belonging to a particular folder.
            type: integer
            title: Folder Id
        - name: involves_app
          in: query
          description: '**DEPRECATED** Comma separated list of apps to filter by. Consumers should use the `/v1/search/zaps` API instead.'
          required: false
          deprecated: true
          schema:
            description: '**DEPRECATED** Comma separated list of apps to filter by. Consumers should use the `/v1/search/zaps` API instead.'
            type: string
            title: Involves App
          example: 'TesterAPI,TesterAuthAPI'
        - name: title
          in: query
          description: Filter for Zaps with a title matching this string.
          required: false
          schema:
            description: Filter for Zaps with a title matching this string.
            type: string
            title: Title
        - name: include_deleted
          in: query
          description: Optionally include any (soft) deleted Zaps when filtering.
          required: false
          schema:
            description: Optionally include any (soft) deleted Zaps when filtering.
            type: boolean
            default: false
            title: Include Deleted
        - name: cursor
          in: query
          description: Only return Zaps after a particular cursor.
          required: false
          schema:
            description: Only return Zaps after a particular cursor.
            type: string
            title: Cursor
        - name: trash_days
          in: query
          description: Optionally include (soft) deleted Zaps within a specific timeframe. Note that this must be used in tandem with the `include_deleted` filter.
          required: false
          schema:
            description: Optionally include (soft) deleted Zaps within a specific timeframe. Note that this must be used in tandem with the `include_deleted` filter.
            type: integer
            title: Trash Days
        - name: zap_ids
          in: query
          description: 'Comma separated list of Zap IDs to fetch. Note that regardless of the number of IDs provided, you will only receive 25 Zaps at a time.'
          required: false
          schema:
            description: 'Comma separated list of Zap IDs to fetch. Note that regardless of the number of IDs provided, you will only receive 25 Zaps at a time.'
            type: array
            items:
              pattern: '^(\d+|[a-z0-9-]+)$'
              type: string
              example: d9b0fb24-f66c-4506-8160-532861785407
            maxItems: 100
            title: Zap Ids
        - name: limit
          in: query
          description: Number of Zaps to fetch at a time. Note that you cannot fetch more than 25 Zaps at a time.
          required: false
          schema:
            description: Number of Zaps to fetch at a time. Note that you cannot fetch more than 25 Zaps at a time.
            type: integer
            maximum: 25
            minimum: 1
            title: Limit
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
        - name: customuser_id
          in: query
          description: Filter for Zaps belonging to a customuser.
          required: false
          schema:
            description: Filter for Zaps belonging to a customuser.
            type: integer
            title: Customuser Id
        - name: kind
          in: query
          description: Filter by a specific kind of Zap. If not supplied ANY kind of Zap will be returned.
          required: false
          schema:
            description: Filter by a specific kind of Zap. If not supplied ANY kind of Zap will be returned.
            allOf:
              - $ref: '#/components/schemas/ZapKind'
        - name: order_by
          in: query
          description: Specify the ordering scheme to be used in ordering results.
          required: false
          schema:
            description: Specify the ordering scheme to be used in ordering results.
            allOf:
              - $ref: '#/components/schemas/ZapSortOrder'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
    post:
      operationId: create_zap
      summary: Create Zap
      description: |-
        Create a new Zap for a customuser in an account accessible by that customuser.

        Since behind the scenes we still need to use auto-increment integer IDs,
        you’ll be required to **initially** provide step IDs in the format of
        `{”id”: “_GEN_{\d\w+}”}` and we’ll automatically generate / replace the
        step ID and any dependent curlies with the new integer ID.
        **You’ll then need to use the new IDs we generated in all your subsequent
        ZDL calls, like update.** In the future, this requirement will go away and
        you can manage the step IDs however you see fit.
      parameters:
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateZapSchema'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}':
    get:
      operationId: get_zap
      summary: Get Zap
      description: |-
        Retrieve a Zap for a customuser.

        The Zap must be owned by the customuser or in a folder to which the
        customuser has access.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: include_deleted
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Deleted
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapSchema'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
    delete:
      operationId: delete_zap
      summary: Delete Zap
      description: |-
        Delete a Zap.

        Performs a soft delete by simply marking the `deleted_at` timestamp
        on the Zap It is NOT removed from the database.

        This should effectively put the Zap into the trash.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
    patch:
      operationId: update_zap
      summary: Update Zap
      description: |-
        Update a Zap.

        The following updates are permitted:
            * Draft ZDL is updated when the `zdl` field is supplied.
              If no draft exists, one is created
            * A Zap can be enabled or disabled by toggling the `is_enabled` field

        If you need to transfer the Zap to a different folder, account, or owner use
        the respective transfer endpoint.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateZapSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  /storage/v1/zaps/template:
    patch:
      operationId: update_template_zap
      summary: Update Template Zap
      description: |-
        Update a Template Zap (using ZDL).

        The following updates are permitted:
            * ZDL document is required - only updating the Zap details is available
            * No title or other attributes are currently supported
            * No validation checks on "no auths allowed" and the like are
              currently supported
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutateTemplateZapSerializer'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/check':
    post:
      operationId: zap_check
      summary: Check Zap
      description: Run checks on a Zap without enabling it.
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '426':
          description: Upgrade Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/draft':
    delete:
      operationId: zap_draft_delete
      summary: Delete the draft of the specified zap
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '204':
          description: Successful response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/draft/publish-version':
    post:
      operationId: publish_zap_version
      summary: Publishes a new version from a draft
      description: Publishes a new version from a draft and enables the Zap. Note that as we straddle Node/ZDL the resulting Zap will be Node based and the created Version will contain all metadata except the ZDL (this will come later).
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapVersionSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/disable':
    post:
      operationId: disable_zap
      summary: Disables the zap
      description: Disables the Zap
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapSchema'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/publish':
    post:
      operationId: publish_version
      summary: Publish Version
      description: Publishes the latest version of a Zap
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishVersionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/run':
    get:
      operationId: get_run_status
      summary: Get Run Status
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: status
          in: query
          description: Query for Zap run feedback matching specified status.
          required: false
          schema:
            description: Query for Zap run feedback matching specified status.
            allOf:
              - $ref: '#/components/schemas/ZapStatus'
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapRunGetResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
    post:
      operationId: run_zap
      summary: Run Zap
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: fake
          in: query
          description: 'Do not actually run the Zap, but return a truthy response'
          required: false
          schema:
            description: 'Do not actually run the Zap, but return a truthy response'
            type: boolean
            default: false
            title: Fake
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapRunPostResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/versions':
    get:
      operationId: list_zap_versions
      summary: List versions for this zap
      description: Lists versions for the zap in a paginated fashion
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
        - name: cursor
          in: query
          description: The cursor from the previous page of results
          required: false
          schema:
            description: The cursor from the previous page of results
            type: string
            title: Cursor
        - name: limit
          in: query
          description: The limit of how many versions to return on this page
          required: false
          schema:
            type: integer
            title: limit
          default: 25
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapVersionListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/versions/entitlement':
    get:
      operationId: list_zap_versions_entitlement
      summary: Get the users entitlement details for this zap
      description: Lists entitlement values for this zap
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapVersionEntitlementResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/versions/{version_id}':
    get:
      operationId: zap_version_get
      summary: Retrieves a specified version
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Version Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapVersionSchema'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/versions/{zap_version_id}':
    get:
      operationId: get_version
      summary: Get Version
      description: |-
        Retrieve a Zap version identified by ID.

        In order tp retrieve a Zap version, the requesting customuser must have
        access to the underlying Zap .
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: zap_version_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Zap Version Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapVersionSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
    patch:
      operationId: update_version
      summary: Update Version
      description: Record a new updated description for the given version record
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: zap_version_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Zap Version Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVersionSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Storage
  '/storage/v1/zaps/{zap_id}/versions/{version_id}/enable':
    post:
      operationId: enable_zap_version
      summary: Enables a specific zap version
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Version Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapVersionSchema'
        '400':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  /storage/v1/zaps/transfer/folder:
    post:
      operationId: zap_transfer_folder
      summary: Transfer a list of zaps to a specified folder
      parameters:
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZapTransferFolderRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapTransferResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  /storage/v1/zaps/transfer/owner:
    post:
      operationId: zap_transfer_owner
      summary: Transfer a list of zaps to a specified owner
      parameters:
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZapTransferOwnerRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapTransferResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  /storage/v1/zaps/transfer/account:
    post:
      operationId: zap_transfer_account
      summary: Transfer a list of zaps to a specified account
      parameters:
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZapTransferAccountRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZapTransferResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  /storage/v1/zdl/duplicate:
    post:
      operationId: duplicate_zdl
      summary: Duplicate Zdl
      description: |-
        Duplicate ZDL returning the ZDL ready to be submitted to Create Zap endpoint.

        This includes changes to the step ids to conform with the endpoint's
        requirements (changing step ids to correct _GEN_{i}).
      parameters:
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZDLSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZDLSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Storage
  '/zapsettings/v1/zaps/{zap_id}/settings':
    get:
      operationId: get_settings
      summary: Get Zap Settings
      description: Returns an array of Zap level settings
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZapSettingsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Zap Settings
  '/zapsettings/v1/zaps/{zap_id}/settings/{setting_id}':
    put:
      operationId: update_setting
      summary: Update Zap Setting
      description: Updates a Zap Setting by ID
      parameters:
        - name: zap_id
          in: path
          required: true
          schema:
            type: string
            example: d9b0fb24-f66c-4506-8160-532861785407
            pattern: '^(\d+|[a-z0-9-]+)$'
            title: Zap Id
        - name: setting_id
          in: path
          description: The ID of the setting to update
          required: true
          schema:
            type: string
            default: false
            title: Setting Id
        - name: account_id
          in: query
          description: The account_id that the user is currently logged in as.
          required: true
          schema:
            description: The account_id that the user is currently logged in as.
            type: integer
            title: Account Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateZapSettingRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateZapSettingResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - Zap Settings
components:
  schemas:
    About:
      type: object
      properties:
        href:
          description: A string containing the links URL
          type: string
          title: Href
      title: About
    BadRequestError:
      type: object
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          type: string
          title: Id
        links:
          $ref: '#/components/schemas/Links'
        status:
          type: integer
          title: Status
        code:
          description: An application-specific error code
          type: string
          title: Code
        title:
          description: 'A short, human-readable summary of the problem.'
          type: string
          title: Title
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          title: Detail
        source:
          $ref: '#/components/schemas/Source'
        meta:
          description: An object containing non-standard meta-information about the error.
          type: object
          title: Meta
      required:
        - status
      title: BadRequestError
    Choice:
      type: object
      properties:
        key:
          type: string
          title: Key
        label:
          type: string
          title: Label
        value:
          type: string
          title: Value
      required:
        - key
      example:
        key: 'no'
        label: No
        value: 'False'
      title: Choice
    DuplicateSamplesForStepsRequest:
      type: object
      properties:
        step_ids:
          type: array
          items:
            $ref: '#/components/schemas/SampleDuplicationPair'
          title: StepIDs
      required:
        - step_ids
      title: DuplicateSamplesForStepsRequest
    DuplicateSamplesForStepsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DuplicateSamplesForStepsResult'
          title: Results
      required:
        - results
      title: DuplicateSamplesForStepsResponse
    DuplicateSamplesForStepsResult:
      description: Contains the results of a Sample duplication action
      type: object
      properties:
        sample_id:
          description: Sample ID of the copied step
          $ref: '#/components/schemas/SampleID'
        status:
          description: Output status of the duplication
          type: string
          enum:
            - SUCCESS
            - FAILURE
          title: Status
        source_step_id:
          description: Source Step ID to duplicate from
          $ref: '#/components/schemas/StepID'
          title: SourceStepID
        destination_step_id:
          description: Destination Step ID to duplicate to
          $ref: '#/components/schemas/StepID'
          title: DestinationStepID
        message:
          description: Failure message if unsuccessful
          type: string
          title: Message
      required:
        - status
        - sample_id
        - source_step_id
        - destination_step_id
        - message
      title: DuplicateSamplesForStepsResult
    DuplicateZapResponse:
      type: object
      properties:
        zdl:
          $ref: '#/components/schemas/ZapSchema'
      required:
        - zdl
      title: DuplicateZapResponse
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/BadRequestError'
              - $ref: '#/components/schemas/NotFoundError'
          title: Errors
      required:
        - errors
      title: ErrorResponse
    FieldDefinition:
      type: object
      properties:
        key:
          type: string
          title: Key
        type:
          type: string
          title: Type
        label:
          type: string
          title: Label
        help_text:
          type: string
          title: Help Text
        required:
          type: boolean
          title: Required
        prefill:
          type: string
          title: Prefill
        searchfill:
          type: string
          title: Searchfill
        placeholder:
          type: string
          title: Placeholder
        choices:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
          title: Choices
        custom_field:
          type: boolean
          title: Custom Field
        important:
          type: boolean
          title: Important
        default:
          title: Default
        parent_key:
          type: string
          title: Parent Key
        zap_meta_sample:
          title: Zap Meta Sample
        score:
          type: number
          title: Score
        subscore:
          type: number
          title: Subscore
      required:
        - key
      title: FieldDefinition
      example:
        key: "channel"
        type: "string"
        label: "Channel"
        help_text: "If you use a custom value, you can also use the channel ID."
        required: true
        prefill: "channels.id.name"
        searchfill: null
        placeholder: "Pick a channel..."
        choices:
          - key: "C123456"
            label: "General"
            value: "general"
          - key: "C789012"
            label: "Random"
            value: "random"
        custom_field: false
        important: false
        default: null
        parent_key: null
        zap_meta_sample: null
        score: 0.8
        subscore: 0.5
    GetAllSamplesResponse:
      type: object
      properties:
        samples:
          type: array
          items:
            $ref: '#/components/schemas/RichSample'
          title: Samples
      title: GetAllSamplesResponse
    GetAllSamplesInclModifiedResponse:
      type: object
      properties:
        samples:
          type: array
          items:
            $ref: '#/components/schemas/RichSample'
          title: Samples
      title: GetAllSamplesInclModifiedResponse
    GetModifiedSamplesResponse:
      type: object
      properties:
        samples:
          type: array
          items:
            $ref: '#/components/schemas/RichSample'
          title: Samples
      title: GetModifiedSamplesResponse
    GetNeedsRequest:
      type: object
      properties:
        selected_api:
          type: string
          description: >
            Something like `SlackAPI` (for Python apps) or `SplitwiseCLIAPI@1.0.0` or `SplitwiseCLIAPI@latest` (for CLI apps).
            Non-public apps are fine as long as the authed user can access them.
        action:
          type: string
          description: Action of the Step.
        type_of:
          type: string
          description: Type of the Step.
        authentication_id:
          type: integer
          nullable: true
          description: >
            If the app needs auth, provide an `authentication_id` that has the `selected_api` of the
            app you want to run. Can be any auth visible to the user (including shared).
        params:
          type: object
          nullable: true
          description: >
            Object that matches the input the node would normally get. Has all the same keys/types as
            the `needs` of the action.
        invalidate_cache:
          type: boolean
          default: false
          description: >
            Needs can be cached; provide this flag to disable it at a potential performance hit.
      example:
        selected_api: "SlackCLIAPI@1.2.15"
        action: "channel_message"
        type_of: "write"
        authentication_id: 1234567
        params:
          as_bot: "yes"
          add_edit_link: "yes"
          unfurl: "yes"
          link_names: true
          reply_broadcast: "no"
          text: "My Text"
          channel: "C05DKB8Q877"
          username: "Editor GitLab Bot"
          icon: "https://about.gitlab.com/images/press/logo/png/gitlab-logo-500.png"
        invalidate_cache: false
    GetNeedsResponse:
      type: object
      properties:
        success:
          type: boolean
          description: >
            Check this first to see the success state. If true, there will be `needs`
            (which still could be empty). If false, then custom needs failed to fetch.`.
        needs:
          type: array
          description: An array of Needs objects. Could be empty even if `success` is true.
          items:
            $ref: '#/components/schemas/FieldDefinition'
    GetPublishedSamplesResponse:
      type: object
      properties:
        samples:
          type: array
          items:
            $ref: '#/components/schemas/RichSample'
          title: Samples
      title: GetPublishedSamplesResponse
    GetZapSettingsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ZapSetting'
          title: Results
      title: GetZapStepsSelectedResponse
    GetZapStepsSelectedResponse:
      type: object
      properties:
        sample:
          $ref: '#/components/schemas/RichSample'
      title: GetZapStepsSelectedResponse
    GetZapSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/ZapSubscription'
          title: Subscriptions
      required:
        - subscriptions
      title: GetZapSubscriptionsResponse
    GetGivesResponse:
      type: object
      properties:
        gives:
          type: array
          items:
            $ref: '#/components/schemas/FieldDefinition'
          title: Gives
      required:
        - gives
      title: GetGivesResponse
    GetPublishedGivesResponse:
      type: object
      properties:
        gives:
          type: array
          items:
            $ref: '#/components/schemas/FieldDefinition'
          title: Gives
      required:
        - gives
      title: GetPublishedGivesResponse
    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
      title: HTTPValidationError
    Links:
      type: object
      properties:
        about:
          description: A link that leads to further details about this particular occurrence of the problem.
          allOf:
            - $ref: '#/components/schemas/About'
          title: About
      title: Links
    NotFoundError:
      type: object
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          type: string
          title: Id
        links:
          $ref: '#/components/schemas/Links'
        status:
          type: integer
          title: Status
        code:
          description: An application-specific error code
          type: string
          title: Code
        title:
          description: 'A short, human-readable summary of the problem.'
          type: string
          title: Title
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          title: Detail
        source:
          $ref: '#/components/schemas/Source'
        meta:
          description: An object containing non-standard meta-information about the error.
          type: object
          title: Meta
      required:
        - status
      title: NotFoundError
    PublishVersionResponse:
      $ref: '#/components/schemas/ZapVersionSchema'
      title: PublishVersionResponse
    PreparedMetadataResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ExtendedMetaData'
      title: PreparedMetadataResponse
    PreparedTestResponse:
      type: object
      properties:
        samples:
          type: array
          items:
            $ref: '#/components/schemas/RichSample'
          title: Samples
      required:
        - Steptesting
      title: PreparedTestResponse
    RenameModifiedSampleRequest:
      type: object
      properties:
        description:
          type: string
          title: Description
          description: 'The new sample description'
      required:
        - description
      title: RenameModifiedSampleRequest
    RenameModifiedSampleResponse:
      type: object
      properties:
        sample:
          $ref: '#/components/schemas/RichSample'
      required:
        - sample
      title: RenameModifiedSampleResponse
    RichSample:
      description: 'Enriched sample - can contain details about modified content.'
      type: object
      properties:
        sample_id:
          $ref: '#/components/schemas/SampleID'
        zap_id:
          type: string
          title: Zap Id
        step_id:
          $ref: '#/components/schemas/StepID'
        is_selected:
          type: boolean
          title: Is Selected
        step_output:
          type: object
          title: Step Output
        step_status:
          $ref: '#/components/schemas/StepSampleStatus'
        created_at:
          type: string
          format: date-time
          title: Created At
        modified_at:
          type: string
          format: date-time
          title: Modified At
        source:
          $ref: '#/components/schemas/SampleSource'
        description:
          type: string
          title: Description
        has_changed:
          type: boolean
          title: Has changed
      required:
        - source
      title: Rich Sample
    StepSampleStatus:
      description: Step sample status enumeration
      enum:
        - delayed
        - error
        - halted
        - filtered
        - success
      title: StepSampleStatus
    SampleDuplicationPair:
      type: object
      properties:
        source_id:
          description: Source Step ID to duplicate from
          $ref: '#/components/schemas/StepID'
          title: SourceStepID
        dest_id:
          description: Destination Step ID to duplicate to
          $ref: '#/components/schemas/StepID'
          title: DestinationStepID
      title: SampleDuplicationPair
    SampleID:
      type: string
      title: SampleID
    SampleSource:
      description: An enumeration.
      enum:
        - live
        - skipped
        - modified
      title: SampleSource
    SetSampleAsSelectedResponse:
      type: object
      properties:
        sample:
          $ref: '#/components/schemas/RichSample'
      title: SetSampleAsSelectedResponse
    ResetModifiedSampleContentResponse:
      type: object
      properties:
        sample:
          $ref: '#/components/schemas/RichSample'
      title: ResetModifiedSampleContentResponse
    SkipTestResponse:
      type: object
      properties:
        samples:
          type: array
          items:
            $ref: '#/components/schemas/RichSample'
          title: Samples
        metadata:
          $ref: '#/components/schemas/ExtendedMetaData'
      required:
        - Steptesting
      title: SkipTestResponse
    Source:
      type: object
      properties:
        pointer:
          description: 'A JSON Pointer ([RFC6901](https://jsonapi.org/format/#:~:text=a%20JSON%20Pointer%20%5BRFC6901%5D%20to%20the%20associated%20entity%20in%20the%20request%20document)) to the associated entity in the request document'
          type: string
          example: /data/attributes/title
          title: Pointer
        parameter:
          description: A string indicating which URI query parameter caused the error.
          type: string
          title: Parameter
      title: Source
    StepID:
      type: string
      title: StepID
    ExtendedMetaData:
      type: object
      properties:
        static_hook_url:
          type: string
          format: uri
          maxLength: 65536
          minLength: 1
          title: Static Hook Url
        is_hook_subscription:
          type: boolean
          title: Is Hook Subscription
        expires_at:
          type: number
          title: Expires At
        session_id:
          type: string
          title: Session Id
      title: ExtendedMetaData
    TriggerType:
      description: An enumeration.
      type: string
      enum:
        - polling
        - hook_static
        - hook_subscription
        - hook_to_poll
      title: TriggerType
    UpdateModifiedSampleResponse:
      $ref: '#/components/schemas/RichSample'
      title: UpdateModifiedSampleResponse
    UpdateModifiedSampleRequest:
      type: object
      title: UpdateModifiedSampleRequest
      description: Output to update the Modified Sample to. Must have the same shape as the Original Sample's output
    UpdateZapSettingRequest:
      type: object
      properties:
        value:
          description: Value to give the Zap Setting
          type: string
      required:
        - value
      title: UpdateZapSettingRequest
    UpdateZapSettingResponse:
      $ref: '#/components/schemas/ZapSetting'
      title: UpdateZapSettingResponse
    ZapSetting:
      description: Defines a single setting for a Zap
      type: object
      properties:
        id:
          type: string
          title: ID
        kind:
          type: string
          title: Kind
        value:
          type: string
          title: Value
      required:
        - id
        - kind
        - value
      title: ZapSetting
    ValidationError:
      type: object
      properties:
        loc:
          type: array
          items:
            type: string
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      required:
        - loc
        - msg
        - type
      title: ValidationError
    ZapDraftSchema:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          title: Created At
        last_user_change_at:
          type: string
          format: date-time
          title: Last User Change At
        last_updated_by_customuser_id:
          type: integer
          title: Last Updated By Customuser Id
        updated_at:
          type: string
          format: date-time
          title: Updated At
        zap_id:
          type: string
          example: d9b0fb24-f66c-4506-8160-532861785407
          pattern: '^(\d+|[a-z0-9-]+)$'
          title: Zap Id
        zdl:
          type: object
          title: Zdl
      required:
        - zdl
      title: ZapDraftSchema
    ZapEditMode:
      description: Zap edit modes
      type: string
      enum:
        - guided
        - normal
        - simple
        - unknown
      title: ZapEditMode
    ZapExecutionEngine:
      description: An enumeration.
      type: string
      enum:
        - zdl-executor
        - node-runner
      title: ZapExecutionEngine
    ZapRunMessage:
      type: object
      properties:
        body:
          type: string
          title: Body
        status:
          $ref: '#/components/schemas/ZapStatus'
      required:
        - status
      title: ZapRunMessage
    ZapRunGetResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BaseError'
          title: Errors
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ZapRunMessage'
          title: Messages
      required:
        - messages
      title: ZapRunResponse
    ZapRunPostResponse:
      type: object
      properties:
        success:
          type: boolean
          title: Success
      required:
        - messages
      title: ZapRunResponse
    ZapSubscription:
      type: object
      properties:
        step_id:
          type: string
          title: Step Id
        claim_id:
          type: string
          title: Claim Id
        trigger_type:
          $ref: '#/components/schemas/TriggerType'
        hook_url:
          type: string
          title: Hook Url
        created_at:
          type: integer
          title: Created At
        expires_at:
          type: integer
          title: Expires At
        initialized:
          type: boolean
          title: Initialized
      required:
        - step_id
        - trigger_type
        - created_at
        - initialized
      title: ZapSubscription
    ZapKind:
      description: A set of kinds of Zaps. Once set a Zap cannot change its kind.
      type: string
      enum:
        - workflow
        - transfer
      title: ZapKind
    ZapSortOrder:
      description: An enumeration.
      type: string
      enum:
        - state
        - id
        - title
        - '-title'
      title: ZapSortOrder
    ZapSchema:
      type: object
      properties:
        account_id:
          type: integer
          title: Account Id
        created_at:
          type: string
          format: date-time
          title: Created At
        current_version:
          $ref: '#/components/schemas/ZapVersionSchema'
        customuser_id:
          type: integer
          title: Customuser Id
        deleted_at:
          type: string
          format: date-time
          title: Deleted At
        description:
          type: string
          title: Description
        draft:
          $ref: '#/components/schemas/ZapDraftSchema'
        edit_mode:
          $ref: '#/components/schemas/ZapEditMode'
        execution_engine:
          $ref: '#/components/schemas/ZapExecutionEngine'
        folder_id:
          type: integer
          title: Folder Id
        id:
          type: string
          example: d9b0fb24-f66c-4506-8160-532861785407
          pattern: '^(\d+|[a-z0-9-]+)$'
          title: Id
        is_enabled:
          type: boolean
          title: Is Enabled
        kind:
          $ref: '#/components/schemas/ZapKind'
        last_disabled_at:
          type: string
          format: date-time
          title: Last Disabled At
        last_enabled_at:
          type: string
          format: date-time
          title: Last Enabled At
        last_updated_by_customuser_id:
          type: integer
          title: Last Updated By Customuser Id
        legacy_node_id:
          type: integer
          title: Legacy Node Id
        source_url:
          type: string
          format: uri
          maxLength: 2083
          minLength: 1
          title: Source Url
        title:
          type: string
          title: Title
        updated_at:
          type: string
          format: date-time
          title: Updated At
        project_id:
          type: string
          title: Project Id
      required:
        - id
        - account_id
        - customuser_id
        - kind
        - is_enabled
      title: ZapSchema
    ZDLSchema:
      type: object
      properties:
        zdl:
          type: object
          title: Zdl
      title: ZDLSchema
    BaseError:
      type: object
      properties:
        code:
          description: An application-specific error code
          type: string
          title: Code
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          title: Detail
        id:
          description: A unique identifier for this particular occurrence of the problem.
          type: string
          title: Id
        links:
          $ref: '#/components/schemas/Links'
        meta:
          description: An object containing non-standard meta-information about the error.
          type: object
          title: Meta
        source:
          $ref: '#/components/schemas/Source'
        status:
          type: integer
          maximum: 599
          minimum: 400
          title: Status
        title:
          description: 'A short, human-readable summary of the problem.'
          type: string
          title: Title
      required:
        - status
      title: BaseError
    UpdateVersionSchema:
      description: Extra details required when updating a version.
      type: object
      properties:
        customuser_id:
          type: integer
          title: Customuser Id
        description:
          type: string
          maxLength: 255
          title: Description
      required:
        - customuser_id
      title: UpdateVersionSchema
    UpdateZapSchema:
      type: object
      properties:
        account_id:
          description: DEPRECATED. Use transfer to account endpoint.
          type: integer
          deprecated: true
          title: Account Id
        customuser_id:
          description: DEPRECATED. Use transfer to owner endpoint.
          type: integer
          deprecated: true
          title: Customuser Id
        description:
          type: string
          title: Description
        folder_id:
          description: DEPRECATED. Use transfer to folder endpoint.
          type: integer
          deprecated: true
          title: Folder Id
        legacy_node_id:
          type: integer
          title: Legacy Node Id
        source_url:
          type: string
          title: Source Url
        title:
          type: string
          title: Title
        zdl:
          type: object
          title: Zdl
      title: UpdateZapSchema
    MutateTemplateZapSerializer:
      type: object
      properties:
        zdl:
          type: object
          title: Zdl
      required:
        - zdl
      title: MutateTemplateZapSerializer
    ZapVersionSchema:
      description: Shorthand details for a Zap Version.
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          title: Created At
        created_by_customuser_id:
          type: integer
          title: Created By Customuser Id
        description:
          type: string
          title: Description
        id:
          type: string
          example: d9b0fb24-f66c-4506-8160-532861785407
          pattern: '^(\d+|[a-z0-9-]+)$'
          title: Id
        last_marked_current_at:
          type: string
          format: date-time
          title: Last Marked Current At
        subscription_claim_ids:
          description: Mapping of step id to subscription claim id
          type: object
          example:
            d9b0fb24-f66c-4506-8160-532861785407: 79cde9c6-05cb-42af-a13b-732dc8b7770c
            f87aba09-459a-46b9-96ac-be6d9def1770: b4bf17f2-0878-4ae2-b880-02d51ae91aea
          title: Subscription Claim Ids
        version_number:
          type: integer
          title: Version Number
        zap_id:
          type: string
          example: d9b0fb24-f66c-4506-8160-532861785407
          pattern: '^(\d+|[a-z0-9-]+)$'
          title: Zap Id
        zdl:
          type: object
          title: Zdl
      required:
        - id
        - zap_id
      title: ZapVersionSchema
    CreateZapSchema:
      type: object
      properties:
        description:
          type: string
          title: Description
        folder_id:
          type: integer
          title: Folder Id
        kind:
          description: 'The kind of Zap. **NOTE**: This currently defaults to workflow, but will be a required field in the future'
          default: workflow
          allOf:
            - $ref: '#/components/schemas/ZapKind'
        legacy_node_id:
          type: integer
          title: Legacy Node Id
        source_url:
          type: string
          title: Source Url
        title:
          type: string
          title: Title
        zdl:
          type: object
          title: Zdl
      title: CreateZapSchema
    ZapVersionListMeta:
      type: object
      properties:
        limit:
          type: integer
          title: Limit
        cursor:
          type: string
          title: Cursor
        next_cursor:
          type: string
          title: Next Cursor
      required:
        - limit
        - cursor
        - next_cursor
      title: ZapVersionListMeta
    ZapVersionListLinks:
      type: object
      properties:
        next:
          type: string
          title: Next
      required:
        - next
      title: ZapVersionListLinks
    ZapListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ZapSchema'
          title: Results
      required:
        - results
      title: ZapListResponse
    ZapVersionListResponse:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/ZapVersionListLinks'
        meta:
          $ref: '#/components/schemas/ZapVersionListMeta'
        results:
          type: array
          items:
            $ref: '#/components/schemas/ZapVersionSchema'
          title: Results
      required:
        - results
      title: ZapVersionListResponse
    ZapVersionEntitlementResponse:
      type: object
      properties:
        unentitled_versions_exist:
          type: boolean
          title: Unentitled Versions Exist
      required:
        - unentitled_versions_exist
      title: ZapVersionEntitlementResponse
    ZapTransferFolderRequest:
      type: object
      properties:
        zap_ids:
          type: array
          items:
            type: string
          title: Zap Ids
        folder_id:
          type: integer
          title: Folder Id
      required:
        - zap_ids
        - folder_id
      title: ZapTransferFolderRequest
    ZapTransferOwnerRequest:
      type: object
      properties:
        zap_ids:
          type: array
          items:
            type: string
          title: Zap Ids
        customuser_id:
          type: integer
          title: Customuser Id
      required:
        - zap_ids
        - customuser_id
      title: ZapTransferOwnerRequest
    ZapTransferAccountRequest:
      type: object
      properties:
        zap_ids:
          type: array
          items:
            type: string
          title: Zap Ids
        account_id:
          type: integer
          title: Account Id
      required:
        - zap_ids
        - account_id
      title: ZapTransferAccountRequest
    ZapTransferResponse:
      type: object
      properties:
        successes:
          type: array
          items:
            $ref: '#/components/schemas/ZapSchema'
          title: Successes
        failures:
          type: array
          items:
            $ref: '#/components/schemas/ZapSchema'
          title: Failures
      required:
        - successes
        - failures
      title: ZapTransferResponse
    ZapStatus:
      description: Zap statuses
      type: string
      enum:
        - delayed
        - scheduled
        - pending
        - error
        - halted
        - throttled
        - held
        - filtered
        - skipped
        - success
      title: ZapStatus
    ZapMetadata:
      type: object
      properties:
        zap_id:
          type: string
          description: ID of the Zap
        title:
          type: string
          description: The title of the Zap
        owner_customuser_id:
          type: integer
          description: The ID of the user who owns the Zap
        updated_at:
          type: string
          format: date-time
          description: The last update date and time of the Zap
        is_published:
          type: bool
          description: |-
            Indicates if the Zap has ever been published
            (i.e. has a current_version)
        steps:
          type: array
          description: |-
            An array of dictionaries containing the steps in the Zap.
            The content matches the Zap layout (much like the ZDL structure).
          items:
            $ref: '#/components/schemas/ZapMetadataStep'
      required:
        - zap_id
        - title
        - owner_customuser_id
        - updated_at
        - steps
    ZapMetadataStep:
      type: object
      properties:
        title:
          type: string
          description: The title of the step
        id:
          type: string
          description: The ID of the step
        app:
          type: string
          description: The app (selected_api) associated with the step
        action:
          type: string
          description: App action
        type:
          type: string
          description: Step type (read, write, etc.)
        steps:
          type: array
          description: Optional list of child ZapMetadataSteps
      required:
        - id
        - app
        - action
        - type
  securitySchemes:
    JWT:
      type: apiKey
      in: header
      name: Gulliver-jwt
      description: An encrypted JWT generated from the request issuing service
security:
  - JWT: []
