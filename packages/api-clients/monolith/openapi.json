{
    "openapi": "3.1.0",
    "info": {
        "title": "Zapier API",
        "description": "",
        "termsOfService": "https://zapier.com/terms/",
        "contact": {
            "email": "contact@zapier.com"
        },
        "license": {
            "name": ""
        },
        "version": "e6e02086c8d63eac0f1ab4a7db2b4f6a36cb8e92"
    },
    "security": [
        {
            "Basic": []
        }
    ],
    "paths": {
        "/api/audit-logs/v1/events": {
            "get": {
                "operationId": "api_audit-logs_v1_events_list",
                "description": "Get activity for actions performed on an account. Can be filtered\nby a list of actors, and date range. For zap actions, also allows\nfiltering by app and by folders.\nPlease see the parameters above for a comprehensive filter list.",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query to be used for filtering events.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "object_ids",
                        "in": "query",
                        "description": "The object ids for which events are to be retrieved",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "actions",
                        "in": "query",
                        "description": "Comma-separated list of performed actions to filter events by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "object_type",
                        "in": "query",
                        "description": "Type of object for which to retrieve events data",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Event Activity"
                ]
            },
            "parameters": []
        },
        "/api/checkpoint/v1/account-restrictions/": {
            "get": {
                "operationId": "api_checkpoint_v1_account-restrictions_list",
                "summary": "Endpoint for setting account level restrictions.",
                "description": "Allows setting publish approval flows on or off at the account level.\nThis data is stored in the `Relationship` model of the `identity`\ndatabase, via `identity.access` interfaces.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Checkpoint"
                ]
            },
            "put": {
                "operationId": "api_checkpoint_v1_account-restrictions_update",
                "summary": "Endpoint for setting account level restrictions.",
                "description": "Allows setting publish approval flows on or off at the account level.\nThis data is stored in the `Relationship` model of the `identity`\ndatabase, via `identity.access` interfaces.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Checkpoint"
                ]
            },
            "parameters": []
        },
        "/api/checkpoint/v1/approvals/": {
            "get": {
                "operationId": "api_checkpoint_v1_approvals_list",
                "summary": "Checkpoint service proxy for Publish Approval requests.",
                "description": "For full API documentation, see the [Checkpoint service](https://checkpoint.k8s.zapier.com/api/schema/)",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Checkpoint"
                ]
            },
            "post": {
                "operationId": "api_checkpoint_v1_approvals_create",
                "summary": "Checkpoint service proxy for Publish Approval requests.",
                "description": "For full API documentation, see the [Checkpoint service](https://checkpoint.k8s.zapier.com/api/schema/)",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Checkpoint"
                ]
            },
            "parameters": []
        },
        "/api/checkpoint/v1/approvals/{id}/": {
            "get": {
                "operationId": "api_checkpoint_v1_approvals_read",
                "summary": "Checkpoint service proxy for Publish Approval requests.",
                "description": "For full API documentation, see the [Checkpoint service](https://checkpoint.k8s.zapier.com/api/schema/)",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Checkpoint"
                ]
            },
            "put": {
                "operationId": "api_checkpoint_v1_approvals_update",
                "summary": "Checkpoint service proxy for Publish Approval requests.",
                "description": "For full API documentation, see the [Checkpoint service](https://checkpoint.k8s.zapier.com/api/schema/)",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Checkpoint"
                ]
            },
            "patch": {
                "operationId": "api_checkpoint_v1_approvals_partial_update",
                "summary": "Checkpoint service proxy for Publish Approval requests.",
                "description": "For full API documentation, see the [Checkpoint service](https://checkpoint.k8s.zapier.com/api/schema/)",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Checkpoint"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/nap/internal/emails/send/": {
            "post": {
                "operationId": "api_nap_internal_emails_send_create",
                "description": "Sends an email using mailgun and returns the response.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendEmailResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/nap/internal/emails/send_canvas_notification_email/": {
            "post": {
                "operationId": "api_nap_internal_emails_send_canvas_notification_email_create",
                "description": "Sends an email using mailgun and returns the response.\nThis is a copy of the above logic, but also hydrates in user data\ninto the template_context's comment(s).\n\nThis is meant to be a TEMPORARY WORKAROUND because the\n/api/v4/accounts/:id/members/:member_id/ endpoint does not support S2S auth yet.\nThis was the path of least resistance to getting email notifications for\nCanvas thread comments working and _shipped_.",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/v1/assets/": {
            "get": {
                "operationId": "api_v1_assets_list",
                "description": "",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "asset_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "zap",
                                "canvas",
                                "interface",
                                "table",
                                "chatbot"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetFetch"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/v1/controlled-apps-strategies/": {
            "get": {
                "operationId": "api_v1_controlled-apps-strategies_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControlStrategy"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "put": {
                "operationId": "api_v1_controlled-apps-strategies_update",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAccessControlStrategy"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControlStrategy"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControlStrategy"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/v1/projects/": {
            "get": {
                "operationId": "api_v1_projects_list",
                "description": "",
                "parameters": [
                    {
                        "name": "owner_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectsList"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "post": {
                "operationId": "api_v1_projects_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Projects"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/v1/projects/{id}/": {
            "get": {
                "operationId": "api_v1_projects_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "patch": {
                "operationId": "api_v1_projects_partial_update",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectsUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectsList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "delete": {
                "operationId": "api_v1_projects_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid project_id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/projects/{id}/share/": {
            "post": {
                "operationId": "api_v1_projects_share",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ShareAndUnshareRequest"
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid project id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/projects/{id}/shares/": {
            "get": {
                "operationId": "api_v1_projects_shares",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid project id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/projects/{id}/unshare/": {
            "post": {
                "operationId": "api_v1_projects_unshare",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ShareAndUnshareRequest"
                },
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid project id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/projects/{projects_pk}/assets/": {
            "get": {
                "operationId": "api_v1_projects_assets_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectAsset"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "post": {
                "operationId": "api_v1_projects_assets_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAsset"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectAsset"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid, project_id, asset type or asset id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": [
                {
                    "name": "projects_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/projects/{projects_pk}/assets/{asset_identifier}/": {
            "delete": {
                "operationId": "api_v1_projects_assets_delete",
                "description": "",
                "parameters": [
                    {
                        "name": "asset_identifier",
                        "in": "path",
                        "description": "A composite id including the asset type and asset id using this format <asset_type>:<asset_id>.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid, project_id, asset type or asset id"
                    },
                    "403": {
                        "description": "Permission denied"
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": [
                {
                    "name": "projects_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "asset_identifier",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/search/zaps/": {
            "get": {
                "operationId": "api_v1_search_zaps_list",
                "description": "",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ZapSearch"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/v3/data/export/completion": {
            "post": {
                "operationId": "api_v3_data_export_completion_create",
                "description": "This endpoint receives a POST request from the exporter when the userdata export is complete\nfor each of the user accounts.\n\nExample Request:\nPOST v3/data/export/completion\n{\n    \"export_job_id\": \"customuser_id/action_id/account_id\",\n    \"export_location\": \"https://s3.amazonaws.com/...\",\n}\n\nExample Responses:\n- 200 OK { \"message\": \"Completed.\"}\n- 400 Bad Request { \"errors\": [\"Param xxx is required.\", \"Malformed xxx.\"]}\n- 404 Not Found { \"errors\": [\"No action found.\"]}\n- 409 Conflict {'message': 'Duplicate.'}",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/v4/abtesting/identity/{identity}/assign_experiment/": {
            "post": {
                "operationId": "api_v4_abtesting_identity_assign_experiment",
                "summary": "/api/v4/abtesting/identity/<identity_id>/assign_experiment/",
                "description": "An endpoint to assign an experiment to an identity.\nPass in the experiment_collection_slug as the payload.\nReturns the assigned variant.",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Abtesting"
                ]
            },
            "parameters": [
                {
                    "name": "identity",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/account-discovery/": {
            "get": {
                "operationId": "api_v4_account-discovery_list",
                "summary": "Deduce the best account for sign in for this user",
                "description": "We need to figure out if the user can sign in with credentials\nor with SAML, as well as the best account ID to sign in given\nan email address and an optional account_id",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Account Discovery"
                ]
            },
            "parameters": []
        },
        "/api/v4/accounts/": {
            "get": {
                "operationId": "api_v4_accounts_list",
                "description": "",
                "parameters": [
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Filters joinable accounts by access level. Currently only supports `auto_join`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BillingAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": []
        },
        "/api/v4/accounts/access/": {
            "get": {
                "operationId": "api_v4_accounts_access",
                "description": "",
                "parameters": [
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Filters joinable accounts by access level. Currently only supports `auto_join`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BillingAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": []
        },
        "/api/v4/accounts/{account_id}/campaignoffers/{campaign_slug}": {
            "get": {
                "operationId": "api_v4_accounts_campaignoffers_read",
                "description": "Returns list of offer data associated with campaigns",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "campaign_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_id}/invoice-items/": {
            "post": {
                "operationId": "api_v4_accounts_invoice-items_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/controlled-apps/": {
            "get": {
                "operationId": "api_v4_accounts_controlled-apps_list",
                "summary": "Endpoint for denied and allowed apps",
                "description": "The app access control allows a team administrator\nto deny certain apps.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AppAccessControl"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_controlled-apps_create",
                "description": "Overwrite create method so that we can ensure schema generation\nwith the appropriate serializer.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "The slug of the app that is restricted",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControl"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/controlled-apps/users/": {
            "post": {
                "operationId": "api_v4_accounts_controlled-apps_get_app_users",
                "description": "Search the users that use the given app",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "slug"
                                ],
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "The slug of the app to use for searching users",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "slug"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "slug": {
                                            "description": "The slug of the app to use for searching users",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/controlled-apps/{app_pk}/members/": {
            "get": {
                "operationId": "api_v4_accounts_controlled-apps_members_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AppAccessControlMembership"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_controlled-apps_members_create",
                "description": "Add the given user to this controlled app",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAccessControlMembership"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControlMembership"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "app_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/controlled-apps/{app_pk}/members/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_controlled-apps_members_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControlMembership"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_controlled-apps_members_delete",
                "description": "Remove the member from the given controlled app",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "app_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/controlled-apps/{app_pk}/teams/": {
            "get": {
                "operationId": "api_v4_accounts_controlled-apps_teams_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AppAccessControlTeamMembership"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_controlled-apps_teams_create",
                "summary": "Control the underlying app with a team ID or with all team members",
                "description": "This API expects a `team_id` parameter sent as a payload, in the form\n`{team_id: id|`all`}`\n\nIf it is sent as an `id`, it needs to be the ID of an already existing team.\nThat team will be added to the underlying controlled app, either as a permitted\nor as a restricted operation.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAccessControlTeamMembership"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControlTeamMembership"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "app_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/controlled-apps/{app_pk}/teams/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_controlled-apps_teams_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControlTeamMembership"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_controlled-apps_teams_delete",
                "summary": "Remove the given team from the underlying controlled app",
                "description": "The app can be restricted or permitted for a team if the URL has a\nteam ID, or can be controlled from everyone in the account,\nif the URL uses the special `all` ID.\n\n`all` represents all users in a team account, which is separate\nthan all the members in a team workspace.",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "app_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this team.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/controlled-apps/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_controlled-apps_read",
                "summary": "Endpoint for denied and allowed apps",
                "description": "The app access control allows a team administrator\nto deny certain apps.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAccessControl"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_controlled-apps_delete",
                "summary": "Endpoint for denied and allowed apps",
                "description": "The app access control allows a team administrator\nto deny certain apps.",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Access Control App.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/domain-requests/": {
            "get": {
                "operationId": "api_v4_accounts_domain-requests_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DomainVerificationRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_domain-requests_create",
                "description": "Custom POST method handler to track verification request creation.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/DomainVerificationRequest"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainVerificationRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/domain-requests/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_domain-requests_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainVerificationRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_domain-requests_update",
                "description": "Custom PUT method handler to refresh the expiry period for the\nverification request object.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/DomainVerificationRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainVerificationRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_domain-requests_partial_update",
                "description": "Custom PATCH method handler to check domain",
                "requestBody": {
                    "$ref": "#/components/requestBodies/DomainVerificationRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainVerificationRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_domain-requests_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Domain Verification Request.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/domains/": {
            "get": {
                "operationId": "api_v4_accounts_domains_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrganizationDomain"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/domains/{domain_pk}/members/": {
            "get": {
                "operationId": "api_v4_accounts_domains_members_list",
                "description": "",
                "parameters": [
                    {
                        "name": "is_company_member",
                        "in": "query",
                        "description": "Filter by membership to the company",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by the email of members",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_confirmed",
                        "in": "query",
                        "description": "Filter by confirmed or not confirmed emails",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_mfa_enabled",
                        "in": "query",
                        "description": "Filter by multifactor authentication enablement",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "domain_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/domains/{domain_pk}/members/export/": {
            "post": {
                "operationId": "api_v4_accounts_domains_members_export_members",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/api_v4_accounts_domains_members_export_membersData"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "domain_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/domains/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_domains_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationDomain"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this organization domain.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/experts/": {
            "get": {
                "operationId": "api_v4_accounts_experts_list",
                "description": "This endpoint is used to retrieve all experts associated with the context account",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ExpertClientRelationship"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_experts_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpertClientRelationship"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpertClientRelationship"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/feature-enrollment/": {
            "get": {
                "operationId": "api_v4_accounts_feature-enrollment_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AccountFeatureEnrollment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/feature-enrollment/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_feature-enrollment_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountFeatureEnrollment"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_feature-enrollment_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountFeatureEnrollment"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountFeatureEnrollment"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_feature-enrollment_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountFeatureEnrollment"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountFeatureEnrollment"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account feature enrollment.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/folders/": {
            "get": {
                "operationId": "api_v4_accounts_folders_list",
                "description": "",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filters folders by the saved title.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Filters folder with a customuser with a first_name, last_name or username matching the provided term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Folder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_folders_create",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Folder"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Folder"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/folders/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_folders_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Folder"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_folders_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Folder"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Folder"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_folders_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Folder"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Folder"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_folders_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this folder.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/identity-providers/": {
            "get": {
                "operationId": "api_v4_accounts_identity-providers_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/IdentityProvider"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_identity-providers_create",
                "description": "Custom POST method handler to track identity provider creation.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/IdentityProvider"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/identity-providers/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_identity-providers_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_identity-providers_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/IdentityProvider"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_identity-providers_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/IdentityProvider"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_identity-providers_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this identity provider.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/identity-providers/{id}/notify_members/": {
            "post": {
                "operationId": "api_v4_accounts_identity-providers_notify_members",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/IdentityProvider"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this identity provider.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/internal/offers/campaigns/{campaign_id}/": {
            "get": {
                "operationId": "api_v4_accounts_internal_offers_campaigns_list",
                "description": "Separate ViewSet for managing requests from internal approved services",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CampaignOffer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_internal_offers_campaigns_create",
                "description": "Creating an Offer can only be performed by an approve-listed Service\n(A call that comes from within Zapier's owned services)",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CampaignOffer"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "campaign_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/internal/offers/campaigns/{campaign_id}/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_internal_offers_campaigns_read",
                "description": "Separate ViewSet for managing requests from internal approved services",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_internal_offers_campaigns_update",
                "description": "Separate ViewSet for managing requests from internal approved services",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CampaignOffer"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_internal_offers_campaigns_partial_update",
                "description": "Separate ViewSet for managing requests from internal approved services",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CampaignOffer"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_internal_offers_campaigns_delete",
                "description": "Separate ViewSet for managing requests from internal approved services",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "campaign_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this campaign offer.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/invitations/": {
            "get": {
                "operationId": "api_v4_accounts_invitations_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Invitation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_invitations_create",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Invitation"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/invitations/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_invitations_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_invitations_delete",
                "description": "Revoke the given invitation",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this invitation.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/invitations/{id}/resend/": {
            "post": {
                "operationId": "api_v4_accounts_invitations_resend",
                "summary": "Resend the given invitation",
                "description": "If the invitation is visible to the user doing the action,\nthen it will be resent, otherwise a 404 will be returned.\n\nIf the user is not a admin or owner then a 403 is returned\n\nIf the user's name is spam then a 400 is returned.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Invitation"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this invitation.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/members/": {
            "get": {
                "operationId": "api_v4_accounts_members_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filters members whose first_name, last_name or username matches the provided term. (will not filter if ids is passed)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Get members by their ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filters members by role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FullAccountMember"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/members/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_members_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullAccountMember"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_members_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FullAccountMember"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullAccountMember"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_members_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FullAccountMember"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullAccountMember"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_members_delete",
                "description": "Remove the given user from this account",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/memberships/": {
            "get": {
                "operationId": "api_v4_accounts_memberships_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filters teams whose name matches the provided term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SlimTeamRead"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/memberships/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_memberships_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlimTeamRead"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this team.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/offers/": {
            "post": {
                "operationId": "api_v4_accounts_offers_create",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CampaignOffer"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/offers/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_offers_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_offers_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CampaignOffer"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_offers_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CampaignOffer"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignOffer"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this campaign offer.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/provision/": {
            "get": {
                "operationId": "api_v4_accounts_provision_list",
                "description": "API for configuring user provisioning",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AccountProvision"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_provision_create",
                "description": "Custom POST method handler to track account provision creation.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountProvision"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountProvision"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/provision/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_provision_read",
                "description": "API for configuring user provisioning",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountProvision"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_provision_update",
                "description": "API for configuring user provisioning",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountProvision"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountProvision"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_provision_partial_update",
                "description": "API for configuring user provisioning",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountProvision"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountProvision"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_provision_delete",
                "description": "API for configuring user provisioning",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account provision.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/provision/{id}/refresh_token/": {
            "post": {
                "operationId": "api_v4_accounts_provision_refresh_token",
                "description": "Refresh the token of the underlying provision instance",
                "requestBody": {
                    "$ref": "#/components/requestBodies/AccountProvision"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountProvision"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account provision.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/teams/": {
            "get": {
                "operationId": "api_v4_accounts_teams_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filters teams whose name matches the provided term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TeamRead"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_teams_create",
                "description": "Overwrite create method so that we can ensure schema generation\nwith the appropriate serializer.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TeamWrite"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRead"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/teams/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_teams_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRead"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_teams_update",
                "description": "Overwrite update method so that we can ensure schema generation\nwith the appropriate serializer.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TeamWrite"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRead"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_teams_partial_update",
                "description": "Overwrite partial_update method so that we can ensure schema generation\nwith the appropriate serializer.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TeamWrite"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRead"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_teams_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this team.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/teams/{team_pk}/members/": {
            "get": {
                "operationId": "api_v4_accounts_teams_members_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filters team members whose first_name, last_name or username matches the provided term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TeamMemberRead"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_teams_members_create",
                "description": "Overwrite create method so that we can ensure schema generation\nwith the appropriate serializer.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMemberWrite"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMemberRead"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "team_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/teams/{team_pk}/members/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_teams_members_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamMemberRead"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "delete": {
                "operationId": "api_v4_accounts_teams_members_delete",
                "summary": "Remove the authenticated user from this team",
                "description": "You can remove yourself from a team as long as you\nare not the team owner. If you are the team owner,\ntransfer the team to someone else before leaving.",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "team_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this team member.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/teams/{team_pk}/requests/": {
            "get": {
                "operationId": "api_v4_accounts_teams_requests_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filters team member requests where the requestor's first_name, last_name or username matches the provided term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TeamRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "operationId": "api_v4_accounts_teams_requests_create",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TeamRequestWrite"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "team_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/teams/{team_pk}/requests/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_teams_requests_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_teams_requests_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TeamRequestWrite"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_teams_requests_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TeamRequestWrite"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "team_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this team request.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/virtual-folders/": {
            "get": {
                "operationId": "api_v4_accounts_virtual-folders_list",
                "description": "Return a list of virtual folders.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualFolder"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{account_pk}/virtual-folders/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_virtual-folders_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualFolder"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "account_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/": {
            "get": {
                "operationId": "api_v4_accounts_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "operationId": "api_v4_accounts_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/BillingAccount"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "patch": {
                "operationId": "api_v4_accounts_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/BillingAccount"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/app-stats/": {
            "get": {
                "operationId": "api_v4_accounts_get_app_stats",
                "description": "",
                "parameters": [
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Return stats for specific selected_apis (comma-separated list)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountAppStatsResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/discounts/": {
            "get": {
                "operationId": "api_v4_accounts_discounts",
                "description": "Return a list of serialized discounts that have been applied\nto an account.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Discount"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/entitlements/": {
            "get": {
                "operationId": "api_v4_accounts_entitlements",
                "description": "Return a list of entitlements for the account.",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "A comma-separated list of fields to retrieve in the response. Defaults to all fields.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountEntitlements"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/join/": {
            "post": {
                "operationId": "api_v4_accounts_join",
                "description": "Implements join functionality for domain members who meet the\ncriteria for joining their organization's company account.",
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/metered-pricing-opt-in/": {
            "post": {
                "operationId": "api_v4_accounts_metered_pricing_opt_in",
                "description": "Opt-in to metered pricing for the account.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/policy/": {
            "put": {
                "operationId": "api_v4_accounts_set_policy",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAccessPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/polling-interval-opt-in/": {
            "post": {
                "operationId": "api_v4_accounts_polling_interval_opt_in",
                "description": "Opt-in to faster polling interval for the account, after it has been\nmigrated to a higher plan.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/private-apps/": {
            "get": {
                "operationId": "api_v4_accounts_get_private_apps",
                "description": "Get private apps in use by an account and data about them.",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Return apps whose title matches the provided string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Return apps with specific selected_apis (comma-separated list)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to include in the response",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The number of results to offset the response by",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountPrivateAppsResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/public-apps/": {
            "get": {
                "operationId": "api_v4_accounts_get_public_apps",
                "description": "Get public apps in use by an account and data about them.",
                "parameters": [
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Return apps in use by a particular customuser id; currently limited to the requesting user",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_shared",
                        "in": "query",
                        "description": "Return only apps whose auths have been shared with the requesting user",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Return apps whose title matches the provided string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to include in the response",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The number of results to offset the response by",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountAppsResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/recommend-plan/": {
            "get": {
                "operationId": "api_v4_accounts_recommend_plan",
                "description": "Recommend a plan based on the role/industry of the account owner",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPlanRecommendation"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/recommended-services/": {
            "get": {
                "operationId": "api_v4_accounts_recommended_services",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThinService"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/recommended-zap-templates/": {
            "get": {
                "operationId": "api_v4_accounts_recommended_zap_templates",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThinGuidedRecipe"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/subscription/": {
            "patch": {
                "operationId": "api_v4_accounts_modify_subscription",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountModifySubscription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountModifySubscription"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/task-usage/": {
            "get": {
                "operationId": "api_v4_accounts_get_task_usage",
                "summary": "Get the task usage for the current account and specified facets",
                "description": "The facets can be specified via query params. Multiple facets can\nbe used in tandem, and they will all be taken in account when generating\nthe aggregation. That is, passing both `folder_id` and `app` means that\nthe aggregation will be done on the tasks belonging to Zaps that are\nin the given folder and use the said app.\n\nThe following facets are supported:\n\n* `customuser_id`\n   Generate the task usage for the given customuser. The current user needs\n   to be an account member to be able to view the tasks of a different\n   member.\n\n* `folder_id`\n   Generate the task usage for the Zaps found in the given folder ID\n\n* `app`\n   Generate the task usage for the Zaps using this app\n\n* `customuser_ids`\n   Like `customuser_id`, but looks for Zaps owned by any of the\n   specified customusers.\n\n* `folder_ids`\n   Like `folder_id`, but looks for Zaps in any of the specified folders\n\n* `kinds`\n  Look for Zaps of any of the specified kinds (workflow, transfer, etc.)\n\n* `root_ids`\n   Only looks for Zaps with these ids\n\n* `selected_apis`\n   Like `app`, but looks for Zaps with any of the specified\n   apps/selected_api values.\n\n* `period_start` and `period_end`\n\n  Generate the task usage between the specified period.\n  These dates should be in ISO-8601 format, e.g .` YYYY-MM-DDTHH:MM:SS.mmmmmm`, but we also\n  support the following variation `YYYY-MM-DD`.\n  The dates will be converted to the timezone of the user doing the action.\n\n  If the difference between `period_start` and `period_end` is large enough, the aggregations\n  will be done for each individual month between the start and the end. Otherwise daily\n  aggregations will be computed.\n\nThe endpoint will return a dictionary of stats, having the following structure:\n\n* `interval`: Whether the aggregation buckets in `tasks_breakdown` are `daily`\n   or `monthly`\n* `total_tasks_count`: The total number of tasks in the given period\n* `billable_tasks_count`: The total number of billable tasks in the given period\n* `tasks_breakdown`\n   A per date breakdown for the tasks. Each entry will be a dictionary mapping\n   from a date to a list of status counts for that day / month.\n   The task breakdown is either per day or per month, depending how big the\n   gap between `period_start` and `period_end` is.\n* `status_aggregation`: A dictionary of task statuses to counts\n\n        {\n            \"total_tasks_count\": <int>\n            \"status_aggregation\": {\n                \"status\": <int>,\n                ...\n            },\n            \"tasks_breakdown\": {\n                \"<day>\": {\n                    \"status\":  <int>\n                },\n                ...\n            }\n        }",
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "customuser_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "app",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "period_start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "period_end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "root_ids",
                        "in": "query",
                        "description": "Comma-separated list of Zap node id values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of selected_api values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskUsageResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/top-users/": {
            "get": {
                "operationId": "api_v4_accounts_top_users",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountTopUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/top-zaps/": {
            "get": {
                "operationId": "api_v4_accounts_get_top_zaps",
                "summary": "Get the top Zaps for the current account and specified facets",
                "description": "This view powers up parts of the usage dashboard.\nThe facets can be specified via query params. Multiple facets can\nbe used in tandem, and they will all be taken in account when generating\nthe top Zaps. That is, passing both `folder_id` and `app` means that\nthe aggregation will be done on the tasks belonging of Zaps that are\nin the given folder and use the said app.\n\nThe following facets are supported:\n\n* `customuser_id`\n\n   Find the top Zaps for the given customuser. The current user needs\n   to be an account member to be able to view the tasks of a different\n   member.\n\n* `folder_id`\n\n   Order the Zaps found in `folder_id` by their usage.\n\n* `app`\n\n   Find the top Zaps that use this app\n\n* `period_start` and `period_end`\n\n   Find the top Zaps between the specified period.\n   These dates should be in ISO-8601 format, e.g .` YYYY-MM-DDTHH:MM:SS.mmmmmm`, but we also\n   support the following variation `YYYY-MM-DD`.\n   The dates will be converted to the timezone of the user doing the action.\n\n* `customuser_ids`\n\n   Like `customuser_id`, but looks for Zaps owned by any of the\n   specified customusers.\n\n* `folder_ids`\n\n   Like `folder_id`, but looks for Zaps in any of the specified\n   folders.\n\n* `kinds`\n\n   Look for Zaps of any of the specified kinds (workflow, transfer, etc.)\n\n* `root_ids`\n\n   Only looks for Zaps with these ids\n\n* `selected_apis`\n\n   Like `app`, but looks for Zaps with any of the specified\n   apps/selected_api values.",
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "customuser_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "app",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "period_start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "period_end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "root_ids",
                        "in": "query",
                        "description": "Comma-separated list of Zap node id values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of selected_api values",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TopZaps"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/trial-report/": {
            "get": {
                "operationId": "api_v4_accounts_trial_report",
                "description": "Get trial statistics report for the current account",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountTrialReport"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/accounts/{id}/usage/": {
            "get": {
                "operationId": "api_v4_accounts_usage",
                "description": "Get the zap usage for the current account",
                "parameters": [
                    {
                        "name": "timeframe",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountUsage"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/actions/controls/": {
            "patch": {
                "operationId": "api_v4_actions_controls",
                "description": "The endpoint for updating action controls.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActionControlsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionControlsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "parameters": []
        },
        "/api/v4/actions/{var}/": {
            "get": {
                "operationId": "api_v4_actions_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMeta"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "parameters": [
                {
                    "name": "var",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/app-directory/categories/": {
            "get": {
                "operationId": "api_v4_app-directory_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slugs",
                        "in": "query",
                        "description": "A comma separated list of slugs to filter the list of Category objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A comma separated list of ids to filter the list of Category objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Specifies what role the categories should be. Defaults to \"parent\".",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "parent",
                                "child",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/service_category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "App Directory"
                ]
            },
            "parameters": []
        },
        "/api/v4/app-directory/categories/{slug}/": {
            "get": {
                "operationId": "api_v4_app-directory_categories_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_category"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "App Directory"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/app-directory/categories/{slug}/apps/": {
            "get": {
                "operationId": "api_v4_app-directory_categories_apps",
                "description": "Returns all of the apps associated with this child apps of this category.",
                "parameters": [
                    {
                        "name": "canonical_id",
                        "in": "query",
                        "description": "The canonical ID(s). Multiple canonical IDs can be provided by including multiple `canonical_id` query parameters.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_upcoming",
                        "in": "query",
                        "description": "Specify whether to exclude upcoming apps.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title_search",
                        "in": "query",
                        "description": "A search query against the title.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title_starts_with",
                        "in": "query",
                        "description": "Find services whose title starts with the search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The slug of the related category to filter against.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "featured_category_slug",
                        "in": "query",
                        "description": "The slug of the featured category to return apps for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_built_in",
                        "in": "query",
                        "description": "Specifies if a service is built-in.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_slugs",
                        "in": "query",
                        "description": "A comma separated list of app slugs to exclude.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paired_category_slug",
                        "in": "query",
                        "description": "The slug of the paired category to return apps for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma separated list of selected APIs to filter for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "including_is_app_admin",
                        "in": "query",
                        "description": "Toggles the inclusion of services where the authenticated user is associated with an app as an admin",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "including_is_app_collaborator",
                        "in": "query",
                        "description": "Toggles the inclusion of services where the authenticated user is associated with an app as a collaborator",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "noun",
                        "in": "query",
                        "description": "The slug of the related noun to filter against.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_in_zap_template_with",
                        "in": "query",
                        "description": "A service slug that restricts results to other apps that are in Zap Templates with it.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaginatedAppList"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "App Directory"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "You should **not** change this after it is public!",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/app-directory/categories/{slug}/children/": {
            "get": {
                "operationId": "api_v4_app-directory_categories_children",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_category"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "App Directory"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/appextensions/proxy/{which_endpoint}/": {
            "get": {
                "operationId": "api_v4_appextensions_proxy_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "post": {
                "operationId": "api_v4_appextensions_proxy_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "put": {
                "operationId": "api_v4_appextensions_proxy_update",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "patch": {
                "operationId": "api_v4_appextensions_proxy_partial_update",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "delete": {
                "operationId": "api_v4_appextensions_proxy_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "parameters": [
                {
                    "name": "which_endpoint",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/appextensions/proxy/{which_endpoint}/{entry_id}/": {
            "get": {
                "operationId": "api_v4_appextensions_proxy_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "post": {
                "operationId": "api_v4_appextensions_proxy_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "put": {
                "operationId": "api_v4_appextensions_proxy_update",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "patch": {
                "operationId": "api_v4_appextensions_proxy_partial_update",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "delete": {
                "operationId": "api_v4_appextensions_proxy_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "parameters": [
                {
                    "name": "which_endpoint",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "entry_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/appextensions/proxy/{which_endpoint}/{entry_id}/{subpath}/": {
            "get": {
                "operationId": "api_v4_appextensions_proxy_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "post": {
                "operationId": "api_v4_appextensions_proxy_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "put": {
                "operationId": "api_v4_appextensions_proxy_update",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "patch": {
                "operationId": "api_v4_appextensions_proxy_partial_update",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "delete": {
                "operationId": "api_v4_appextensions_proxy_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Appextensions"
                ]
            },
            "parameters": [
                {
                    "name": "which_endpoint",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "entry_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "subpath",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/apps/": {
            "get": {
                "operationId": "api_v4_apps_list",
                "description": "",
                "parameters": [
                    {
                        "name": "canonical_id",
                        "in": "query",
                        "description": "The canonical ID(s). Multiple canonical IDs can be provided by including multiple `canonical_id` query parameters.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_upcoming",
                        "in": "query",
                        "description": "Specify whether to exclude upcoming apps.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title_search",
                        "in": "query",
                        "description": "A search query against the title.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title_starts_with",
                        "in": "query",
                        "description": "Find services whose title starts with the search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The slug of the related category to filter against.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "featured_category_slug",
                        "in": "query",
                        "description": "The slug of the featured category to return apps for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_built_in",
                        "in": "query",
                        "description": "Specifies if a service is built-in.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_slugs",
                        "in": "query",
                        "description": "A comma separated list of app slugs to exclude.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paired_category_slug",
                        "in": "query",
                        "description": "The slug of the paired category to return apps for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma separated list of selected APIs to filter for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "including_is_app_admin",
                        "in": "query",
                        "description": "Toggles the inclusion of services where the authenticated user is associated with an app as an admin",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "including_is_app_collaborator",
                        "in": "query",
                        "description": "Toggles the inclusion of services where the authenticated user is associated with an app as a collaborator",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "noun",
                        "in": "query",
                        "description": "The slug of the related noun to filter against.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_in_zap_template_with",
                        "in": "query",
                        "description": "A service slug that restricts results to other apps that are in Zap Templates with it.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/App"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Apps"
                ]
            },
            "parameters": []
        },
        "/api/v4/apps/{app_slug}/discover-zap-templates/": {
            "get": {
                "operationId": "api_v4_apps_discover-zap-templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DiscoverZapTemplates"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Apps"
                ]
            },
            "parameters": [
                {
                    "name": "app_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/apps/{app_slug}/discover-zap-templates/{id}/": {
            "get": {
                "operationId": "api_v4_apps_discover-zap-templates_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscoverZapTemplates"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Apps"
                ]
            },
            "parameters": [
                {
                    "name": "app_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this discovery page.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/apps/{slug}/": {
            "get": {
                "operationId": "api_v4_apps_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Apps"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "You should **not** change this after it is public!",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/apps/{slug}/exist/": {
            "get": {
                "operationId": "api_v4_apps_exist",
                "description": "Check if a service exists, return 404 if it doesn't\nIf an app exists, return simple service data without querying category",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Apps"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "You should **not** change this after it is public!",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/authentications/": {
            "get": {
                "operationId": "api_v4_authentications_list",
                "summary": "List Authentications",
                "description": "List all authentications visible to the user.",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Filter authentications by the given account id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Filter authentications by the given owner. A predefined `me` filter is also supported, which will filter the Authentications owned by the current logged in user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_slug",
                        "in": "query",
                        "description": "Filter authentications by the given Service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_api",
                        "in": "query",
                        "description": "Filter authentications by the given selected_api.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Get authentications by their ids.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_destination_selected_api",
                        "in": "query",
                        "description": "Include authentications with destination_selected_api (Consumer Gmail secondary authentication). Default is true.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exclude_unusable",
                        "in": "query",
                        "description": "Exclude authentications that are not usable by the current logged in user. By default, all authentications are returned if requested by an admin/owner user, so set this to true if you want auths that they can use. Default is false.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "versionless_selected_api",
                        "in": "query",
                        "description": "Retrieve all accessable auths across all versions that match the provided versionless selected api.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Authentication"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": []
        },
        "/api/v4/authentications/create/": {
            "post": {
                "operationId": "api_v4_authentications_create_auth",
                "summary": "Create Authentication",
                "description": "Allows the creation of Authentication objects directly; only feasibly\nused by the Public API as partners are the ones who hold their users'\naccess tokens.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Authentication"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": []
        },
        "/api/v4/authentications/user-count/": {
            "post": {
                "operationId": "api_v4_authentications_user-count_list",
                "summary": "Counts of Authentications API",
                "description": "When provided a list of customuser_ids, returns a list of objects showing how many\nauthentication records each user has.\n\nPOST a list of customuser_ids in a JSON body to fetch the list of counts for those users.\nAny user not found will be returned in the response with an auth count of 0\n\nTo limit the scope of the lookup to a single account, it must be passed in using the\n`account_id` in the query string",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthCustomUserCountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthCustomUserCountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthCustomUserCountResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": []
        },
        "/api/v4/authentications/zap-count/": {
            "get": {
                "operationId": "api_v4_authentications_zap-count_list",
                "summary": "List visible authentication ids and how many Zaps use them",
                "description": "Lists the authentications visible to the calling user and how many Zaps\nuse each of them.",
                "parameters": [
                    {
                        "name": "selected_api",
                        "in": "query",
                        "description": "A selected_api to filter the list of Authentications to.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuthZapCountResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": []
        },
        "/api/v4/authentications/{authentication_pk}/members/": {
            "get": {
                "operationId": "api_v4_authentications_members_list",
                "description": "API for accessing the members with which auths have been shared",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SharedAuthenticationMember"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "post": {
                "operationId": "api_v4_authentications_members_create",
                "description": "Share the authentication with the given customuser.\n\n            The authentication can be shared with the given customuser\n            only if the user that does the action is the authentication's owner.\n",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SharedAuthenticationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedAuthenticationMember"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "authentication_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/authentications/{authentication_pk}/members/{id}/": {
            "get": {
                "operationId": "api_v4_authentications_members_read",
                "description": "API for accessing the members with which auths have been shared",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedAuthenticationMember"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "delete": {
                "operationId": "api_v4_authentications_members_delete",
                "summary": "Unshare the authentication from the given customuser",
                "description": "The authentication can be unshared with the given customuser\nonly if the user that does the action can see the authentication.\nThe current owner of the authentication cannot be removed.",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "authentication_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/authentications/{authentication_pk}/teams/": {
            "get": {
                "operationId": "api_v4_authentications_teams_list",
                "description": "API for accessing the teams with which auths have been shared",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TeamAuthenticationMember"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "post": {
                "operationId": "api_v4_authentications_teams_create",
                "summary": "Share the authentication with a team ID or with all team members",
                "description": "Only the authentication's owner can share an authentication.\n\nThis API expects a `team_id` parameter sent as a payload, in the form\n`{team_id: id|`all`}`\n\nIf it is sent as an `id`, it needs to be the ID of an already existing team.\nThat team will be able to see this authentication.\nIf it is sent as `all`, then the authentication will be shared with all\nteam account members. A fake payload will be returned in that case, as\nthere is no team that encompasses all the team members other than the magic\n`all` variable.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamAuthenticationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamAuthenticationMember"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "authentication_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/authentications/{authentication_pk}/teams/{id}/": {
            "get": {
                "operationId": "api_v4_authentications_teams_read",
                "description": "API for accessing the teams with which auths have been shared",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamAuthenticationMember"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "delete": {
                "operationId": "api_v4_authentications_teams_delete",
                "summary": "Unshare the given authentication from the given team",
                "description": "The authentication can be unshared from a team, if the URL has a\nteam ID, or can be unshared from everyone in the team account,\nif the URL uses the special `all` ID.\n\n`all` represents all users in a team account, which is separate\nthan all the members in a team workspace. When doing the operation\nagainst `all`, `shared_with_all` flag is set to `False`. We will still\nkeep memberships for members and teams around, those won't be destroyed\nunless manually removed or if the authentication is completely unshared.\nWhen passing `all`, the user that did the action will be added to the list\nof members that can access the authentication.\n\nIf `all` is not used, but instead a proper team ID is used, that team will\nno longer have access to access this authentication.",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "authentication_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this team.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/authentications/{id}/": {
            "get": {
                "operationId": "api_v4_authentications_read",
                "summary": "Retrieve Authentication",
                "description": "Retrieve a specific authentication if visible to the user.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "patch": {
                "operationId": "api_v4_authentications_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Authentication"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "delete": {
                "operationId": "api_v4_authentications_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this authentication.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/authentications/{id}/call/": {
            "post": {
                "operationId": "api_v4_authentications_call",
                "summary": "Call Authentication's API",
                "description": "Call the API behind the authentications, if visible to the user.\n\nThis endpoint is deprecated. You should use the new Conjurer service https://docs.k8s.zapier.com/conjurer/",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthCallRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthCallRequest"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthCallResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ],
                "deprecated": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this authentication.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/authentications/{id}/data/": {
            "get": {
                "operationId": "api_v4_authentications_data",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this authentication.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/authentications/{id}/search/": {
            "get": {
                "operationId": "api_v4_authentications_search",
                "summary": "Mildly dangerous endpoint! Authentication is only via JWT, issued by the Notary service.",
                "description": "Returns Authentication IDs based on the passed in Trigger Susbcription ID or combination of\ncustomuser id, account id, and selected api.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this authentication.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/authentications/{id}/test/": {
            "post": {
                "operationId": "api_v4_authentications_test",
                "summary": "Test the Authentication against it's API to make sure it has been set up correctly and is\nstill valid.",
                "description": "If the test fails due to a `StaleAuthentication` error then the authentication is marked stale\nwithout alerting (no email is sent).",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Authentication"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentications"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this authentication.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/blog-posts/": {
            "get": {
                "operationId": "api_v4_blog-posts_list",
                "description": "",
                "parameters": [
                    {
                        "name": "category_slugs",
                        "in": "query",
                        "description": "A comma separated list of category slugs to filter the list of blog posts by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_slug",
                        "in": "query",
                        "description": "Filters by the related services slug.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "blog_slug",
                        "in": "query",
                        "description": "Filters by the blog model's slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_slug",
                        "in": "query",
                        "description": "The slug of the related category to filter against.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_featured",
                        "in": "query",
                        "description": "If `true`, only featured blog posts will be returned.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "canonical_category_slug",
                        "in": "query",
                        "description": "The slug of the canonical category to filter against.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BlogPost"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Blog Posts"
                ]
            },
            "parameters": []
        },
        "/api/v4/blog-posts/{slug}/": {
            "get": {
                "operationId": "api_v4_blog-posts_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogPost"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Blog Posts"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/blogs/": {
            "get": {
                "operationId": "api_v4_blogs_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Blog"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Blogs"
                ]
            },
            "parameters": []
        },
        "/api/v4/blogs/{slug}/": {
            "get": {
                "operationId": "api_v4_blogs_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Blogs"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "This will be the URL for the blog. Ex.: `engineering` will be accessible at zapier.com/engineering/",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/categories/": {
            "get": {
                "operationId": "api_v4_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slugs",
                        "in": "query",
                        "description": "A comma separated list of slugs to filter the list of Category objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A comma separated list of ids to filter the list of Category objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Specifies what role the categories should be. Defaults to \"parent\".",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "parent",
                                "child",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/service_category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Categories"
                ]
            },
            "parameters": []
        },
        "/api/v4/categories/{slug}/": {
            "get": {
                "operationId": "api_v4_categories_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_category"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Categories"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/categories/{slug}/children/": {
            "get": {
                "operationId": "api_v4_categories_children",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_category"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Categories"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/communicate/ingest/looker/enqueue/": {
            "post": {
                "operationId": "api_v4_communicate_ingest_looker_enqueue_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Communicate"
                ]
            },
            "parameters": []
        },
        "/api/v4/communicate/subscriptions/": {
            "post": {
                "operationId": "api_v4_communicate_subscriptions_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Communicate"
                ]
            },
            "parameters": []
        },
        "/api/v4/communicate/sync/": {
            "post": {
                "operationId": "api_v4_communicate_sync_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Communicate"
                ]
            },
            "parameters": []
        },
        "/api/v4/communicate/sync/{id}/": {
            "delete": {
                "operationId": "api_v4_communicate_sync_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Communicate"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/communicate/unsubscribe/": {
            "post": {
                "operationId": "api_v4_communicate_unsubscribe_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Communicate"
                ]
            },
            "parameters": []
        },
        "/api/v4/communicate/unsubscriptions/": {
            "post": {
                "operationId": "api_v4_communicate_unsubscriptions_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Communicate"
                ]
            },
            "parameters": []
        },
        "/api/v4/communicate/users/subscribedtoblog/{identity}/": {
            "get": {
                "operationId": "api_v4_communicate_users_subscribedtoblog_read",
                "description": "Retrieve User's blog subscription",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Communicate"
                ]
            },
            "parameters": [
                {
                    "name": "identity",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/confirm-authentication/": {
            "post": {
                "operationId": "api_v4_confirm-authentication_create",
                "summary": "Start an authentication confirm flow",
                "description": "This flow asks the user to authenticate in order to confirm them\nbefore getting access to a particular feature or action of the product.\n\nFor instance transfer membership or deleting an account would be the\nfocus of this confirmation flow, in which the user can use either\nnormal username / password combo, Google SSO or any other form of SSO,\nSAML SSO etc.",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Confirm Authentication"
                ]
            },
            "parameters": []
        },
        "/api/v4/confirm-masquerade/": {
            "get": {
                "operationId": "api_v4_confirm-masquerade_list",
                "description": "Confirm whether the current session is a masquerade session.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Confirm Masquerade"
                ]
            },
            "parameters": []
        },
        "/api/v4/currencies/": {
            "get": {
                "operationId": "api_v4_currencies_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Currencies"
                ]
            },
            "parameters": []
        },
        "/api/v4/currencies/rates/": {
            "get": {
                "operationId": "api_v4_currencies_rates",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Currencies"
                ]
            },
            "parameters": []
        },
        "/api/v4/data-flow/check/": {
            "post": {
                "operationId": "api_v4_data-flow_data_flow_check",
                "description": "Instantiates `selected_api` and calls its `revalidate_data_flow()`\nmethod on every item inside `destination_selected_apis`.\n\nWill also check if every `destination_selected_api` points to an existing\nimplementation.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataFlowCheckResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataFlowCheckResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataFlowCheckResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataFlowCheckResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data Flow"
                ]
            },
            "parameters": []
        },
        "/api/v4/debug/": {
            "get": {
                "operationId": "api_v4_debug_list",
                "description": "These endpoints help us trigger errors and test alerting in API clients.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "post": {
                "operationId": "api_v4_debug_create",
                "description": "These endpoints help us trigger errors and test alerting in API clients.",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "parameters": []
        },
        "/api/v4/debug/{id}/": {
            "get": {
                "operationId": "api_v4_debug_read",
                "description": "These endpoints help us trigger errors and test alerting in API clients.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "put": {
                "operationId": "api_v4_debug_update",
                "description": "These endpoints help us trigger errors and test alerting in API clients.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "patch": {
                "operationId": "api_v4_debug_partial_update",
                "description": "These endpoints help us trigger errors and test alerting in API clients.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "delete": {
                "operationId": "api_v4_debug_delete",
                "description": "These endpoints help us trigger errors and test alerting in API clients.",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/domain-discovery/": {
            "get": {
                "operationId": "api_v4_domain-discovery_list",
                "description": "Check if an email's domain is associated with a Company account that is eligible for domain capture.\nAccepted parameters: email (string), code (string) - optional\n\nReturns an object with the account details if an account with that verified domain is found\nand the customuser_id if a user with that email exists.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Domain Discovery"
                ]
            },
            "parameters": []
        },
        "/api/v4/error-notifications/trigger-alert-email": {
            "post": {
                "operationId": "api_v4_error-notifications_send_alert_email",
                "description": "Send the error alert email to the user based on the user context provided within a Service JWT.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TriggerAlertEmailBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerAlertEmailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorNotificationsError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorNotificationsError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorNotificationsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorNotificationsError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Error Notifications"
                ]
            },
            "parameters": []
        },
        "/api/v4/error-notifications/zap-visibility/{zap_id}": {
            "get": {
                "operationId": "api_v4_error-notifications_get_zap_visibility",
                "description": "Checks if a user has vibility to Zap",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapVisibilityCheckResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorNotificationsError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorNotificationsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorNotificationsError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Error Notifications"
                ]
            },
            "parameters": [
                {
                    "name": "zap_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/folder-discovery/{id}/": {
            "get": {
                "operationId": "api_v4_folder-discovery_read",
                "summary": "Discover the account a folder is in if the user has access to that folder",
                "description": "Returns the `account_id` where the folder can be found.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Folder Discovery"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this folder.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/followed-apps/": {
            "get": {
                "operationId": "api_v4_followed-apps_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FollowedApp"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Followed Apps"
                ]
            },
            "parameters": []
        },
        "/api/v4/generator/": {
            "post": {
                "operationId": "api_v4_generator_create",
                "description": "Creates a random (for now) account",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true 
                            }
                        }
                    }
                },
                "tags": [
                    "Generator"
                ]
            },
            "parameters": []
        },
        "/api/v4/guided-recipes/": {
            "get": {
                "operationId": "api_v4_guided-recipes_list",
                "description": "",
                "parameters": [
                    {
                        "name": "canonical_id",
                        "in": "query",
                        "description": "The canonical ID(s). Multiple canonical IDs can be provided by including multiple `canonical_id` query parameters.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "added_by_id",
                        "in": "query",
                        "description": "The id of the user who authored the content.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "A comma separated list of categories slugs to filter by. It accepts a `-` prefix to denote a category exclusion (e.g., \"communication, -email\").",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min_service_count",
                        "in": "query",
                        "description": "Filters Guided Recipes by minimum number of services",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_slugs",
                        "in": "query",
                        "description": "A comma separated list of service slugs to filter by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_keys",
                        "in": "query",
                        "description": "A comma separated list of service selected APIs to filter by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "must_match_all_services",
                        "in": "query",
                        "description": "Indicates if you want to match services specified by `service_keys` or `service_slugs`, or both.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Specifies the status of a GuidedRecipe. Choices are: rejected, draft, community, shared, published, invalid, for-review",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A comma separated list of ids to filter the list of GuidedRecipe objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_unpublished",
                        "in": "query",
                        "description": "Specifies if unpublished GuidedRecipes should be included. Only works for authed users.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "The ranking schema to order results by. The name is preceded by `algorithm-` e.g. `order_by=algorithm-for-beginners` uses the `for-beginners` schema. Can be paired with `personalized=true` to filter down to results ranked by specified ranking schema but sort them for particular authenticated user. Available algorithms are: `anonymous-sorting`, `default`, `for-beginners`, `no-auth`, `role-20`, `role-21`, `role-22`, `role-23`, `role-24`, `role-25`, `role-26`, `role-27`, `role-28`, `role-29`, `role-30`, `role-31`, `role-32`, `role-33`, `role-34`, `role-35`, `role-36`, `role-37`, `role-38`.\n\nIt is also possible to order the results by `lastchanged` field. This is a protected param and requires an API key to be passed in the header.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "personalized",
                        "in": "query",
                        "description": "Boolean value used in conjunction with order_by=algorithm-*, to allow ranking schema to filter and sort the apps followed by the user to the front, followed by those not followed, within each group (followed and not), results are ordered by the ranking schema.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_unranked",
                        "in": "query",
                        "description": "Boolean value used in conjunction with order_by=algorithm-*. Specifies whether to filter results to show only the ranked results (exclude_unranked=True) or to show both unranked results in the responseas well (exclude_unranked=False). Unranked results will rank after any ranked results.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "head_service_selected_api",
                        "in": "query",
                        "description": "The selected_api of the guided recipe's head service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tail_service_selected_api",
                        "in": "query",
                        "description": "The selected_api of the guided recipe's tail service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "head_action",
                        "in": "query",
                        "description": "The action of the head service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tail_action",
                        "in": "query",
                        "description": "The action of the tail service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastchanged_after",
                        "in": "query",
                        "description": "Filters by GuidedRecipes changed after a given date. Year should be given in iso-8601 format, example 2023-06-03 10:15:30Z. (requires authorization)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GuidedRecipe"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Guided Recipes"
                ]
            },
            "parameters": []
        },
        "/api/v4/guided-recipes/{id}/": {
            "get": {
                "operationId": "api_v4_guided-recipes_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuidedRecipe"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Guided Recipes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Guided Zap.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/autocomplete/": {
            "get": {
                "operationId": "api_v4_helpdocs_autocomplete_list",
                "description": "Return a list of app_action values for a given Service ID.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/best-troubleshooting/": {
            "get": {
                "operationId": "api_v4_helpdocs_best-troubleshooting_list",
                "description": "View that provides all matching ``helpdocs.models.Generic`` based\non the context passed into the query parameters, order by relevancy.\n\nThese params are supported:\n\n* app:           an app's selected_api\n* app_action:    the key of a particular action (e.g. new_card)\n* action_type:   trigger, action, or search\n* related_codes: a CSV with codes to get docs for and order them by\n* limit          maximum number of tutorials to return",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Generic"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/best-tutorials/": {
            "get": {
                "operationId": "api_v4_helpdocs_best-tutorials_list",
                "description": "View that provides all matching ``helpdocs.models.Tutorial`` based\non the context passed into the query parameters, order by relevancy.\n\nThe following are all the valid query parameters it can pass in.\n\n* app - The currently selected Service (slug).\n* app_action - The selected action for the app.\n* action_type - Is this a trigger, action, or search?\n* location - What part of the Zap setup this is in (one of\n    ``helpdocs.constants.EditorLocation``).\n* limit - Maximum number of tutorials to return.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tutorial"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/best/": {
            "get": {
                "operationId": "api_v4_helpdocs_best_list",
                "description": "Return the best matching tutorial based on the passed state.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/categories/": {
            "get": {
                "operationId": "api_v4_helpdocs_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/help_category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/categories/tree/": {
            "get": {
                "operationId": "api_v4_helpdocs_categories_tree",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/help_category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/categories/{id}/": {
            "get": {
                "operationId": "api_v4_helpdocs_categories_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/help_category"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/categories/{id}/content/": {
            "get": {
                "operationId": "api_v4_helpdocs_categories_content",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/help_category"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/category/redirect/{category}/": {
            "get": {
                "operationId": "api_v4_helpdocs_category_redirect_read",
                "description": "This view handles requests that used to go to web-ssr to serve pre-Zendesk",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "category",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/content/redirect/{slug}/": {
            "get": {
                "operationId": "api_v4_helpdocs_content_redirect_read",
                "description": "View intended to capture traffic that used to go to web-ssr to serve pre-Zendesk\nhelpdocs. Usually the redirect url results in yet another redirect defined in an AWS\nlambda function. We didn't want to disconnect this traffic to lose thousands of requests\nper day\n\n* slug - The slug of the content to redirect to.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/content/{slug}/": {
            "get": {
                "operationId": "api_v4_helpdocs_content_read",
                "description": "Return the first content with matching slug.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/faqs/": {
            "get": {
                "operationId": "api_v4_helpdocs_faqs_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FAQ"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/faqs/{id}/": {
            "get": {
                "operationId": "api_v4_helpdocs_faqs_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FAQ"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this faq.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/faqs/{id}/suggested/": {
            "get": {
                "operationId": "api_v4_helpdocs_faqs_suggested",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FAQ"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this faq.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/feedback/": {
            "post": {
                "operationId": "api_v4_helpdocs_feedback_create",
                "description": "Create only view for creating feedback on a doc. Must be a logged\nin user.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Feedback"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feedback"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/feedback/{id}/": {
            "put": {
                "operationId": "api_v4_helpdocs_feedback_update",
                "description": "Create only view for creating feedback on a doc. Must be a logged\nin user.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Feedback"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feedback"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "patch": {
                "operationId": "api_v4_helpdocs_feedback_partial_update",
                "description": "Create only view for creating feedback on a doc. Must be a logged\nin user.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Feedback"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feedback"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this feedback.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/generics/": {
            "get": {
                "operationId": "api_v4_helpdocs_generics_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Generic"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/generics/{id}/": {
            "get": {
                "operationId": "api_v4_helpdocs_generics_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Generic"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this generic.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/generics/{id}/suggested/": {
            "get": {
                "operationId": "api_v4_helpdocs_generics_suggested",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Generic"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this generic.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/ratings/": {
            "post": {
                "operationId": "api_v4_helpdocs_ratings_create",
                "description": "Create only view for creating feedback on a doc. Must be a logged\nin user.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Feedback"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feedback"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/ratings/{id}/": {
            "put": {
                "operationId": "api_v4_helpdocs_ratings_update",
                "description": "Create only view for creating feedback on a doc. Must be a logged\nin user.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Feedback"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feedback"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "patch": {
                "operationId": "api_v4_helpdocs_ratings_partial_update",
                "description": "Create only view for creating feedback on a doc. Must be a logged\nin user.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Feedback"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feedback"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this feedback.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/references/": {
            "get": {
                "operationId": "api_v4_helpdocs_references_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Reference"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/references/{id}/": {
            "get": {
                "operationId": "api_v4_helpdocs_references_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reference"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this reference.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/references/{id}/suggested/": {
            "get": {
                "operationId": "api_v4_helpdocs_references_suggested",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reference"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this reference.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/steps/{id}/suggested/": {
            "get": {
                "operationId": "api_v4_helpdocs_steps_suggested",
                "description": "Exists solely to provide the suggested action for hyperlinking\nin the StepSerializer",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this step.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/sxp-1229/": {
            "get": {
                "operationId": "api_v4_helpdocs_sxp-1229_list",
                "description": "View to debug https://zapierorg.atlassian.net/browse/SXP-1229",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/troubleshooting/": {
            "get": {
                "operationId": "api_v4_helpdocs_troubleshooting_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Troubleshooting"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/troubleshooting/{id}/": {
            "get": {
                "operationId": "api_v4_helpdocs_troubleshooting_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Troubleshooting"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this troubleshooting.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/troubleshooting/{id}/suggested/": {
            "get": {
                "operationId": "api_v4_helpdocs_troubleshooting_suggested",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Troubleshooting"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this troubleshooting.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/tutorials/": {
            "get": {
                "operationId": "api_v4_helpdocs_tutorials_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tutorial"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/tutorials/{id}/": {
            "get": {
                "operationId": "api_v4_helpdocs_tutorials_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tutorial"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this tutorial.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/tutorials/{id}/suggested/": {
            "get": {
                "operationId": "api_v4_helpdocs_tutorials_suggested",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tutorial"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this tutorial.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/helpdocs/videos/": {
            "get": {
                "operationId": "api_v4_helpdocs_videos_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Video"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": []
        },
        "/api/v4/helpdocs/videos/{id}/": {
            "get": {
                "operationId": "api_v4_helpdocs_videos_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Video"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Helpdocs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this video.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/i-was-here/": {
            "get": {
                "operationId": "api_v4_i-was-here_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "I Was Here"
                ]
            },
            "parameters": []
        },
        "/api/v4/identity/": {
            "get": {
                "operationId": "api_v4_identity_list",
                "description": "Displays the identity and authentication status of a user.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Identity"
                ]
            },
            "parameters": []
        },
        "/api/v4/identity/{id}/": {
            "get": {
                "operationId": "api_v4_identity_read",
                "description": "Displays the identity and authentication status of a user.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Identity"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/idp-discovery/": {
            "get": {
                "operationId": "api_v4_idp-discovery_list",
                "summary": "Find the proper IDP for a provided email address",
                "description": "If the email has a domain that we know of, we return the URLs\nthat the user should hit to start the SAML flow.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Idp Discovery"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations-meta/": {
            "get": {
                "operationId": "api_v4_implementations-meta_list",
                "summary": "It's perferred to use /api/v4/implementations for a list of implementations.",
                "description": "If you want a list of ONLY public implementations, then you'll want to use\n/implementations-meta",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ImplementationMeta"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations Meta"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations-meta/by-category/": {
            "get": {
                "operationId": "api_v4_implementations-meta_get",
                "summary": "Implementations by Category",
                "description": "Provides performant lookup for public/private Implementations that are related\nto the provided category and to which the caller has access. This endpoint\nreturns limited details about the Implementation; additional details can be\nretrieved from other implementations(-meta) endpoints.",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "The ID of the category to which the result apps are related",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMetaSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMetaSearchError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations Meta"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations-meta/private/": {
            "get": {
                "operationId": "api_v4_implementations-meta_private",
                "summary": "List Implementation Meta Info for Private Apps",
                "description": "Retrieve the meta info about private implementations a user has access to. If one of the implementations they own\nis publicly available, it will appear in this list as well as the public endpoint. This endpoint excludes details\nabout the actions supported; use the implementations endpoint if you need that.\nService Tier: 1",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "A comma separated list of selected_apis to filter the list of implementations by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMeta"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMeta"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations Meta"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations-meta/public/": {
            "get": {
                "operationId": "api_v4_implementations-meta_public",
                "summary": "List Implementation Meta Info for Public Apps",
                "description": "Retrieve the meta info about public implementations. This excludes details about the actions supported; use\nthe implementations endpoint if you need that.\nBy default, returns all records using an efficient query.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "A comma separated list of selected_apis to filter the list of implementations by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMeta"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMeta"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations Meta",
                    "tier:1"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations-meta/search/": {
            "get": {
                "operationId": "api_v4_implementations-meta_get",
                "summary": "Implementation Search",
                "description": "Provides performant querying for public/private Implementations that the caller\nhas access to. This endpoint returns limited details about the Implementation;\nadditional details can be retrieved from other implementations(-meta) endpoints.",
                "parameters": [
                    {
                        "name": "term",
                        "in": "query",
                        "description": "The term used when executing search queries.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMetaSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImplementationMetaSearchError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations Meta"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations/": {
            "get": {
                "operationId": "api_v4_implementations_list",
                "summary": "List Implementations",
                "description": "Retrieve implementations that are visible to the user. There are a few possible usecases:\n\n    1. Public and Private Apps - Use `global=true&public_only=false`\n    2. Only Public Apps - Use `global=true&public_only=true`\n    3. Only Private Apps - Use `global=false&public_only=false`\n    4. A subset of Apps - Use the `selected_apis` filter. The global and public_only flags still apply.\n\nAn empty list is possible if public apps are excluded and the user has no private apps.",
                "parameters": [
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "A comma separated list of selected_apis to filter the list of implementations by. Supports latest implementation lookup by replacing the selected_api version with `@latest`",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "global",
                        "in": "query",
                        "description": "If `true`, include global implementations in addition to private ones. If `false`, show onlyprivate implementations",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "public_only",
                        "in": "query",
                        "description": "If `true`, fetch only public (global) implementations. If `false`, follows default behavior the `global` query param.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Implementation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations/choices/": {
            "post": {
                "operationId": "api_v4_implementations_need_choices",
                "summary": "Get the choices for a dynamic dropdown need.",
                "description": "Either (`action_id` AND `input_field_id`) OR `prefill` must be provided. If all three\nare provided, prefill lookup via `action_id` and `input_field_id` will take precedence,\nand the provided `prefill` value in the request will be used as a fallback.\n\nE.g. Google sheets has a \"new row in spreadsheet\" trigger (new_row_notify_hook).\nOne of the pieces of information it **needs** to know to listen for that trigger\nis the specific spreadsheet. Because the number of spreadsheets a user has for\nGoogle sheets is not static it's called a dynamic need. This view will provide\nthe possible choices for that dynamic need by calling out to the partner api\nfor the information. How to populate the choices is determined by the `prefill`\nstring. It'll look something like `\"spreadsheet.id.title\"` which is split on\n`\".\"` to give the action, id key, and label key.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NeedChoicesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeedChoicesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeedChoicesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations/details/": {
            "get": {
                "operationId": "api_v4_implementations_details_read",
                "summary": "Check Implementation Visibility",
                "description": "Check if the requesting customuser has access to the implementation. Response status codes are used to\nindicate the result of the check:\n\n- `204`: requesting customuser has access to the implementation\n- `400`: invalid request (missing selected_api)\n- `403`: requesting customuser does not have access to the implementation\n- `404`: implementation does not exist",
                "parameters": [
                    {
                        "name": "selected_api",
                        "in": "query",
                        "description": "A single selected_api to retrieve details for (does not support `@latest` syntax)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "requesting customuser has access to the implementation"
                    },
                    "400": {
                        "description": "invalid request (missing selected_api)"
                    },
                    "403": {
                        "description": "requesting customuser does not have access to the implementation"
                    },
                    "404": {
                        "description": "implementation does not exist"
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations/gives/": {
            "post": {
                "operationId": "api_v4_implementations_gives",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GivesRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GivesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GivesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations/gives/public/": {
            "post": {
                "operationId": "api_v4_implementations_gives_gives",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GivesRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GivesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GivesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations/invoke/": {
            "post": {
                "operationId": "api_v4_implementations_invoke",
                "summary": "Invoke",
                "description": "Invokes any action on any app visible to the authenticated user\n\n## Asynchronous Invocation\n\nWhen making an asynchronous invocation, the endpoint will return a\n`invocation_id` value. This value is a unique identifier that can\nbe used to poll for the results of the invocation.\n\n```python\nresponse = requests.post(\n    url=\"https://zapier.com/api/v4/implementations/invoke/\",\n    headers={\"X-Api-Key\": \"secret\"},\n    json={\n        \"action\": \"recipe\",\n        \"sync\": False,\n        \"type_of\": \"read\",\n        \"selected_api\": \"App110413CLIAPI@1.0.0\",\n    },\n)\n\ninvocation_id = response.json()['invocation_id']\n\nresponse = requests.get(\n    url=f\"https://zapier.com/api/v4/implementations/invoke/{invocation_id}/\",\n    headers={\"X-Api-Key\": \"secret\"},\n)\n```\n\nInternally, an asynchronous call to this endpoint spawns a celery task. This task handles\nthe actual invocation of the appropriate lambda function for the app, and then stores the\nresponse payload, along with some meta data, into S3. Polling for results using the `invocation_id`\nsimply checks if the results exist in S3, and returns them to the caller if they do.\n\n\n## Synchronous Invocation\n\nYou can no longer call this endpoint synchronously (unless DEBUG=True), it will respond with a 403 if you try.\nPlease use the Conjurer backed endpoint `/api/v4/implementations/invoke-sync` and see\nConjurer docs for more information: https://docs.k8s.zapier.com/conjurer/\n\n## A note about dynamic dropdowns\nIf you are trying to use `/invoke` to fetch options for a dynamic dropdown, you will need to pass along `page=0` in the request body (then `page=1`, `page=2`, etc until you get nothing back or the same set of results as the previous page). Passing along this field will set the `prefill=True` option in meta when we call `read_poll` on the app. This is important to include because many apps change their behavior if they are populating a drop down vs doing a regular poll.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvokeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/v4/implementations/invoke/{invocation_id}/": {
            "get": {
                "operationId": "api_v4_implementations_invoke_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeResponse"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvokeAsyncResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": [
                {
                    "name": "invocation_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/implementations/needs/": {
            "post": {
                "operationId": "api_v4_implementations_needs",
                "summary": "Needs for Implementation",
                "description": "Get the needs for any action on any app visible to the authenticated user.\n\nA few specific conditions to keep in mind for authenticated and unauthenticated api:\n    - if an auth id is passed in and available to the user, all needs will be returned,\n      including custom needs if the api does not encounter an error\n    - if an auth id is not passed in, but a legacy_node_id is passed in, an error will be\n      returned. auth_id is required if the selected api requires authentication\n    - if neither an auth or a legacy_node_id is passed in, we'll return as much information\n      as possible (static needs)\n    - if the endpoint is unauthenticated, we'll return all the needs including custom needs\n\nCall repeatedly with extended `params` matching `needs` keys as there could be custom\nneeds in future results.\n\nFor example, you might have a `needs` with a single `{key: formId, required: true}`\nneed. Subsequent calls to the needs endpoint with `params` of `{formId: 1234}` will\nlikely result in many more needs.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/NeedsRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeedsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeedsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": []
        },
        "/api/v4/implementations/needs/public/": {
            "post": {
                "operationId": "api_v4_implementations_needs_needs",
                "description": "An endpoint to return the public only needs for an API",
                "requestBody": {
                    "$ref": "#/components/requestBodies/NeedsRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeedsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeedsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Implementations"
                ]
            },
            "parameters": []
        },
        "/api/v4/integrations/shopify/partner/": {
            "get": {
                "operationId": "api_v4_integrations_shopify_partner_list",
                "description": "This endpoint is used by shopify external app store to initiate the OAuth flow",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Integrations"
                ]
            },
            "parameters": []
        },
        "/api/v4/integrations/shopify/partner/auth/": {
            "get": {
                "operationId": "api_v4_integrations_shopify_partner_auth_list",
                "description": "We handle the OAuth response from shopify.\nWe do security checks but we currently do not store or do anything with token from this flow\nReason - this is implemented to meet the App review requirments only.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Integrations"
                ]
            },
            "parameters": []
        },
        "/api/v4/integrations/shopify/partner/gdpr/": {
            "post": {
                "operationId": "api_v4_integrations_shopify_partner_gdpr_create",
                "description": "Requested when actions from shopify",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Integrations"
                ]
            },
            "parameters": []
        },
        "/api/v4/internal/accounts/{id}/": {
            "get": {
                "operationId": "api_v4_internal_accounts_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/accounts/{id}/entitlements/": {
            "get": {
                "operationId": "api_v4_internal_accounts_entitlements",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/accounts/{id}/usage/": {
            "get": {
                "operationId": "api_v4_internal_accounts_usage",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalAccount"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/recommendations/{id}/": {
            "get": {
                "operationId": "api_v4_internal_recommendations_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/": {
            "get": {
                "operationId": "api_v4_internal_users_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CustomUser"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": []
        },
        "/api/v4/internal/users/{id}/": {
            "get": {
                "operationId": "api_v4_internal_users_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/ab_tests/": {
            "get": {
                "operationId": "api_v4_internal_users_ab_tests",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/aliases/": {
            "post": {
                "operationId": "api_v4_internal_users_aliases",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/implementations/": {
            "get": {
                "operationId": "api_v4_internal_users_implementations",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/is_hellbanned/": {
            "get": {
                "operationId": "api_v4_internal_users_is_hellbanned",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/is_high_value/": {
            "get": {
                "operationId": "api_v4_internal_users_is_high_value",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/mailgun/": {
            "get": {
                "operationId": "api_v4_internal_users_mailgun",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/notes/": {
            "get": {
                "operationId": "api_v4_internal_users_notes",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/users/{id}/zaps/": {
            "get": {
                "operationId": "api_v4_internal_users_zaps",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom user.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/internal/zaps/{id}/exempt/": {
            "put": {
                "operationId": "api_v4_internal_zaps_exempt",
                "description": "Set is_billing_exempt for a zap",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillingExemptZapsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingExemptZapsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Internal"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this node.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/invitations/{invitation_code}/": {
            "get": {
                "operationId": "api_v4_invitations_read",
                "summary": "Endpoint for retrieving an invitation given a valid invitation code",
                "description": "This is accessible by anonymous users.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvitationCode"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invitations"
                ]
            },
            "patch": {
                "operationId": "api_v4_invitations_partial_update",
                "summary": "Accept the given invitation",
                "description": "The user needs to be authenticated to access this endpoint.\nThe invitation must be addressed to the authenticated user for the operation\nto succeed.\n\nIf the invitation was successfully accepted, a 200 status code\nresponse will be returned with no payload.\n\nIf the invitation acceptance failed, a 400 status code will be returned.\nA `reason` field might be present, which indicates one of the following possible\nreasons to fail:\n\n  * revoked - The invitation was already revoked\n  * expired - The invitation expired\n  * used - The invitation was already used\n  * mismatched-email - The email of the invitation is not the same as the email of the authenticated user\n  * member-count-exceeded - Cannot join the invitation's account as it has too many members\n\nThe invitation may also be associated with a team, in which case the\nuser accepting the invitation will also be added to the team.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/InvitationCode"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvitationCode"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invitations"
                ]
            },
            "parameters": [
                {
                    "name": "invitation_code",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/invitations/{invitation_code}/decline/": {
            "put": {
                "operationId": "api_v4_invitations_decline",
                "summary": "This endpoint is used for exposing invitations by code",
                "description": "The actual invitations endpoint is scoped under an account ID",
                "requestBody": {
                    "$ref": "#/components/requestBodies/InvitationCode"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvitationCode"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invitations"
                ]
            },
            "parameters": [
                {
                    "name": "invitation_code",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/jwt/token-exchange": {
            "post": {
                "operationId": "api_v4_jwt_token-exchange_create",
                "description": "\n[DEPRECATED] - The pattern of exchanging a service JWT for a user JWT is deprecated.\n\nExchange a Service JWT for a User JWT. JWTs in the `Authorization` header\nmust have their `aud` claim set to `\"identity:token-exchange\"` and be\nfrom an allowed issuer (see `identity.jwt.constants.JWT_EXCHANGE_ISSUER_ALLOWLIST`).\n",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTTokenExchangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JWTTokenExchangeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Jwt"
                ]
            },
            "parameters": []
        },
        "/api/v4/legal/terms-acceptance/{term_name}": {
            "get": {
                "operationId": "api_v4_legal_terms-acceptance_read",
                "description": "\nRetrieves the acceptance date for the given term\n",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Success",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "string",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "date",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "invalid term_name",
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "string",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Legal"
                ]
            },
            "post": {
                "operationId": "api_v4_legal_terms-acceptance_create",
                "description": "\nSets the date for the given term (if it hasn't already been set)\n",
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "invalid term_name",
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "string",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "term already accepted",
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "string",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "internal server error",
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "string",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Legal"
                ]
            },
            "parameters": [
                {
                    "name": "term_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/masquerade/urls": {
            "post": {
                "operationId": "api_v4_masquerade_urls_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MasqueradeLinkRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasqueradeLinkResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasqueradeLinkResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasqueradeLinkResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Masquerade"
                ]
            },
            "parameters": []
        },
        "/api/v4/noun-steps/": {
            "get": {
                "operationId": "api_v4_noun-steps_list",
                "summary": "List Noun Step Connections",
                "description": "These map between actions and nouns, in one or the other direction.",
                "parameters": [
                    {
                        "name": "noun_slug",
                        "in": "query",
                        "description": "The slug of the related noun to filter against, comma separated values supported.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_api",
                        "in": "query",
                        "description": "The selected_api of the step to filter against, comma separated values supported.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type_of",
                        "in": "query",
                        "description": "The type_of of the step to filter against, comma separated values supported.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "The action of the step to filter against, comma separated values supported.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NounStepConnection"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Noun Steps"
                ]
            },
            "parameters": []
        },
        "/api/v4/noun-steps/{id}/": {
            "get": {
                "operationId": "api_v4_noun-steps_read",
                "summary": "Retrieve Noun Step Connection",
                "description": "Get a specific noun step connection by id.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NounStepConnection"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Noun Steps"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this noun step connection.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/nouns/": {
            "get": {
                "operationId": "api_v4_nouns_list",
                "summary": "List Nouns",
                "description": "Nouns define a set of fields that represent some schema.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Noun"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Nouns"
                ]
            },
            "parameters": []
        },
        "/api/v4/nouns/{slug}/": {
            "get": {
                "operationId": "api_v4_nouns_read",
                "summary": "Retrieve Noun",
                "description": "Get a specific noun according to it's slug.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Noun"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Nouns"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/oauth/applications/": {
            "get": {
                "operationId": "api_v4_oauth_applications_list",
                "description": "Lists OAuth applications for a given integration",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OAuthApplication"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth"
                ]
            },
            "parameters": []
        },
        "/api/v4/oauth/applications/{id}/": {
            "put": {
                "operationId": "api_v4_oauth_applications_update",
                "description": "Update a OAuth application.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/OAuthApplication"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthApplication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth"
                ]
            },
            "patch": {
                "operationId": "api_v4_oauth_applications_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/OAuthApplication"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthApplication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this application.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/oauth/applications/{id}/regenerate_client_secret/": {
            "patch": {
                "operationId": "api_v4_oauth_applications_regenerate_client_secret",
                "description": "regenerate client secret of an OAuth application.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuthApplicationExtended"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthApplication"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this application.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/oauth/token-exchange": {
            "post": {
                "operationId": "api_v4_oauth_token-exchange_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OauthTokenExchangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OauthTokenExchangeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth"
                ]
            },
            "parameters": []
        },
        "/api/v4/onboardings/": {
            "get": {
                "operationId": "api_v4_onboardings_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Onboarding"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Onboardings"
                ]
            },
            "post": {
                "operationId": "api_v4_onboardings_create",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Onboarding"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Onboarding"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Onboardings"
                ]
            },
            "parameters": []
        },
        "/api/v4/onboardings/{id}/": {
            "get": {
                "operationId": "api_v4_onboardings_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Onboarding"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Onboardings"
                ]
            },
            "put": {
                "operationId": "api_v4_onboardings_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Onboarding"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Onboarding"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Onboardings"
                ]
            },
            "patch": {
                "operationId": "api_v4_onboardings_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Onboarding"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Onboarding"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Onboardings"
                ]
            },
            "delete": {
                "operationId": "api_v4_onboardings_delete",
                "description": "",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Onboardings"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this onboarding.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/persisted-modals/": {
            "get": {
                "operationId": "api_v4_persisted-modals_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersistedModal"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Persisted Modals"
                ]
            },
            "parameters": []
        },
        "/api/v4/persisted-modals/dismiss/": {
            "post": {
                "operationId": "api_v4_persisted-modals_dismiss",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/PersistedModal"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersistedModal"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Persisted Modals"
                ]
            },
            "parameters": []
        },
        "/api/v4/persisted-modals/persist/": {
            "post": {
                "operationId": "api_v4_persisted-modals_persist",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/PersistedModal"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersistedModal"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Persisted Modals"
                ]
            },
            "parameters": []
        },
        "/api/v4/poc/enable_poc/": {
            "post": {
                "operationId": "api_v4_poc_enable_poc",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/api_v4_accounts_domains_members_export_membersData"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Poc"
                ]
            },
            "parameters": []
        },
        "/api/v4/policies/": {
            "get": {
                "operationId": "api_v4_policies_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Policy"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Policies"
                ]
            },
            "parameters": []
        },
        "/api/v4/policies/agreements/pending/": {
            "get": {
                "operationId": "api_v4_policies_agreements_pending_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PendingPolicy"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Policies"
                ]
            },
            "parameters": []
        },
        "/api/v4/policies/{policy_slug}/agreements/": {
            "post": {
                "operationId": "api_v4_policies_agreements_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agreement"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agreement"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Policies"
                ]
            },
            "parameters": [
                {
                    "name": "policy_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/policies/{slug}/": {
            "get": {
                "operationId": "api_v4_policies_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyContent"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Policies"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "A unique slug for the policy. If blank, autogenerated from the title of the policy.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/press-pages/": {
            "get": {
                "operationId": "api_v4_press-pages_list",
                "description": "",
                "parameters": [
                    {
                        "name": "is_public",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PressPageArticle"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Press Pages"
                ]
            },
            "parameters": []
        },
        "/api/v4/press-pages/{id}/": {
            "get": {
                "operationId": "api_v4_press-pages_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PressPageArticle"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Press Pages"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this press page article.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/profile/": {
            "get": {
                "operationId": "api_v4_profile_read",
                "description": "Retrieve the current profile",
                "responses": {},
                "tags": [
                    "Profile"
                ]
            },
            "delete": {
                "operationId": "api_v4_profile_delete",
                "description": "Delete the currently logged in user\n\n        The `auth_token` query parameter is required as it is needed\n        for verifying that the user confirmed their action.\n",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "auth_token": {
                                        "description": "The confirm authentication token",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {},
                "tags": [
                    "Profile"
                ]
            },
            "parameters": []
        },
        "/api/v4/recommendations/company_sizes/": {
            "get": {
                "operationId": "api_v4_recommendations_company_sizes_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanySize"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Recommendations"
                ]
            },
            "parameters": []
        },
        "/api/v4/recommendations/company_sizes/{id}/": {
            "get": {
                "operationId": "api_v4_recommendations_company_sizes_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanySize"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Recommendations"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this company size.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/recommendations/roles/": {
            "get": {
                "operationId": "api_v4_recommendations_roles_list",
                "description": "",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "A slug to filter results by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "canonical_id",
                        "in": "query",
                        "description": "The canonical ID(s). Multiple canonical IDs can be provided by including multiple `canonical_id` query parameters.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Recommendations"
                ]
            },
            "parameters": []
        },
        "/api/v4/recommendations/roles/{id}/": {
            "get": {
                "operationId": "api_v4_recommendations_roles_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Recommendations"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this role.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/registry/actions/": {
            "get": {
                "operationId": "api_v4_registry_actions_list",
                "description": "A viewset that provides CRUD operations for the Action model.",
                "parameters": [
                    {
                        "name": "selected_api",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The paginated offset when fetching actions.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit of how many actions are returned in a query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_public",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "owner_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_ids",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "post": {
                "operationId": "api_v4_registry_actions_create",
                "description": "A viewset that provides CRUD operations for the Action model.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActionCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionCreateOrUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "parameters": []
        },
        "/api/v4/registry/actions/{action_id}/": {
            "get": {
                "operationId": "api_v4_registry_actions_read",
                "description": "A viewset that provides CRUD operations for the Action model.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionCreateOrUpdateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "put": {
                "operationId": "api_v4_registry_actions_update",
                "description": "A viewset that provides CRUD operations for the Action model.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActionDetail"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionCreateOrUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "delete": {
                "operationId": "api_v4_registry_actions_delete",
                "description": "A viewset that provides CRUD operations for the Action model.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionBaseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "parameters": [
                {
                    "name": "action_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/registry/actions/{action_id}/publish/": {
            "post": {
                "operationId": "api_v4_registry_actions_publish",
                "description": "A specific endpoint for changing an action's status to `public`.\nIt is only available to staff users, for now.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionDetailResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "parameters": [
                {
                    "name": "action_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/registry/actions/{action_id}/share/": {
            "patch": {
                "operationId": "api_v4_registry_actions_share",
                "description": "The endpoint used for sharing an action with customusers and accounts.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActionShareRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionCreateOrUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Actions"
                ]
            },
            "parameters": [
                {
                    "name": "action_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/review-pages/": {
            "get": {
                "operationId": "api_v4_review-pages_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReviewPage"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Review Pages"
                ]
            },
            "parameters": []
        },
        "/api/v4/review-pages/{id}/": {
            "get": {
                "operationId": "api_v4_review-pages_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewPage"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Review Pages"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this review page.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/samples/action/": {
            "post": {
                "operationId": "api_v4_samples_sample_action",
                "summary": "Initiate a sample for a action.",
                "description": "> Note: Requires that the user making the request is an admin.\n\n---\n\nOn success, the request will return JSON containing a `session_id` and `metadata`.\n\n---\n\nThe consumer will have two choices in receiving results:\n\nOption 1: the caller may want to listen for:\n - [SampleSuccessEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/platform.sampling.SampleSuccessEvent)\n - [SampleFailureEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/platform.sampling.SampleFailureEvent)\n\nOption 2: the caller can use the related `v4/samples/<session_id>/` endpoint to\nretrieve results.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SampleRequest"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Samples"
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/v4/samples/trigger/": {
            "post": {
                "operationId": "api_v4_samples_sample_trigger",
                "summary": "Initiate a sample for a trigger.",
                "description": "> Note: Requires that the user making the request is an admin.\n\n---\n\nOn success, the request will return JSON containing a `session_id` and `metadata`.\n\nThe `session_id` represents either an attempt or a trigger subscription claim:\n - An id prepended with `a.<uuid>` is an attempt id.\n - An id prepended with `c.<uuid>` is a trigger subscription claim id.\n\n---\n\nThe consumer will have two choices in receiving results:\n\nOption 1: the caller may want to listen for:\n - [SampleSuccessEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/platform.sampling.SampleSuccessEvent)\n - [SampleFailureEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/platform.sampling.SampleFailureEvent)\n\nOption 2: the caller can use the related `v4/samples/<session_id>/` endpoint to\nretrieve results.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SampleRequest"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Samples"
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/v4/samples/{session_id}/": {
            "get": {
                "operationId": "api_v4_samples_read",
                "description": "Retrieve the samples for a trigger or action, that has been put into sampling mode via the\n`/api/v4/samples/(trigger|action)` API.\n\n> Note: Requires that the user making the request is an admin.\n\n---\n\nOn success, the request will return JSON containing a `results` key which is a list of the\ndata from the sample\n\nOn failure will return JSON containing `error_message` and `error_type` keys, which describe\nthe failure.\n\n---\n\nFor polling triggers and hooks using a polling fallback, after results are returned once,\nsubsequent calls to this endpoint with the same id will 404. This will be the way for\nclients to know they need to call /samples/trigger again to start another poll.\n\nFor hook triggers and actions, the endpoint should continue to return the available results until\nthe session expires. Once expired, the endpoint will 404.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResultsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResultsErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResultsErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResultsErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResultsErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Samples"
                ]
            },
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/security/domain/headers/": {
            "post": {
                "operationId": "api_v4_security_domain_headers_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Security"
                ]
            },
            "parameters": []
        },
        "/api/v4/seo-data/": {
            "get": {
                "operationId": "api_v4_seo-data_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SEOData"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Seo Data"
                ]
            },
            "parameters": []
        },
        "/api/v4/seo-data/{id}/": {
            "get": {
                "operationId": "api_v4_seo-data_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SEOData"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Seo Data"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this seo data.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/services/": {
            "get": {
                "operationId": "api_v4_services_list",
                "description": "",
                "parameters": [
                    {
                        "name": "is_upcoming",
                        "in": "query",
                        "description": "Specifies if a service is upcoming.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The slug of the related category to filter against.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_premium",
                        "in": "query",
                        "description": "Specifies if a service is premium.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slugs",
                        "in": "query",
                        "description": "A comma separated list of slugs to filter the list of Service objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "A comma separated list of selected_apis to filter the list of Service objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A comma separated list of ids to filter the list of Service objects by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title_search",
                        "in": "query",
                        "description": "A search query against the title.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_built_in",
                        "in": "query",
                        "description": "Specifies if a service is built-in.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_published",
                        "in": "query",
                        "description": "Specifies if an object is published, that is, publicly visible on Zapier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Service"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": []
        },
        "/api/v4/services/{service_slug}/alternatives/": {
            "get": {
                "operationId": "api_v4_services_alternatives_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AppAlternative"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/alternatives/{id}/": {
            "get": {
                "operationId": "api_v4_services_alternatives_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAlternative"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this app alternative.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/media/": {
            "get": {
                "operationId": "api_v4_services_media_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AppMedia"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/media/{id}/": {
            "get": {
                "operationId": "api_v4_services_media_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppMedia"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this app media.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/meta-updates/": {
            "get": {
                "operationId": "api_v4_services_meta-updates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/pairs/": {
            "get": {
                "operationId": "api_v4_services_pairs_list",
                "description": "",
                "parameters": [
                    {
                        "name": "is_built_in",
                        "in": "query",
                        "description": "Specifies if a service is built-in.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "A comma separated list of categories slugs to filter by. It accepts a `-` prefix to denote a category exclusion (e.g., \"communication, -email\").",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_slugs",
                        "in": "query",
                        "description": "A comma separated list of app slugs to exclude.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ServicePairSerializerV2"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/pairs/{slug}/": {
            "get": {
                "operationId": "api_v4_services_pairs_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServicePairSerializerV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "slug",
                    "in": "path",
                    "description": "You should **not** change this after it is public!",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/pricing-plans/": {
            "get": {
                "operationId": "api_v4_services_pricing-plans_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServicePricingPlan"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/pricing-plans/{id}/": {
            "get": {
                "operationId": "api_v4_services_pricing-plans_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServicePricingPlan"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Service Pricing Plan.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/requests/": {
            "get": {
                "operationId": "api_v4_services_requests_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ServiceRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "post": {
                "operationId": "api_v4_services_requests_create",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ServiceRequest"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/requests/{id}/": {
            "get": {
                "operationId": "api_v4_services_requests_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "put": {
                "operationId": "api_v4_services_requests_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ServiceRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "patch": {
                "operationId": "api_v4_services_requests_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ServiceRequest"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this service request.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/services/{service_slug}/requests/{id}/notes/": {
            "post": {
                "operationId": "api_v4_services_requests_notes",
                "description": "Make the service request 'awesome', 'passable', or 'rejected'",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ServiceRequest"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "service_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this service request.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/services/{slug}/": {
            "get": {
                "operationId": "api_v4_services_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "You should **not** change this after it is public!",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{slug}/can_provide_profile/": {
            "get": {
                "operationId": "api_v4_services_can_provide_profile",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "You should **not** change this after it is public!",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/services/{slug}/service_pairs/": {
            "get": {
                "operationId": "api_v4_services_service_pairs",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Services"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "description": "You should **not** change this after it is public!",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/session/": {
            "get": {
                "operationId": "api_v4_session_list",
                "description": "The URL structure here is of the list-format, but that's because\nthe primary key is implied by the session. There are several ways\nto handle this conversion in DRF, but this is, IMO, the simplest.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Session"
                ]
            },
            "parameters": []
        },
        "/api/v4/session/token-exchange": {
            "post": {
                "operationId": "api_v4_session_token-exchange_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionTokenExchangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionTokenExchangeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Session"
                ]
            },
            "parameters": []
        },
        "/api/v4/shared_zaps/": {
            "get": {
                "operationId": "api_v4_shared_zaps_list",
                "description": "",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "query",
                        "description": "Find shared zaps by their root node id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Find shared zaps that have a specific state.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_slugs",
                        "in": "query",
                        "description": "A comma separated list of service slugs that are all used by the shared Zap.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "head_service_slug",
                        "in": "query",
                        "description": "The service slug of the shared Zap's head service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tail_service_slug",
                        "in": "query",
                        "description": "The service slug of the shared Zap's tail service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customized",
                        "in": "query",
                        "description": "A flag to indicate whether to include or exclude Shared Zaps that have a customized title or description.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SharedZap"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Shared Zaps"
                ]
            },
            "post": {
                "operationId": "api_v4_shared_zaps_create",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SharedZap"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedZap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Shared Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/shared_zaps/{link_hash}/": {
            "get": {
                "operationId": "api_v4_shared_zaps_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedZap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Shared Zaps"
                ]
            },
            "put": {
                "operationId": "api_v4_shared_zaps_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SharedZap"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedZap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Shared Zaps"
                ]
            },
            "patch": {
                "operationId": "api_v4_shared_zaps_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SharedZap"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedZap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Shared Zaps"
                ]
            },
            "delete": {
                "operationId": "api_v4_shared_zaps_delete",
                "description": "Unshare a Zap with the given link hash",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Shared Zaps"
                ]
            },
            "parameters": [
                {
                    "name": "link_hash",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/sharing_stats/by_creator_id/{creator_id}//": {
            "get": {
                "operationId": "api_v4_sharing_stats_by_creator_id",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SharingStats"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Sharing Stats"
                ]
            },
            "parameters": [
                {
                    "name": "creator_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/sharing_stats/by_selected_api/{selected_api}//": {
            "get": {
                "operationId": "api_v4_sharing_stats_by_selected_api",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SharingStats"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Sharing Stats"
                ]
            },
            "parameters": [
                {
                    "name": "selected_api",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/sharing_stats/by_shared_zap/{zuid}//": {
            "get": {
                "operationId": "api_v4_sharing_stats_by_shared_zap",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SharingStats"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Sharing Stats"
                ]
            },
            "parameters": [
                {
                    "name": "zuid",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/support-eligibility/": {
            "get": {
                "operationId": "api_v4_support-eligibility_list",
                "description": "Determine if a user is eligible for various types of support.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Support Eligibility"
                ]
            },
            "parameters": []
        },
        "/api/v4/support-notes/": {
            "get": {
                "operationId": "api_v4_support-notes_list",
                "description": "Returns a set of notes associated with a hierarchy.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SupportNote"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Support Notes"
                ]
            },
            "parameters": []
        },
        "/api/v4/support-notes/{slug}/": {
            "get": {
                "operationId": "api_v4_support-notes_read",
                "description": "Returns a set of notes associated with a hierarchy.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportNote"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Support Notes"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/support/ticket/zendesk/": {
            "post": {
                "operationId": "api_v4_support_ticket_zendesk_create",
                "description": "Create a ticket in Zendesk via their API.\nFalls back to create a ticket by direct email if API creation fails.",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Support"
                ]
            },
            "parameters": []
        },
        "/api/v4/testimonials/": {
            "get": {
                "operationId": "api_v4_testimonials_list",
                "description": "",
                "parameters": [
                    {
                        "name": "featured",
                        "in": "query",
                        "description": "Specifies if an object is featured.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "values",
                        "in": "query",
                        "description": "A string value which, when set to \"random\", provides a random sampling of results.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Testimonial"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Testimonials"
                ]
            },
            "parameters": []
        },
        "/api/v4/testimonials/{id}/": {
            "get": {
                "operationId": "api_v4_testimonials_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Testimonial"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Testimonials"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this testimonial.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/tracking/event/": {
            "post": {
                "operationId": "api_v4_tracking_event_create",
                "description": "For folks that need to emit Avro events outside of our AWS environment,\nthey can make use of the v4 Events API. Events that originate from a\nfrontend application or an external Zapier system should use this API.\nEvents that are emitted by systems within our AWS environment should\nnot use the events API. Those systems should use the events toolkit\ndirectly to emit events.  This API is also not currently suitable for\nemitting actionable events. (e.g. events that would drive transactional\nprocessing by systems/services like the engine.)\n\nTo make use of this API, you'll need to make sure the Avro schema(s) for\nyour event types include `\"events_api\": true` as a top-level key/value pair.\nThis schema meta information informs the Events API that an event type\nshould be allowed to be emitted.\n\nPlease reference the Events API emitting section of the Events Toolkit\nManual for more background information:",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Tracking"
                ]
            },
            "parameters": []
        },
        "/api/v4/tracking/event/test/": {
            "post": {
                "operationId": "api_v4_tracking_event_test_create",
                "description": "For folks that need to emit Avro events outside of our AWS environment,\nthey can make use of the v4 Events API. Events that originate from a\nfrontend application or an external Zapier system should use this API.\nEvents that are emitted by systems within our AWS environment should\nnot use the events API. Those systems should use the events toolkit\ndirectly to emit events.  This API is also not currently suitable for\nemitting actionable events. (e.g. events that would drive transactional\nprocessing by systems/services like the engine.)\n\nTo make use of this API, you'll need to make sure the Avro schema(s) for\nyour event types include `\"events_api\": true` as a top-level key/value pair.\nThis schema meta information informs the Events API that an event type\nshould be allowed to be emitted.\n\nPlease reference the Events API emitting section of the Events Toolkit\nManual for more background information:",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Tracking"
                ]
            },
            "parameters": []
        },
        "/api/v4/triggers/": {
            "get": {
                "operationId": "api_v4_triggers_list",
                "summary": "Return all active claims for trigger subscriptions.",
                "description": "If the caller is service-to-service (or admin), they can provide a customuser_id\nalong with account_id (which remains subject to permissions). If you get a 403,\nthe membership of customuser_id to account_id likely why.",
                "parameters": [
                    {
                        "name": "claim_ids",
                        "in": "query",
                        "description": "Comma separated Claim ID UUIDs.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "customuser_id",
                        "in": "query",
                        "description": "The ID of the CustomUser if Admin or Service-to-Service authorization. Ignored otherwise, which defaults to the logged in user.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "The ID of the Account related to referenced CustomUser.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSubscriptionClaimDetailResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Triggers"
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_v4_triggers_create",
                "summary": "Create a claim on a trigger subscription.",
                "description": "Side effects:\n- On success the avro event [event.zapier.app_platform.trigger.InitializationSuccessEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationSuccessEvent) will be emitted.\n- On failure the avro event [event.zapier.app_platform.trigger.InitializationFailureEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationFailureEvent) will be emitted.\n\nIf this endpoint returns a failure, we may not emit an error event. An error response from this endpoint could be because auth doesn’t match the selected_api, or user doesn’t have permission to that auth, or selected_api doesn’t exist.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TriggerSubscriptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSubscriptionClaimResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSubscriptionError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSubscriptionError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSubscriptionError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Triggers"
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/v4/triggers/{claim_id}/": {
            "delete": {
                "operationId": "api_v4_release_claim",
                "summary": "Release a claim to a trigger subscription.",
                "description": "Requires the user making the request to be an admin or be the claim's owner.",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Triggers"
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "claim_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/updates/": {
            "get": {
                "operationId": "api_v4_updates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "service_slug",
                        "in": "query",
                        "description": "Filters by the related service slug.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Update"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Updates"
                ]
            },
            "parameters": []
        },
        "/api/v4/updates/{slug}/": {
            "get": {
                "operationId": "api_v4_updates_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Update"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Updates"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/use-cases/": {
            "get": {
                "operationId": "api_v4_use-cases_list",
                "description": "",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Specifies sort to apply to Use Cases. Currently only supports \"random\", which is also default. If an \"offset\" param is supplied, random sorting is not applied because the random order will not persist across pagination, and the user could experience duplicates between pages as a result.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "canonical_id",
                        "in": "query",
                        "description": "The canonical ID(s). Multiple canonical IDs can be provided by including multiple `canonical_id` query parameters.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UseCase"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Use Cases"
                ]
            },
            "parameters": []
        },
        "/api/v4/use-cases/{slug}/": {
            "get": {
                "operationId": "api_v4_use-cases_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UseCase"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Use Cases"
                ]
            },
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                }
            ]
        },
        "/api/v4/use-cases/{use_case_slug}/step/{step_pk}/action-search/": {
            "get": {
                "operationId": "api_v4_use-cases_step_step_action_ranking_search",
                "description": "",
                "parameters": [
                    {
                        "name": "app_name_contains",
                        "in": "query",
                        "description": "Query value to search app names by. Case-insensitive. Supports partial matches.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "previous_step_id",
                        "in": "query",
                        "description": "ID of previous use case step. Used together with previous_app_implementation_id and previous_key for getting conditionally ranked apps for the requested step, based on the user's previous app selection.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "previous_app_implementation_id",
                        "in": "query",
                        "description": "selected_api from previous step. Used together with previous_step_id and previous_key for getting conditionally ranked apps for the requested step, based on the user's previous app selection.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "previous_key",
                        "in": "query",
                        "description": "Action key from previous step. Used together with previous_step_id and previous_app_implementation_id for getting conditionally ranked apps for the requested step, based on the user's previous app selection.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UseCaseStepAction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Use Cases"
                ]
            },
            "parameters": [
                {
                    "name": "use_case_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "step_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/use-cases/{use_case_slug}/step/{step_pk}/actions/": {
            "get": {
                "operationId": "api_v4_use-cases_step_step_action_rankings",
                "description": "",
                "parameters": [
                    {
                        "name": "previous_step_id",
                        "in": "query",
                        "description": "ID of previous use case step. Used together with previous_app_implementation_id and previous_key for getting conditionally ranked apps for the requested step, based on the user's previous app selection.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "previous_app_implementation_id",
                        "in": "query",
                        "description": "selected_api from previous step. Used together with previous_step_id and previous_key for getting conditionally ranked apps for the requested step, based on the user's previous app selection.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "previous_key",
                        "in": "query",
                        "description": "Action key from previous step. Used together with previous_step_id and previous_app_implementation_id for getting conditionally ranked apps for the requested step, based on the user's previous app selection.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UseCaseStepAction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Use Cases"
                ]
            },
            "parameters": [
                {
                    "name": "use_case_slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "step_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/user-photo-upload/": {
            "post": {
                "operationId": "api_v4_user-photo-upload_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "User Photo Upload"
                ]
            },
            "parameters": []
        },
        "/api/v4/user-skill-levels/": {
            "get": {
                "operationId": "api_v4_user-skill-levels_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SkillLevelAction"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User Skill Levels"
                ]
            },
            "parameters": []
        },
        "/api/v4/user-skill-levels/{action_key}/complete/": {
            "post": {
                "operationId": "api_v4_user-skill-levels_complete_action",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SkillLevelAction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillLevelAction"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User Skill Levels"
                ]
            },
            "parameters": [
                {
                    "name": "action_key",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/whoami/": {
            "get": {
                "operationId": "api_v4_whoami_list",
                "description": "The URL structure here is of the list-format, but that's because\nthe primary key is implied by the session. There are several ways\nto handle this conversion in DRF, but this is, IMO, the simplest.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Whoami"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/": {
            "get": {
                "operationId": "api_v4_zaps_list",
                "summary": "List all the Zaps that the current user has access to in this account context",
                "description": "The account context needs to be passed by `account_id` query param, otherwise\nall Zaps that the user has access to across all the user's accounts will be included.",
                "parameters": [
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Filter Zaps by the given owner. A predefined `me` filter is also supported, which will filter the Zaps owned by the current logged in user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "query",
                        "description": "Filter Zaps by the given folder_id. Use `0` for the \"home folder\".",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for Zaps by title and Service title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "A comma-separated list of versioned or versionless selected_apis; Zaps returned will use any of the provided selected_api values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all_selected_apis",
                        "in": "query",
                        "description": "A comma-separated list of versioned or versionless selected_apis; Zaps returned will use all of the provided selected_api values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A comma-separated list of Zap IDs to filter Zaps by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "auth_ids",
                        "in": "query",
                        "description": "A comma-separated list of auth_ids; Zaps returned will use any of the provided auth ID values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_slug",
                        "in": "query",
                        "description": "Filter Zaps that use a given Service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Return Zaps whose title contains the provided string.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return Zaps which are in the provided state (on, off, or draft).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity_start_date",
                        "in": "query",
                        "description": "Return Zaps which have activity after the provided date/time. Formatted in an ISO-8601 date/time string including timezone.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity_end_date",
                        "in": "query",
                        "description": "Return Zaps which have activity before the provided date/time.Formatted in an ISO-8601 date/time string including timezone.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kind",
                        "in": "query",
                        "description": "Return Zaps belonging only to this specific kind value.Available kinds: workflow, transfer",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "params__{key}={value}",
                        "in": "query",
                        "description": "Return Zaps that have a specific key/value set in the params field of the Zap. Only works in conjunction with selected_api filtering.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Zap"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/bulk-delete/": {
            "post": {
                "operationId": "api_v4_zaps_bulk_delete",
                "description": "Bulk delete a list of Zaps",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteZapsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteZapsRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/bulk-transfer/": {
            "post": {
                "operationId": "api_v4_zaps_bulk_transfer",
                "description": "Bulk transfer a list of Zaps to a new owner",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferZapsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferZapsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/export/": {
            "post": {
                "operationId": "api_v4_zaps_export_zaps",
                "summary": "Export a list of zaps",
                "description": "There are two ways to export the zaps. One is to pass a list of zap IDs\nwith `zap_ids` POST field. The other one is to export all the zaps\nfrom the account passed via `account_id` POST field.\n\nA list of serialized zaps will be returned.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExportZapsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportZapsRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/import/": {
            "post": {
                "operationId": "api_v4_zaps_import_zaps",
                "summary": "Import zaps from a given zapfile",
                "description": "The import needs a `zapfile` sent as a multipart file. Additionally\nyou can send `destination_folder_id`, which should specify\na folder where the zaps need to be imported, and `account_id`, which scopes\nthe account in which the zaps need to be imported, as long as the user\ndoing the action is a member of the said account.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportZapsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportZapsRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/move/": {
            "post": {
                "operationId": "api_v4_zaps_move_zaps",
                "description": "Move a list of zaps to a different target account",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveZapsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MoveZapsRequest"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/trash/": {
            "get": {
                "operationId": "api_v4_zaps_get_trash",
                "description": "Get the list of trashed zaps",
                "parameters": [
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Filter Zaps by the given owner. A predefined `me` filter is also supported, which will filter the Zaps owned by the current logged in user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "query",
                        "description": "Filter Zaps by the given folder_id. Use `0` for the \"home folder\".",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for Zaps by title and Service title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "A comma-separated list of versioned or versionless selected_apis; Zaps returned will use any of the provided selected_api values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all_selected_apis",
                        "in": "query",
                        "description": "A comma-separated list of versioned or versionless selected_apis; Zaps returned will use all of the provided selected_api values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A comma-separated list of Zap IDs to filter Zaps by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "auth_ids",
                        "in": "query",
                        "description": "A comma-separated list of auth_ids; Zaps returned will use any of the provided auth ID values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_slug",
                        "in": "query",
                        "description": "Filter Zaps that use a given Service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Return Zaps whose title contains the provided string.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return Zaps which are in the provided state (on, off, or draft).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity_start_date",
                        "in": "query",
                        "description": "Return Zaps which have activity after the provided date/time. Formatted in an ISO-8601 date/time string including timezone.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity_end_date",
                        "in": "query",
                        "description": "Return Zaps which have activity before the provided date/time.Formatted in an ISO-8601 date/time string including timezone.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kind",
                        "in": "query",
                        "description": "Return Zaps belonging only to this specific kind value.Available kinds: workflow, transfer",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "params__{key}={value}",
                        "in": "query",
                        "description": "Return Zaps that have a specific key/value set in the params field of the Zap. Only works in conjunction with selected_api filtering.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Zap"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/usage/": {
            "get": {
                "operationId": "api_v4_zaps_get_zap_usage",
                "summary": "A simple resource which returns the number of off, on, and draft Zaps\na user has, broken down by account ID.",
                "description": "Introduced to make it easier (read: possible) to decide whether the \"move\nzaps\" button should be shown or not (as this depends on whether the user\nhas any Zaps in any of their accounts). In future, when we remove the\nscoping for all endpoints, this will be more consistent!",
                "parameters": [
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Filter Zaps by the given owner. A predefined `me` filter is also supported, which will filter the Zaps owned by the current logged in user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_id",
                        "in": "query",
                        "description": "Filter Zaps by the given folder_id. Use `0` for the \"home folder\".",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search for Zaps by title and Service title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "A comma-separated list of versioned or versionless selected_apis; Zaps returned will use any of the provided selected_api values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all_selected_apis",
                        "in": "query",
                        "description": "A comma-separated list of versioned or versionless selected_apis; Zaps returned will use all of the provided selected_api values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A comma-separated list of Zap IDs to filter Zaps by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "auth_ids",
                        "in": "query",
                        "description": "A comma-separated list of auth_ids; Zaps returned will use any of the provided auth ID values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_slug",
                        "in": "query",
                        "description": "Filter Zaps that use a given Service.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Return Zaps whose title contains the provided string.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return Zaps which are in the provided state (on, off, or draft).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity_start_date",
                        "in": "query",
                        "description": "Return Zaps which have activity after the provided date/time. Formatted in an ISO-8601 date/time string including timezone.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "activity_end_date",
                        "in": "query",
                        "description": "Return Zaps which have activity before the provided date/time.Formatted in an ISO-8601 date/time string including timezone.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kind",
                        "in": "query",
                        "description": "Return Zaps belonging only to this specific kind value.Available kinds: workflow, transfer",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "params__{key}={value}",
                        "in": "query",
                        "description": "Return Zaps that have a specific key/value set in the params field of the Zap. Only works in conjunction with selected_api filtering.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Zap"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": []
        },
        "/api/v4/zaps/{id}/": {
            "get": {
                "operationId": "api_v4_zaps_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Zap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "put": {
                "operationId": "api_v4_zaps_update",
                "summary": "Update a Zap",
                "description": "Only three fields can be updated; `title`, `folder_id` and `customuser_id`.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Zap"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Zap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "patch": {
                "operationId": "api_v4_zaps_partial_update",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Zap"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Zap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "delete": {
                "operationId": "api_v4_zaps_delete",
                "description": "Remove the given Zap",
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this node.",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/api/v4/zaps/{node_pk}/choices/": {
            "get": {
                "operationId": "api_v4_zaps_choices_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChoiceResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": [
                {
                    "name": "node_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/zaps/{node_pk}/choices/{action}/": {
            "get": {
                "operationId": "api_v4_zaps_choices_read",
                "description": "",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChoiceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zaps"
                ]
            },
            "parameters": [
                {
                    "name": "node_pk",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "action",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v4/zdl/convert-to-nodes/": {
            "post": {
                "operationId": "api_v4_zdl_convert-to-nodes_create",
                "description": "Convert the provided ZDL document to the equivalent Zap of Nodes,\noptionally unpausing the Zap.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConvertZDLToNodes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertZDLToNodesResponseSuccess"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertZDLToNodesResponseSuccess"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertZDLToNodesResponseFailure"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertZDLToNodesResponseFailure"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertZDLToNodesResponseFailure"
                                }
                            }
                        }
                    },
                    "426": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertZDLToNodesResponseFailure"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zdl"
                ]
            },
            "parameters": []
        },
        "/api/v4/zdl/run/published": {
            "post": {
                "operationId": "api_v4_zdl_run_published_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ZDLRunPublished"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The ZDL was succesfully scheduled for execution."
                    },
                    "400": {
                        "description": "A validation error occurred."
                    },
                    "401": {
                        "description": "This endpoint requires authentication."
                    },
                    "429": {
                        "description": "Too many requests."
                    }
                },
                "tags": [
                    "Zdl"
                ]
            },
            "parameters": []
        },
        "/api/v4/zdl/validate": {
            "post": {
                "operationId": "api_v4_zdl_validate_create",
                "description": "Validate the provided ZDL.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ZDLValidateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The supplied ZDL is valid."
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZDLValidateResponseError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This endpoint requires authentication."
                    }
                },
                "tags": [
                    "Zdl"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/public/v1/zap-runs": {
            "get": {
                "operationId": "api_zap-history_public_v1_zap-runs_list",
                "description": "Retrieves a list of Zap runs, optionally using various filtering facets.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "api"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v1/task-usage": {
            "get": {
                "operationId": "api_zap-history_v1_task-usage_list",
                "description": "**Team Monitor is currently iterating on this endpoint as a replacement for `v4/accounts/{account_id}/task-usage`\nand it may not be ready for full-time adoption.** Please reach out over in #team-monitor!\nWe want to hear feedback about how your team uses the pre-existing endpoints and what you\nwould want to see out of new ones.",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "zap_ids",
                        "in": "query",
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Interval size for task usage aggregation; from/to date ranges larger than 60 days will force the use of month-sized aggregation intervals",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day",
                                "month"
                            ],
                            "default": "day"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "IANA timezone name to use for aggregation and output",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZHTaskUsageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v1/top-zaps": {
            "get": {
                "operationId": "api_zap-history_v1_top-zaps_list",
                "description": "**Team Monitor is currently iterating on this endpoint as a replacement for `v4/accounts/{account_id}/top-zaps`\nand it may not be ready for full-time adoption.** Please reach out over in #team-monitor!\nWe want to hear feedback about how your team uses the pre-existing endpoints and what you\nwould want to see out of new ones.\n\nRetrieve the top Zaps for a given account based on the provided filters.",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "zap_ids",
                        "in": "query",
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZHTopZaps"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/analytics/error-rate-by-zap-table": {
            "get": {
                "operationId": "api_zap-history_v2_analytics_error-rate-by-zap-table_list",
                "description": "Retrieve task usage broken down by Owner, in a format suitable\nto populate the Top X table in the Analytics Dashboard.",
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 6
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorRateByZapTableResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/analytics/task-usage-by-app-table": {
            "get": {
                "operationId": "api_zap-history_v2_analytics_task-usage-by-app-table_list",
                "description": "Retrieve task usage broken down by App, in a format suitable\nto populate the Top X table in the Analytics Dashboard.",
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskUsageByAppTableResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/analytics/task-usage-by-owner-table": {
            "get": {
                "operationId": "api_zap-history_v2_analytics_task-usage-by-owner-table_list",
                "description": "Retrieve task usage broken down by Owner, in a format suitable\nto populate the Top X table in the Analytics Dashboard.",
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskUsageByOwnerTableResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/analytics/task-usage-by-zap-table": {
            "get": {
                "operationId": "api_zap-history_v2_analytics_task-usage-by-zap-table_list",
                "description": "Retrieve task usage broken down by Zap, in a format suitable\nto populate the Top X table in the Analytics Dashboard.",
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End datetime for query; ISO-8601",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskUsageByZapTableResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs": {
            "get": {
                "operationId": "api_zap-history_v2_runs_list",
                "description": "Retrieves a list of Zap runs, optionally using various filtering facets.",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "zap_ids",
                        "in": "query",
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query to be used for filtering Zap runs.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "Comma-separated list of Zap run statuses used for filtering",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "delayed",
                                    "scheduled",
                                    "pending",
                                    "error",
                                    "error_handled",
                                    "halted",
                                    "throttled",
                                    "held",
                                    "filtered",
                                    "skipped",
                                    "success"
                                ]
                            }
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "start_time",
                                "status",
                                "customuser_id",
                                "-customuser_id",
                                "-start_time",
                                "-status"
                            ],
                            "default": "-start_time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapRunsV2Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/bulk-delete": {
            "post": {
                "operationId": "api_zap-history_v2_runs_bulk-delete_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapRunsMassActionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/bulk-replay": {
            "post": {
                "operationId": "api_zap-history_v2_runs_bulk-replay_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplayBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapRunsMassActionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/export": {
            "post": {
                "operationId": "api_zap-history_v2_runs_export_create",
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExportBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/held-count": {
            "get": {
                "operationId": "api_zap-history_v2_runs_held-count_list",
                "summary": "This is a brand new endpoint that is still being proved and not yet\nready for use.",
                "description": "Returns counts of held runs based on filters provided via query\nparameters.",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_shared",
                        "in": "query",
                        "description": "Sets whether counts should include Zaps that are shared with the current user.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Specifies if counts should be grouped by the reason for being held or by Zap ID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reason",
                                "zap"
                            ],
                            "default": "zap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeldRunCountsV2Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/request-logs/{invocation_id}": {
            "get": {
                "operationId": "api_zap-history_v2_runs_request-logs_read",
                "description": "Retrieve request/response logs for a provided invocation ID.",
                "parameters": [
                    {
                        "name": "invocation_id",
                        "in": "query",
                        "description": "Correlates request logs to a specific step from a Zap run",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "run_id",
                        "in": "query",
                        "description": "Required to validate that the request log belongs to a run that the user can view",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryRequestLogsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": [
                {
                    "name": "invocation_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/zap-history/v2/runs/top-runs": {
            "get": {
                "operationId": "api_zap-history_v2_runs_top-runs_list",
                "description": "List top zaps for given search parameters.",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "zap_ids",
                        "in": "query",
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "Comma-separated list of Zap run statuses used for filtering",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "delayed",
                                    "scheduled",
                                    "pending",
                                    "error",
                                    "error_handled",
                                    "halted",
                                    "throttled",
                                    "held",
                                    "filtered",
                                    "skipped",
                                    "success"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TopZapsByRunsV2Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/usage": {
            "get": {
                "operationId": "api_zap-history_v2_runs_usage_list",
                "description": "Gets graph data of zap usage in per-day buckets.",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Start datetime for query; ISO-8601",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customuser_ids",
                        "in": "query",
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "description": "Comma-separated list of folder_id values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "kinds",
                        "in": "query",
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "workflow",
                                    "transfer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "selected_apis",
                        "in": "query",
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "zap_ids",
                        "in": "query",
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query to be used for filtering",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "Comma-separated list of Zap run statuses used for filtering",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "delayed",
                                    "scheduled",
                                    "pending",
                                    "error",
                                    "error_handled",
                                    "halted",
                                    "throttled",
                                    "held",
                                    "filtered",
                                    "skipped",
                                    "success"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetZapRunsUsageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/zap-run-counts": {
            "get": {
                "operationId": "api_zap-history_v2_runs_zap-run-counts_list",
                "description": "",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_shared",
                        "in": "query",
                        "description": "Sets whether counts should include Zaps that are shared with the current user.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Comma-separated list specifying what status of runs to return counts for",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "default": "errored"
                        }
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Comma-separated list of 'zap' and/or 'status' specifying how you want the results grouped",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "default": "status,zap"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "default": "2024-04-01"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "default": "2024-05-01"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapRunCountsV2Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": []
        },
        "/api/zap-history/v2/runs/{run_id}": {
            "get": {
                "operationId": "api_zap-history_v2_runs_read",
                "summary": "This is a brand new endpoint that is still being proved and not yet ready for use.",
                "description": "Retrieves the full details of a Zap run.",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "run_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapRunV2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ZapHistoryErrorV2"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Zap History"
                ]
            },
            "parameters": [
                {
                    "name": "run_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api_public/beta/zap/{node_id}/pause": {
            "put": {
                "operationId": "api_public_beta_zap_pause_update",
                "summary": "Pause a running Zap",
                "description": "Attempt to pause the Zap that corresponds to node `node_id`.\nA Zap can only be paused if it is owned by the current user and the access token contains the scope `zap:pause`.",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "A unique integer value identifying this node.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "api_public"
                ]
            },
            "parameters": [
                {
                    "name": "node_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/player/": {
            "get": {
                "operationId": "player_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "player"
                ]
            },
            "post": {
                "operationId": "player_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "player"
                ]
            },
            "parameters": []
        },
        "/player/confirmation": {
            "get": {
                "operationId": "player_confirmation_list",
                "description": "",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "player"
                ]
            },
            "post": {
                "operationId": "player_confirmation_create",
                "description": "",
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "player"
                ]
            },
            "parameters": []
        },
        "/scim/v2/.search": {
            "get": {
                "operationId": "scim_v2_.search_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Bulk": {
            "get": {
                "operationId": "scim_v2_Bulk_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Groups": {
            "get": {
                "operationId": "scim_v2_Groups_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "post": {
                "operationId": "scim_v2_Groups_create",
                "description": "Create a new team from the given SCIM blob",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Groups/.search": {
            "post": {
                "operationId": "scim_v2_Groups_search",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Groups/{id}": {
            "get": {
                "operationId": "scim_v2_Groups_read",
                "description": "Retrieve the underlying object",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "put": {
                "operationId": "scim_v2_Groups_update",
                "description": "Update the underlying object with the values received from the IdP",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "patch": {
                "operationId": "scim_v2_Groups_partial_update",
                "description": "Implement PATCH support for the underlying resource",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/scim/v2/Me": {
            "get": {
                "operationId": "scim_v2_Me_list",
                "summary": "Resource that points to the user represented by the underlying token",
                "description": "The endpoint will return the exact location of the user represented\nby the token.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/ResourceTypes": {
            "get": {
                "operationId": "scim_v2_ResourceTypes_list",
                "description": "Generate the resource types exposed by this endpoint",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/ResourceTypes/{id}": {
            "get": {
                "operationId": "scim_v2_ResourceTypes_read",
                "description": "Generate the resource types exposed by this endpoint",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[^/]+"
                    }
                }
            ]
        },
        "/scim/v2/Schemas": {
            "get": {
                "operationId": "scim_v2_Schemas_list",
                "description": "The schemas endpoint that returns to the IdP the schemas we know about",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Schemas/{id}": {
            "get": {
                "operationId": "scim_v2_Schemas_read",
                "description": "The schemas endpoint that returns to the IdP the schemas we know about",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "pattern": "[^/]+"
                    }
                }
            ]
        },
        "/scim/v2/ServiceProviderConfig": {
            "get": {
                "operationId": "scim_v2_ServiceProviderConfig_list",
                "summary": "Generate the Service Provider configuration",
                "description": "This endpoint is called by the IdP for figuring out how our\nAPI is going to behave.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Users": {
            "get": {
                "operationId": "scim_v2_Users_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "required": [
                                        "count",
                                        "results"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "post": {
                "operationId": "scim_v2_Users_create",
                "description": "Create a new user from the given SCIM blob.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Users/.search": {
            "post": {
                "operationId": "scim_v2_Users_search",
                "description": "",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": []
        },
        "/scim/v2/Users/{id}": {
            "get": {
                "operationId": "scim_v2_Users_read",
                "description": "Retrieve the underlying object",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "put": {
                "operationId": "scim_v2_Users_update",
                "description": "Update the underlying object with the values received from the IdP",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "patch": {
                "operationId": "scim_v2_Users_partial_update",
                "description": "Implement PATCH support for the underlying resource",
                "requestBody": {
                    "$ref": "#/components/requestBodies/scim_v2_Groups_createData"
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "scim"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        }
    },
    "tags": [
        {
            "name": "tier:1",
            "description": "Service Tier 1",
            "externalDocs": {
                "description": "Learn more about service tiers",
                "url": "https://coda.io/d/Service-Ownership_dyBHCs01Vq1/Service-Tiers_submB#_luBKL"
            }
        }
    ],
    "servers": [
        {
            "url": "https://zapier-staging.com"
        }
    ],
    "components": {
        "requestBodies": {
            "scim_v2_Groups_createData": {
                "content": {
                    "application/scim+json": {
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "required": true
            },
            "Onboarding": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Onboarding"
                        }
                    }
                },
                "required": true
            },
            "BillingAccount": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BillingAccount"
                        }
                    }
                },
                "required": true
            },
            "api_v4_accounts_domains_members_export_membersData": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "required": true
            },
            "ServiceRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ServiceRequest"
                        }
                    }
                },
                "required": true
            },
            "AccountProvision": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountProvision"
                        }
                    }
                },
                "required": true
            },
            "OAuthApplication": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OAuthApplication"
                        }
                    }
                },
                "required": true
            },
            "InvitationCode": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InvitationCode"
                        }
                    }
                },
                "required": true
            },
            "AccountFeatureEnrollment": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AccountFeatureEnrollment"
                        }
                    }
                },
                "required": true
            },
            "Feedback": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Feedback"
                        }
                    }
                },
                "required": true
            },
            "CampaignOffer": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CampaignOffer"
                        }
                    }
                },
                "required": true
            },
            "TeamRequestWrite": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TeamRequestWrite"
                        }
                    }
                },
                "required": true
            },
            "ShareAndUnshareRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ShareAndUnshareRequest"
                        }
                    }
                },
                "required": true
            },
            "DomainVerificationRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DomainVerificationRequest"
                        }
                    }
                },
                "required": true
            },
            "Folder": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Folder"
                        }
                    }
                },
                "required": true
            },
            "IdentityProvider": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/IdentityProvider"
                        }
                    }
                },
                "required": true
            },
            "Invitation": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Invitation"
                        }
                    }
                },
                "required": true
            },
            "FullAccountMember": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FullAccountMember"
                        }
                    }
                },
                "required": true
            },
            "TeamWrite": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TeamWrite"
                        }
                    }
                },
                "required": true
            },
            "Authentication": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Authentication"
                        }
                    }
                },
                "required": true
            },
            "GivesRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GivesRequest"
                        }
                    }
                },
                "required": true
            },
            "NeedsRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NeedsRequest"
                        }
                    }
                },
                "required": true
            },
            "PersistedModal": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PersistedModal"
                        }
                    }
                },
                "required": true
            },
            "SampleRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SampleRequest"
                        }
                    }
                },
                "required": true
            },
            "SharedZap": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SharedZap"
                        }
                    }
                },
                "required": true
            },
            "Zap": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Zap"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "Basic": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "schemas": {
            "Events": {
                "required": [
                    "id",
                    "action",
                    "direct_object",
                    "event_date"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "service": {
                        "title": "Service",
                        "description": "Name of the service that emitted the event",
                        "type": "string",
                        "nullable": true
                    },
                    "actor": {
                        "title": "Actor",
                        "description": "Entity that caused the event to happen",
                        "type": "string",
                        "nullable": true
                    },
                    "actor_representation": {
                        "title": "Actor representation",
                        "description": "Human-readable string representation of the actor at the time the event occurred",
                        "type": "string",
                        "nullable": true
                    },
                    "actor_group": {
                        "title": "Actor group",
                        "description": "Group that the actor belonged to when the event's action is initiated, e.g, an account_id",
                        "type": "string",
                        "nullable": true
                    },
                    "actor_group_representation": {
                        "title": "Actor group representation",
                        "description": "Human-readable string representation of the actor group at the time the event occurred",
                        "type": "string",
                        "nullable": true
                    },
                    "action": {
                        "title": "Action",
                        "description": "Action that was performed in the event",
                        "type": "string",
                        "enum": [
                            "auth.stale",
                            "user.provisioned",
                            "user.deprovisioned",
                            "team.provisioned",
                            "team.deprovisioned",
                            "team_member.provisioned",
                            "team_member.deprovisioned",
                            "zap.created",
                            "zap.disabled",
                            "zap.discarded",
                            "zap.owner_changed",
                            "zap.restored",
                            "zap.version_enabled",
                            "zap.version_published",
                            "zap.switched_on",
                            "zap.switched_off",
                            "zap.deleted",
                            "account.feature_enroll",
                            "account.feature_unenroll",
                            "zap.approval_request_approved",
                            "zap.approval_request_cancelled",
                            "zap.approval_request_denied",
                            "zap.approval_request_sent"
                        ]
                    },
                    "direct_object": {
                        "title": "Direct object",
                        "description": "Object that was directly manipulated or involved in the event's action",
                        "type": "string",
                        "minLength": 1
                    },
                    "direct_object_type": {
                        "title": "Direct object type",
                        "description": "Type of the object that's directly involved in the event's action",
                        "type": "string",
                        "nullable": true
                    },
                    "direct_object_representation": {
                        "title": "Direct object representation",
                        "description": "Human-readable string representation of the object that initiated the action in the event",
                        "type": "string",
                        "nullable": true
                    },
                    "indirect_object": {
                        "title": "Indirect object",
                        "description": "Object that is indirectly related to the event. This object won't be initiating the action in the event, but could be on the receiving end",
                        "type": "string",
                        "nullable": true
                    },
                    "indirect_object_type": {
                        "title": "Indirect object type",
                        "description": "Data type of the indirect object that is related to the event that occurred",
                        "type": "string",
                        "nullable": true
                    },
                    "indirect_object_representation": {
                        "title": "Indirect object representation",
                        "description": "Human-readable string representation of the indirect object at the time the event happened",
                        "type": "string",
                        "nullable": true
                    },
                    "event_date": {
                        "title": "Event date",
                        "description": "Datetime when the event happened",
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the event",
                        "type": "string",
                        "nullable": true
                    },
                    "event_data": {
                        "title": "Event data",
                        "description": "Data involved in the event",
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "EventsListResponse": {
                "required": [
                    "count",
                    "objects"
                ],
                "type": "object",
                "properties": {
                    "offset": {
                        "title": "Offset",
                        "type": "integer"
                    },
                    "limit": {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Events"
                        }
                    }
                }
            },
            "ErrorDetails": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "title": "Field",
                        "type": "string",
                        "minLength": 1
                    },
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "minLength": 1
                    },
                    "details": {
                        "title": "Details",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "ZapHistoryError": {
                "required": [
                    "status",
                    "_type",
                    "_errors"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "integer"
                    },
                    "_type": {
                        "title": "type",
                        "type": "string",
                        "minLength": 1
                    },
                    "_errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetails"
                        }
                    }
                }
            },
            "SendEmailResponse": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "title": "Task id",
                        "description": "The celery task ID, or None if the task was sent.",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "ProjectsPartial": {
                "required": [
                    "title",
                    "owner_id"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "owner_id": {
                        "title": "Owner id",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                }
            },
            "AssetFetch": {
                "required": [
                    "asset_type",
                    "asset_id"
                ],
                "type": "object",
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/ProjectsPartial"
                    },
                    "asset_type": {
                        "title": "Asset type",
                        "type": "string",
                        "minLength": 1
                    },
                    "asset_id": {
                        "title": "Asset id",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "AppAccessControlStrategy": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "strategy": {
                        "title": "Strategy",
                        "type": "string",
                        "enum": [
                            "allowlist",
                            "denylist"
                        ]
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    }
                }
            },
            "ProjectsList": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "owner_id": {
                        "title": "Owner id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Projects": {
                "required": [
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "owner_id": {
                        "title": "Owner id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "ProjectsUpdateRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    }
                }
            },
            "ShareAndUnshareRequest": {
                "required": [
                    "subject_id",
                    "subject_type",
                    "role"
                ],
                "type": "object",
                "properties": {
                    "subject_id": {
                        "title": "Subject id",
                        "type": "integer"
                    },
                    "subject_type": {
                        "title": "Subject type",
                        "type": "string",
                        "enum": [
                            "team",
                            "user",
                            "account"
                        ]
                    },
                    "subject_type_group": {
                        "title": "Subject type group",
                        "type": "string",
                        "enum": [
                            "member"
                        ]
                    },
                    "role": {
                        "title": "Role",
                        "type": "string",
                        "enum": [
                            "editor"
                        ]
                    }
                }
            },
            "ProjectAsset": {
                "required": [
                    "asset_type",
                    "asset_id"
                ],
                "type": "object",
                "properties": {
                    "asset_type": {
                        "title": "Asset type",
                        "type": "string",
                        "enum": [
                            "zap",
                            "canvas",
                            "interface",
                            "table",
                            "chatbot"
                        ]
                    },
                    "asset_id": {
                        "title": "Asset id",
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1
                    },
                    "asset_identifier": {
                        "title": "Asset identifier",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "ZapSearch": {
                "required": [
                    "zap_id",
                    "title",
                    "apps",
                    "authentications"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "zap_id": {
                        "title": "Zap id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "minLength": 1
                    },
                    "apps": {
                        "type": "array",
                        "items": {
                            "title": "Apps",
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "authentications": {
                        "type": "array",
                        "items": {
                            "title": "Authentications",
                            "type": "integer",
                            "maximum": 9223372036854776000,
                            "minimum": -9223372036854776000
                        }
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "search_rank": {
                        "title": "Search rank",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "AccountAccessPolicy": {
                "required": [
                    "account"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "account": {
                        "title": "Account",
                        "description": "Account for which this access policy is to be enforced.",
                        "type": "integer"
                    },
                    "access_level": {
                        "title": "Access level",
                        "description": "Chosen access level for the associated account.",
                        "type": "string",
                        "enum": [
                            "auto_join",
                            "invite_only"
                        ]
                    },
                    "verify_emails": {
                        "title": "Verify emails",
                        "description": "Should email confirmation be enforced for joining members?",
                        "type": "boolean"
                    }
                }
            },
            "BillingAccount": {
                "type": "object",
                "properties": {
                    "access_policy": {
                        "$ref": "#/components/schemas/AccountAccessPolicy"
                    },
                    "allow_data_retention_config": {
                        "title": "Allow data retention config",
                        "type": "string",
                        "readOnly": true
                    },
                    "allow_task_replay": {
                        "title": "Allow task replay",
                        "type": "string",
                        "readOnly": true
                    },
                    "autoreplay_errored_tasks_override": {
                        "title": "Autoreplay errored tasks override",
                        "type": "string",
                        "readOnly": true
                    },
                    "block_and_release": {
                        "title": "Block and release",
                        "type": "string",
                        "readOnly": true
                    },
                    "companies_trial_end_date": {
                        "title": "Companies trial end date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "companies_trial_start_date": {
                        "title": "Companies trial start date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "company_account_end_date": {
                        "title": "Company account end date",
                        "description": "Marks the date when the company account ended.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "company_address": {
                        "title": "Company address",
                        "type": "string",
                        "readOnly": true
                    },
                    "company_name": {
                        "title": "Company name",
                        "type": "string",
                        "readOnly": true
                    },
                    "currency": {
                        "title": "Currency",
                        "type": "string",
                        "readOnly": true
                    },
                    "customer_id": {
                        "title": "Customer id",
                        "type": "string",
                        "maxLength": 32,
                        "nullable": true
                    },
                    "data_retention_days": {
                        "title": "Data retention days",
                        "type": "integer",
                        "maximum": 30,
                        "minimum": 7
                    },
                    "disallowed_payment_methods": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true
                    },
                    "enabled_trial_extensions": {
                        "title": "Enabled trial extensions",
                        "type": "object",
                        "readOnly": true
                    },
                    "enterprise_account_end_date": {
                        "title": "Enterprise account end date",
                        "type": "string",
                        "readOnly": true
                    },
                    "enterprise_trial_end_date": {
                        "title": "Enterprise trial end date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "enterprise_trial_start_date": {
                        "title": "Enterprise trial start date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "has_been_in_enterprise_trial": {
                        "title": "Has been in enterprise trial",
                        "type": "string",
                        "readOnly": true
                    },
                    "first_known_upgrade_date": {
                        "title": "First known upgrade date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "has_been_in_companies_trial": {
                        "title": "Has been in companies trial",
                        "description": "Used to mark accounts that have been in a Companies trial, so they can't do repeat runs",
                        "type": "boolean",
                        "nullable": true
                    },
                    "has_modern_pricing_plan": {
                        "title": "Has modern pricing plan",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "icon": {
                        "title": "Icon",
                        "type": "string",
                        "readOnly": true,
                        "format": "uri"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "invoice_email": {
                        "title": "Invoice email",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_chat_eligible": {
                        "title": "Is chat eligible",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_company_account": {
                        "title": "Is company account",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_controlled_by_identity_provider": {
                        "title": "Is controlled by identity provider",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_google_domain_verification_supported": {
                        "title": "Is google domain verification supported",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_in_experts_mvp": {
                        "title": "Is in experts mvp",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_premier_chat_eligible": {
                        "title": "Is premier chat eligible",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_saml_required": {
                        "title": "Is saml required",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_team_account": {
                        "title": "Is team account",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_trialing_companies": {
                        "title": "Is trialing companies",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_trialing_enterprise": {
                        "title": "Is trialing enterprise",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_trialing_teams": {
                        "title": "Is trialing teams",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_trialing": {
                        "title": "Is trialing",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_unlimited": {
                        "title": "Is unlimited",
                        "type": "string",
                        "readOnly": true
                    },
                    "last_charge_fail": {
                        "title": "Last charge fail",
                        "type": "string",
                        "readOnly": true
                    },
                    "last_plan_change_at": {
                        "title": "Last plan change at",
                        "type": "string",
                        "readOnly": true
                    },
                    "last_plan_id": {
                        "title": "Last plan id",
                        "type": "string",
                        "readOnly": true
                    },
                    "logo_choice": {
                        "title": "Logo choice",
                        "type": "string",
                        "maxLength": 32,
                        "nullable": true
                    },
                    "logo_url": {
                        "title": "Logo url",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "offer_returning_trial_extension": {
                        "title": "Offer returning trial extension",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "owner": {
                        "title": "Owner",
                        "type": "string",
                        "readOnly": true
                    },
                    "paid_manually_for_next_period": {
                        "title": "Paid manually for next period",
                        "type": "string",
                        "readOnly": true
                    },
                    "paying": {
                        "title": "Paying",
                        "type": "string",
                        "readOnly": true
                    },
                    "pays_manually": {
                        "title": "Pays manually",
                        "type": "string",
                        "readOnly": true
                    },
                    "period_end": {
                        "title": "Period end",
                        "type": "string",
                        "readOnly": true
                    },
                    "period_start": {
                        "title": "Period start",
                        "type": "string",
                        "readOnly": true
                    },
                    "plan_group_id": {
                        "title": "Plan group id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "plan_info": {
                        "title": "Plan info",
                        "type": "string",
                        "readOnly": true
                    },
                    "polling_interval": {
                        "title": "Polling interval",
                        "type": "string",
                        "readOnly": true
                    },
                    "send_invoice_email": {
                        "title": "Send invoice email",
                        "type": "string",
                        "readOnly": true
                    },
                    "surveys_submitted": {
                        "title": "Surveys submitted",
                        "type": "string",
                        "readOnly": true
                    },
                    "switches": {
                        "title": "Switches",
                        "type": "string",
                        "readOnly": true
                    },
                    "team_account_end_date": {
                        "title": "Team account end date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "teams_trial_end_date": {
                        "title": "Teams trial end date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "trial_auto_upgrade": {
                        "title": "Trial auto upgrade",
                        "type": "boolean",
                        "nullable": true
                    },
                    "trial_end_date": {
                        "title": "Trial end date",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "active_offer_id": {
                        "title": "Active offer id",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "pending_offer_id": {
                        "title": "Pending offer id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "promotion_plan_group_id": {
                        "title": "Promotion plan group id",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "task_buffer_override": {
                        "title": "Task buffer override",
                        "description": "Buffer multiplier for task usage limit in a billing period",
                        "type": "string",
                        "format": "decimal",
                        "nullable": true
                    },
                    "teams_trial_auto_upgrade": {
                        "title": "Teams trial auto upgrade",
                        "description": "Automatically upgrade to Teams once a teams trial is over",
                        "type": "boolean"
                    },
                    "companies_trial_auto_upgrade": {
                        "title": "Companies trial auto upgrade",
                        "description": "Automatically upgrade to Companies once a companies trial is over",
                        "type": "boolean",
                        "nullable": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "has_overdue_invoice": {
                        "title": "Has overdue invoice",
                        "type": "string",
                        "readOnly": true
                    },
                    "subscription_renewal_date": {
                        "title": "Subscription renewal date",
                        "type": "string",
                        "readOnly": true
                    },
                    "metered_pricing_opt_in_info": {
                        "title": "Metered pricing opt in info",
                        "type": "string",
                        "readOnly": true
                    },
                    "has_annual_task_limit": {
                        "title": "Has annual task limit",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_eligible_for_faster_polling_interval": {
                        "title": "Is eligible for faster polling interval",
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "AppAccessControl": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "account": {
                        "title": "Account",
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_app_private": {
                        "title": "Is app private",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_restricted": {
                        "title": "Is restricted",
                        "type": "string",
                        "readOnly": true
                    },
                    "human_readable": {
                        "title": "Human readable",
                        "type": "string",
                        "readOnly": true
                    },
                    "applies_to_all": {
                        "title": "Applies to all",
                        "description": "If the controlled app applies to all account members or not",
                        "type": "boolean"
                    },
                    "groups": {
                        "title": "Groups",
                        "type": "string",
                        "readOnly": true
                    },
                    "members": {
                        "title": "Members",
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "readOnly": true
                    },
                    "app_image": {
                        "title": "App image",
                        "type": "string",
                        "readOnly": true
                    },
                    "app_images": {
                        "title": "App images",
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "denied",
                            "allowed"
                        ],
                        "readOnly": true,
                        "default": "denied"
                    }
                }
            },
            "AppAccessControlMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "app_id": {
                        "title": "App id",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "AppAccessControlTeamMembership": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "app_id": {
                        "title": "App id",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "DomainVerificationRequest": {
                "required": [
                    "domain"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "code": {
                        "title": "Code",
                        "description": "Unique domain verification code.",
                        "type": "string",
                        "maxLength": 32,
                        "nullable": true
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "E",
                            "V",
                            "P"
                        ]
                    },
                    "domain": {
                        "title": "Domain",
                        "type": "string",
                        "minLength": 1
                    },
                    "expiry": {
                        "title": "Expiry",
                        "description": "Verification window expiry date.",
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "account": {
                        "title": "Account",
                        "description": "Account that initiated the domain verification attempt",
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain_name": {
                        "title": "Domain name",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Verification update timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "OrganizationDomain": {
                "required": [
                    "domain"
                ],
                "type": "object",
                "properties": {
                    "account": {
                        "title": "Account",
                        "description": "Account that administers this domain",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "domain": {
                        "title": "Domain",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "email_provider": {
                        "title": "Email provider",
                        "type": "boolean"
                    },
                    "enriched": {
                        "title": "Enriched",
                        "type": "boolean"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "title": "Organization",
                        "description": "Organization managing this domain",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "ownership_verified": {
                        "title": "Ownership verified",
                        "type": "boolean"
                    },
                    "verification_request": {
                        "$ref": "#/components/schemas/DomainVerificationRequest"
                    }
                }
            },
            "ExpertClientRelationship": {
                "required": [
                    "expert_email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "expert_email": {
                        "title": "Expert email",
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "state": {
                        "title": "State",
                        "type": "string",
                        "enum": [
                            "active",
                            "client_accepted",
                            "disabled",
                            "expert_initiated"
                        ]
                    },
                    "client_account_id": {
                        "title": "Client account id",
                        "type": "string",
                        "readOnly": true
                    },
                    "client_customuser_id": {
                        "title": "Client customuser id",
                        "type": "string",
                        "readOnly": true
                    },
                    "expert_customuser_id": {
                        "title": "Expert customuser id",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "AccountFeatureEnrollment": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "string",
                        "readOnly": true
                    },
                    "feature_name": {
                        "title": "Feature name",
                        "description": "Name of feature available to account",
                        "type": "string",
                        "enum": [
                            "AUTO_UPGRADE"
                        ],
                        "readOnly": true
                    },
                    "is_enrolled": {
                        "title": "Is enrolled",
                        "description": "Specifies whether the user has enrolled in this feature.",
                        "type": "boolean"
                    },
                    "upgrade_plan_id": {
                        "title": "Upgrade plan id",
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "FolderMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "readOnly": true
                    },
                    "photo_url": {
                        "title": "Photo url",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/person.png",
                        "minLength": 1
                    },
                    "full_name": {
                        "title": "Full name",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "FolderGroup": {
                "required": [
                    "group_id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "photo_url": {
                        "title": "Photo url",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/team.png",
                        "minLength": 1
                    },
                    "member_count": {
                        "title": "Member count",
                        "type": "integer",
                        "readOnly": true
                    },
                    "group_id": {
                        "title": "Group id",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "Folder": {
                "required": [
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_shared": {
                        "title": "Is shared",
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/FolderMember"
                    },
                    "groups": {
                        "$ref": "#/components/schemas/FolderGroup"
                    },
                    "members": {
                        "$ref": "#/components/schemas/FolderMember"
                    },
                    "parent_id": {
                        "title": "Parent id",
                        "type": "string",
                        "readOnly": true
                    },
                    "root_id": {
                        "title": "Root id",
                        "type": "string",
                        "readOnly": true
                    },
                    "zap_count": {
                        "title": "Zap count",
                        "type": "integer",
                        "readOnly": true
                    },
                    "counts": {
                        "title": "Counts",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "IdentityProvider": {
                "required": [
                    "certificate",
                    "account"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "mapping": {
                        "title": "Mapping",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "default": {}
                    },
                    "acs": {
                        "title": "Acs",
                        "type": "string",
                        "readOnly": true
                    },
                    "sp_slo_url": {
                        "title": "Sp slo url",
                        "type": "string",
                        "readOnly": true
                    },
                    "sp_sso_url": {
                        "title": "Sp sso url",
                        "type": "string",
                        "readOnly": true
                    },
                    "debug_sso_url": {
                        "title": "Debug sso url",
                        "type": "string",
                        "readOnly": true
                    },
                    "slo_certificate": {
                        "title": "Slo certificate",
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "The time the IDP was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "entity_id": {
                        "title": "Entity id",
                        "description": "The entity identifier of this identity provider.",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "sso_url": {
                        "title": "Sso url",
                        "description": "The SSO url for this identity provider",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "slo_url": {
                        "title": "Slo url",
                        "description": "The SLO (single logout) url for this identity provider",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "certificate": {
                        "title": "Certificate",
                        "description": "The X509 certificate for this identity provider. The certificate is used for signing requests and decrypting payloads between the identity provider and the service provider.",
                        "type": "string",
                        "minLength": 1
                    },
                    "identifier": {
                        "title": "Identifier",
                        "description": "Distinct ID for accessing the IDP",
                        "type": "string",
                        "format": "uuid"
                    },
                    "signed_slo": {
                        "title": "Signed slo",
                        "description": "Checked if the SLO needs to be signed",
                        "type": "boolean"
                    },
                    "slo_sig_alg": {
                        "title": "Slo sig alg",
                        "description": "The signature algorithm for signed SLO requests",
                        "type": "string",
                        "enum": [
                            "rsa_sha256",
                            "rsa_sha384",
                            "rsa_sha512"
                        ]
                    },
                    "enabled": {
                        "title": "Enabled",
                        "description": "Enable the provider for all users of organization.",
                        "type": "boolean"
                    },
                    "account": {
                        "title": "Account",
                        "type": "integer"
                    }
                }
            },
            "Campaign": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the campaign",
                        "type": "string",
                        "maxLength": 200,
                        "minLength": 1
                    },
                    "max_uses": {
                        "title": "Max uses",
                        "description": "DEPRECATED AND TO BE REMOVED. Use max_uses field in coupon_mapping",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "Unique identifier for a campaign. Auto-generated from campaign name on initial save. Does not update on campaign name change after initial save/creation.",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 100,
                        "nullable": true
                    }
                }
            },
            "CampaignPlan": {
                "required": [
                    "name",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "pattern": "^[^%]+$",
                        "maxLength": 100,
                        "minLength": 1
                    },
                    "display_short_name": {
                        "title": "Display short name",
                        "description": "A short name used in web and email. e.g. \"Company\"",
                        "type": "string",
                        "maxLength": 50
                    },
                    "interval": {
                        "title": "Interval",
                        "description": "Cannot edit.",
                        "type": "string",
                        "enum": [
                            "month",
                            "year"
                        ]
                    },
                    "amount": {
                        "title": "Amount",
                        "description": "Price in cents. Can be 0 for free. Cannot edit.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                    }
                },
                "nullable": true
            },
            "CampaignTrial": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Plan Type",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    }
                },
                "nullable": true
            },
            "CampaignPlanGroup": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    }
                },
                "nullable": true
            },
            "CampaignVariant": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of campaign variant",
                        "type": "string",
                        "maxLength": 200,
                        "minLength": 1
                    },
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "destination_plan": {
                        "$ref": "#/components/schemas/CampaignPlan"
                    },
                    "destination_trial": {
                        "$ref": "#/components/schemas/CampaignTrial"
                    },
                    "promotion_plan_group": {
                        "$ref": "#/components/schemas/CampaignPlanGroup"
                    },
                    "terms": {
                        "title": "Terms",
                        "description": "Campaign terms to be displayed to a user, if applicable. Currently only sent in notifier, needs to be setup in Iterable/email tool to be used in an offer email.",
                        "type": "string",
                        "nullable": true
                    },
                    "monthly_cost": {
                        "title": "Monthly cost",
                        "description": "Holds the monthly inferred cost for this offer variant (in cents). For example 500. This is emitted only in the notifier (for email use).",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                    },
                    "total_cost": {
                        "title": "Total cost",
                        "description": "Holds the total inferred cost for this offer variant (in cents). For example 1500. This is emitted only in the notifier (for email use).",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                    },
                    "is_control": {
                        "title": "Is control",
                        "description": "Used in experiments. When true, indicates that this variant is a control group.",
                        "type": "boolean"
                    }
                }
            },
            "CampaignOffer": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "string",
                        "readOnly": true
                    },
                    "variant": {
                        "$ref": "#/components/schemas/CampaignVariant"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Date and time of offer creation.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "accepted_at": {
                        "title": "Accepted at",
                        "description": "Date and time of offer acceptance.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expiry": {
                        "title": "Expiry",
                        "description": "Date and time of offer expiration. Defaults to now + Availability in days (in account's local time).",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "discount_mapping": {
                        "title": "Discount mapping",
                        "type": "object",
                        "readOnly": true,
                        "nullable": true
                    },
                    "target_plan_id": {
                        "title": "Target plan id",
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "Invitation": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "account": {
                        "title": "Account",
                        "type": "integer",
                        "readOnly": true
                    },
                    "code": {
                        "title": "Code",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email",
                        "maxLength": 254,
                        "minLength": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "title": "Created by",
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "title": "Role",
                        "type": "string",
                        "enum": [
                            "super_admin",
                            "admin",
                            "member"
                        ],
                        "default": "member"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "email_hash": {
                        "title": "Email hash",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_access_request": {
                        "title": "Is access request",
                        "description": "If the user requested access to join this account",
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "FullAccountMember": {
                "required": [
                    "full_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "title": "Full name",
                        "type": "string",
                        "minLength": 1
                    },
                    "photo_url": {
                        "title": "Photo url",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/person.png",
                        "minLength": 1
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "minLength": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Get user's code for id",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "role": {
                        "title": "Role",
                        "type": "string",
                        "readOnly": true,
                        "default": "member",
                        "minLength": 1
                    },
                    "email_hash": {
                        "title": "Email hash",
                        "type": "string",
                        "readOnly": true
                    },
                    "num_zaps": {
                        "title": "Num zaps",
                        "type": "string",
                        "readOnly": true
                    },
                    "num_tasks": {
                        "title": "Num tasks",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "SlimTeamRead": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the team",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "description": "Team description",
                        "type": "string",
                        "nullable": true
                    },
                    "logo": {
                        "title": "Logo",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/team.png",
                        "minLength": 1
                    },
                    "logo_choice": {
                        "title": "Logo choice",
                        "description": "Logo selection",
                        "type": "string",
                        "maxLength": 32,
                        "nullable": true
                    }
                }
            },
            "AccountProvision": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "account": {
                        "title": "Account",
                        "type": "integer",
                        "readOnly": true
                    },
                    "enabled": {
                        "title": "Enabled",
                        "type": "boolean"
                    },
                    "token": {
                        "title": "Token",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "schema": {
                        "title": "Schema",
                        "type": "string",
                        "readOnly": true
                    },
                    "scim_base_url": {
                        "title": "Scim base url",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Member": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "title": "Full name",
                        "type": "string",
                        "readOnly": true
                    },
                    "photo_url": {
                        "title": "Photo url",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/person.png",
                        "minLength": 1
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "OptimizedMember": {
                "required": [
                    "full_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "title": "Full name",
                        "type": "string",
                        "minLength": 1
                    },
                    "photo_url": {
                        "title": "Photo url",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/person.png",
                        "minLength": 1
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "TeamRead": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the team",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    },
                    "owner": {
                        "$ref": "#/components/schemas/Member"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Team description",
                        "type": "string",
                        "nullable": true
                    },
                    "logo": {
                        "title": "Logo",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/team.png",
                        "minLength": 1
                    },
                    "member_count": {
                        "title": "Member count",
                        "type": "string",
                        "readOnly": true
                    },
                    "member_preview": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OptimizedMember"
                        },
                        "readOnly": true
                    },
                    "logo_choice": {
                        "title": "Logo choice",
                        "description": "Logo selection",
                        "type": "string",
                        "maxLength": 32,
                        "nullable": true
                    }
                }
            },
            "TeamWrite": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "owner": {
                        "title": "Owner",
                        "description": "Creator of this team",
                        "type": "integer",
                        "nullable": true
                    },
                    "new_owner_id": {
                        "title": "New owner id",
                        "type": "integer"
                    },
                    "logo": {
                        "title": "Logo",
                        "description": "Team icon",
                        "type": "string",
                        "readOnly": true,
                        "format": "uri",
                        "nullable": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the team",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "description": "Team description",
                        "type": "string",
                        "nullable": true
                    },
                    "logo_choice": {
                        "title": "Logo choice",
                        "description": "Logo selection",
                        "type": "string",
                        "maxLength": 32,
                        "nullable": true
                    }
                }
            },
            "TeamMemberRead": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "customuser": {
                        "$ref": "#/components/schemas/Member"
                    },
                    "is_active": {
                        "title": "Is active",
                        "type": "boolean",
                        "default": true
                    }
                }
            },
            "TeamMemberWrite": {
                "required": [
                    "customuser"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "customuser": {
                        "title": "Customuser",
                        "type": "integer"
                    },
                    "is_active": {
                        "title": "Is active",
                        "type": "boolean",
                        "default": true
                    }
                }
            },
            "TeamRequest": {
                "required": [
                    "team"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "customuser": {
                        "$ref": "#/components/schemas/OptimizedMember"
                    },
                    "team": {
                        "title": "Team",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ]
                    }
                }
            },
            "TeamRequestWrite": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "customuser": {
                        "title": "Customuser",
                        "type": "integer",
                        "readOnly": true
                    },
                    "team": {
                        "title": "Team",
                        "type": "integer",
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "accepted",
                            "rejected"
                        ]
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "VirtualFolder": {
                "required": [
                    "id",
                    "name",
                    "account_id",
                    "zap_count",
                    "counts"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    },
                    "zap_count": {
                        "title": "Zap count",
                        "type": "integer"
                    },
                    "counts": {
                        "title": "Counts",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "AccountAppStatsResponse": {
                "required": [
                    "selected_api",
                    "auth_count",
                    "member_count",
                    "zap_count"
                ],
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "minLength": 1
                    },
                    "auth_count": {
                        "title": "Auth count",
                        "type": "integer"
                    },
                    "member_count": {
                        "title": "Member count",
                        "type": "integer"
                    },
                    "zap_count": {
                        "title": "Zap count",
                        "type": "integer"
                    }
                }
            },
            "Discount": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "coupon_name": {
                        "title": "Coupon name",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "coupon_type": {
                        "title": "Coupon type",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    }
                }
            },
            "AccountEntitlements": {
                "required": [
                    "limits"
                ],
                "type": "object",
                "properties": {
                    "plan_status": {
                        "title": "Plan status",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true
                    },
                    "limits": {
                        "title": "Limits",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "quotas": {
                        "title": "Quotas",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true
                    }
                }
            },
            "AccountPrivateAppsResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "images": {
                        "title": "Images",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true
                    },
                    "has_stale_auth": {
                        "title": "Has stale auth",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "banner": {
                        "title": "Banner",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    }
                }
            },
            "AccountAppsResponse": {
                "required": [
                    "id",
                    "slug",
                    "selected_api",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "minLength": 1
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "minLength": 1
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "minLength": 1
                    },
                    "images": {
                        "title": "Images",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true
                    },
                    "has_stale_auth": {
                        "title": "Has stale auth",
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "Plan": {
                "required": [
                    "name",
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "zap_length": {
                        "title": "Zap length",
                        "description": "Maximum steps in a zap - filters between nodes count as 1. -1 is unlimited.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "apps": {
                        "title": "Apps",
                        "description": "Number of apps at a time. -1 is unlimited.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "actions": {
                        "title": "Actions",
                        "description": "Number of writes per month. -1 is unlimited.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "min_seats": {
                        "title": "Minimum number of seats",
                        "description": "Minimum number of seats for per-seat pricing. For example, if \"amount\" is 1000 ($10) and \"min seats\" is 10, the minimum cost this plan would be 10000 ($100). Cannot edit.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "throttle_multiplier": {
                        "title": "Throttle multiplier",
                        "description": "How much extra headroom a plan gets.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "metered_task_pricing": {
                        "title": "Enable metered task pricing?",
                        "description": "Line items will be added to invoices based on how many tasks were used in the preceeding month, according to \"metered task pricing tiers\" (below). If enabled, you will probably want to set the \"actions\" limit to unlimited (-1). Cannot edit.",
                        "type": "boolean"
                    },
                    "per_seat_pricing": {
                        "title": "Enable per-seat pricing?",
                        "description": "Use per-seat pricing for this plan (see \"minimum number of seats\" also). Cannot edit.",
                        "type": "boolean"
                    },
                    "metered_pricing_tiers": {
                        "title": "Metered task pricing tiers",
                        "description": "Defines the pricing tiers for metered tasks, one per line: the max number of tasks in the tier, and the price per task in cents. Last tier must have a max of 'inf'. Cannot edit.",
                        "type": "string"
                    },
                    "polling_interval_minutes": {
                        "title": "Polling interval minutes",
                        "description": "How often we poll in minutes. 0 is never.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                    },
                    "authentications": {
                        "title": "Authentications",
                        "description": "Number of authentications at a time. -1 is unlimited.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "member_limit": {
                        "title": "Maximum number of members allowed",
                        "description": "Sets the upper limit on the number of team members that are allowed to belong to teams that are on this plan.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "current_default": {
                        "title": "Current default",
                        "description": "There can only be a single default per plan group. We will clear out any dupes.",
                        "type": "boolean"
                    },
                    "allow_premium_apps": {
                        "title": "Allow premium apps?",
                        "description": "Grant access to all premium apps, when enabled this overrides the \"allowed_premium_apps\" field below.",
                        "type": "boolean"
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "trial_period_days": {
                        "title": "Trial period days",
                        "description": "None is no trial. Cannot edit.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "zaps": {
                        "title": "Zaps",
                        "description": "Number of zaps at a time. -1 is unlimited.",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "pattern": "^[^%]+$",
                        "maxLength": 100,
                        "minLength": 1
                    },
                    "descriptive_name": {
                        "title": "Descriptive name",
                        "type": "string",
                        "readOnly": true
                    },
                    "short_name": {
                        "title": "Short name",
                        "type": "string",
                        "readOnly": true
                    },
                    "interval": {
                        "title": "Interval",
                        "description": "Cannot edit.",
                        "type": "string",
                        "enum": [
                            "month",
                            "year"
                        ]
                    },
                    "amount": {
                        "title": "Amount",
                        "description": "Price in cents. Can be 0 for free. Cannot edit.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                    },
                    "can_autoreplay_errored_tasks": {
                        "title": "Can autoreplay errored tasks",
                        "description": "Automatically rerun failed zaps (up to 5 times: ASAP, 30 minute delay, 1 hour delay, 3 hour delay, 6 hour delay). Enable to autoreplay tasks.",
                        "type": "boolean"
                    },
                    "allow_teams": {
                        "title": "Allow teams?",
                        "description": "Allow adding additional members to account.",
                        "type": "boolean"
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "has_annual_task_limit": {
                        "title": "Has annual task limit",
                        "description": "if true, this plan is an Annual Task Limit Plan",
                        "type": "boolean"
                    }
                }
            },
            "AccountPlanRecommendation": {
                "type": "object",
                "properties": {
                    "monthly_plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "yearly_plan": {
                        "$ref": "#/components/schemas/Plan"
                    }
                }
            },
            "ThinService": {
                "required": [
                    "name",
                    "popularity",
                    "service_url",
                    "slug"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "popularity": {
                        "title": "Popularity",
                        "type": "integer"
                    },
                    "service_url": {
                        "title": "Service url",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "You should **not** change this after it is public!",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1
                    },
                    "url": {
                        "title": "Url",
                        "description": "URL for this service.",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "zap_usage_count": {
                        "title": "Zap usage count",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "ThinGuidedRecipeService": {
                "required": [
                    "name",
                    "slug"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "key": {
                        "title": "Key",
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "You should **not** change this after it is public!",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1
                    }
                }
            },
            "ThinGuidedRecipe": {
                "required": [
                    "id",
                    "status",
                    "head_service",
                    "tail_service",
                    "steps",
                    "used"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 128,
                        "minLength": 1,
                        "nullable": true
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title-cased. Titles are important. Mix the use case in with the functionality. Ex. \"Get Notified of Important Emails in Slack\"",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "description_html": {
                        "title": "Description html",
                        "type": "string",
                        "readOnly": true
                    },
                    "head_service": {
                        "$ref": "#/components/schemas/ThinGuidedRecipeService"
                    },
                    "tail_service": {
                        "$ref": "#/components/schemas/ThinGuidedRecipeService"
                    },
                    "steps": {
                        "title": "Steps",
                        "type": "object"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "used": {
                        "title": "Used",
                        "type": "integer"
                    }
                }
            },
            "AccountModifySubscription": {
                "type": "object",
                "properties": {
                    "currency": {
                        "title": "Currency",
                        "type": "string",
                        "minLength": 1
                    },
                    "invoiced_at": {
                        "title": "Invoiced at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment_intent_id": {
                        "title": "Payment intent id",
                        "type": "string",
                        "minLength": 1
                    },
                    "plan_id": {
                        "title": "Plan id",
                        "type": "integer"
                    },
                    "addons": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "TaskUsageAggregate": {
                "type": "object",
                "properties": {
                    "filtered": {
                        "title": "Filtered",
                        "type": "integer"
                    },
                    "success": {
                        "title": "Success",
                        "type": "integer"
                    },
                    "throttled": {
                        "title": "Throttled",
                        "type": "integer"
                    },
                    "error": {
                        "title": "Error",
                        "type": "integer"
                    },
                    "scheduled": {
                        "title": "Scheduled",
                        "type": "integer"
                    },
                    "pending": {
                        "title": "Pending",
                        "type": "integer"
                    }
                }
            },
            "TaskUsageResponse": {
                "required": [
                    "total_tasks_count",
                    "interval",
                    "status_aggregation",
                    "tasks_breakdown"
                ],
                "type": "object",
                "properties": {
                    "total_tasks_count": {
                        "title": "Total tasks count",
                        "type": "integer"
                    },
                    "interval": {
                        "title": "Interval",
                        "type": "string",
                        "enum": [
                            "daily",
                            "monthly"
                        ]
                    },
                    "status_aggregation": {
                        "$ref": "#/components/schemas/TaskUsageAggregate"
                    },
                    "tasks_breakdown": {
                        "title": "Tasks breakdown",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TaskUsageAggregate"
                        }
                    }
                }
            },
            "AccountTopUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "readOnly": true
                    },
                    "full_name": {
                        "title": "Full name",
                        "type": "string",
                        "readOnly": true
                    },
                    "hours_saved": {
                        "title": "Hours saved",
                        "type": "string",
                        "readOnly": true
                    },
                    "live_zaps": {
                        "title": "Live zaps",
                        "type": "string",
                        "readOnly": true
                    },
                    "paused_zaps": {
                        "title": "Paused zaps",
                        "type": "string",
                        "readOnly": true
                    },
                    "photo_url": {
                        "title": "Photo url",
                        "type": "string",
                        "readOnly": true,
                        "default": "/static/img/person.png",
                        "minLength": 1
                    }
                }
            },
            "TopZapsTasks": {
                "type": "object",
                "properties": {
                    "billable": {
                        "title": "Billable",
                        "type": "integer"
                    },
                    "delayed": {
                        "title": "Delayed",
                        "type": "integer"
                    },
                    "error": {
                        "title": "Error",
                        "type": "integer"
                    },
                    "filtered": {
                        "title": "Filtered",
                        "type": "integer"
                    },
                    "halted": {
                        "title": "Halted",
                        "type": "integer"
                    },
                    "pending": {
                        "title": "Pending",
                        "type": "integer"
                    },
                    "scheduled": {
                        "title": "Scheduled",
                        "type": "integer"
                    },
                    "skipped": {
                        "title": "Skipped",
                        "type": "integer"
                    },
                    "success": {
                        "title": "Success",
                        "type": "integer"
                    },
                    "throttled": {
                        "title": "Throttled",
                        "type": "integer"
                    }
                }
            },
            "TopZapsZaps": {
                "required": [
                    "id",
                    "tasks",
                    "last_run"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/TopZapsTasks"
                    },
                    "last_run": {
                        "title": "Last run",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TopZaps": {
                "required": [
                    "count",
                    "objects"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopZapsZaps"
                        }
                    }
                }
            },
            "AccountTrialReport": {
                "type": "object",
                "properties": {
                    "tasks_used": {
                        "title": "Tasks used",
                        "type": "integer",
                        "readOnly": true
                    },
                    "minutes_saved": {
                        "title": "Minutes saved",
                        "type": "integer",
                        "readOnly": true
                    },
                    "estimated_monthly_tasks": {
                        "title": "Estimated monthly tasks",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "AccountUsageLimit": {
                "required": [
                    "action_limit",
                    "zap_limit"
                ],
                "type": "object",
                "properties": {
                    "action_limit": {
                        "title": "Action limit",
                        "type": "integer"
                    },
                    "zap_limit": {
                        "title": "Zap limit",
                        "type": "integer"
                    }
                }
            },
            "AccountUsageZapMetrics": {
                "required": [
                    "total_tasks",
                    "hours_saved",
                    "zap_on_count",
                    "zap_off_count",
                    "zap_draft_count",
                    "zap_total_count"
                ],
                "type": "object",
                "properties": {
                    "total_tasks": {
                        "title": "Total tasks",
                        "type": "integer"
                    },
                    "hours_saved": {
                        "title": "Hours saved",
                        "type": "integer"
                    },
                    "zap_on_count": {
                        "title": "Zap on count",
                        "type": "integer"
                    },
                    "zap_off_count": {
                        "title": "Zap off count",
                        "type": "integer"
                    },
                    "zap_draft_count": {
                        "title": "Zap draft count",
                        "type": "integer"
                    },
                    "zap_total_count": {
                        "title": "Zap total count",
                        "type": "integer"
                    }
                }
            },
            "AccountUsage": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "limit": {
                        "$ref": "#/components/schemas/AccountUsageLimit"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 200
                    },
                    "period_start": {
                        "title": "Period start",
                        "type": "string",
                        "readOnly": true
                    },
                    "period_end": {
                        "title": "Period end",
                        "type": "string",
                        "readOnly": true
                    },
                    "period_reset": {
                        "title": "Period reset",
                        "type": "string",
                        "readOnly": true
                    },
                    "zap_metrics": {
                        "$ref": "#/components/schemas/AccountUsageZapMetrics"
                    }
                }
            },
            "ActionControlsBase": {
                "description": "Updates to the action's permissions at the account level",
                "required": [
                    "can_use"
                ],
                "type": "object",
                "properties": {
                    "can_use": {
                        "title": "Can use",
                        "description": "Whether the action can be used.",
                        "type": "boolean"
                    }
                }
            },
            "TeamControlsBase": {
                "description": "Updates to the action's permissions at the team level",
                "required": [
                    "can_use",
                    "team_id"
                ],
                "type": "object",
                "properties": {
                    "can_use": {
                        "title": "Can use",
                        "description": "Whether the action can be used.",
                        "type": "boolean"
                    },
                    "team_id": {
                        "title": "Team id",
                        "description": "The ID of the team to be controlled.",
                        "type": "integer"
                    }
                }
            },
            "CustomuserControlsBase": {
                "description": "Updates to the action's permissions at the customuser level",
                "required": [
                    "can_use",
                    "customuser_id"
                ],
                "type": "object",
                "properties": {
                    "can_use": {
                        "title": "Can use",
                        "description": "Whether the action can be used.",
                        "type": "boolean"
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "description": "The ID of the customuser to be controlled.",
                        "type": "integer"
                    }
                }
            },
            "ActionControlsAction": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "The ID of the action to be controlled.",
                        "type": "string",
                        "minLength": 1
                    },
                    "account_controls": {
                        "$ref": "#/components/schemas/ActionControlsBase"
                    },
                    "team_controls": {
                        "$ref": "#/components/schemas/TeamControlsBase"
                    },
                    "customuser_controls": {
                        "$ref": "#/components/schemas/CustomuserControlsBase"
                    }
                }
            },
            "ActionControlsRequest": {
                "required": [
                    "actions"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "description": "A list of updates to action controls.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActionControlsAction"
                        }
                    }
                }
            },
            "ActionControlsResponse": {
                "required": [
                    "updated_action_count"
                ],
                "type": "object",
                "properties": {
                    "updated_action_count": {
                        "title": "Updated action count",
                        "description": "The number of actions that were successfully updated.",
                        "type": "integer"
                    }
                }
            },
            "ErrorSource": {
                "description": "An object containing references to the primary source of the error.",
                "type": "object",
                "properties": {
                    "pointer": {
                        "title": "Pointer",
                        "description": "Pointer to the value in the request document that caused the error e.g. `/actions`.",
                        "type": "string",
                        "minLength": 1
                    },
                    "parameter": {
                        "title": "Parameter",
                        "description": "A string indicating which URI query parameter caused the error.",
                        "type": "string",
                        "minLength": 1
                    },
                    "header": {
                        "title": "Header",
                        "description": "A string indicating the name of a single request header which caused the error.",
                        "type": "string",
                        "minLength": 1
                    }
                },
                "nullable": true
            },
            "ActionError": {
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "description": "The HTTP status code applicable to this problem.",
                        "type": "integer"
                    },
                    "code": {
                        "title": "Code",
                        "description": "A unique identifier for this particular occurrence of the problem.",
                        "type": "string",
                        "minLength": 1
                    },
                    "error_title": {
                        "title": "Error title",
                        "description": "A short summary of the problem.",
                        "type": "string",
                        "minLength": 1
                    },
                    "detail": {
                        "title": "Detail",
                        "description": "A human-readable explanation specific to this occurrence of the problem.",
                        "type": "string",
                        "minLength": 1
                    },
                    "source": {
                        "$ref": "#/components/schemas/ErrorSource"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true
                    }
                }
            },
            "ActionErrorResponse": {
                "required": [
                    "errors"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "An array of error objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActionError"
                        }
                    }
                }
            },
            "ActionBaseResponse": {
                "required": [
                    "detail"
                ],
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "ImplementationMeta": {
                "type": "object",
                "properties": {}
            },
            "service_category": {
                "required": [
                    "title",
                    "slug"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 50,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "description": "Markdown enabled.",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "type_of": {
                        "title": "Type of",
                        "description": "The type of the category. Curated categories are maintained by humans at Zapier, automatically generated are maintained by robots and populated in the management command rebuild_special_categories, and other are categories created manually for other purposes. If you want the category to show up on an apps individual profile page set this to curated, otherwise other is a good choice. ",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1
                    },
                    "featured_entry_slug": {
                        "title": "Featured entry slug",
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "title": "Role",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "App": {
                "required": [
                    "app_profile_url",
                    "current_implementation_id",
                    "description",
                    "external_url",
                    "internal_id",
                    "learn_more_url",
                    "name",
                    "popularity",
                    "primary_color",
                    "slug"
                ],
                "type": "object",
                "properties": {
                    "age_in_days": {
                        "title": "Age in days",
                        "type": "string",
                        "readOnly": true
                    },
                    "api_docs_url": {
                        "title": "Api docs url",
                        "description": "URL for the API's documentation.",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "app_profile_url": {
                        "title": "App profile url",
                        "type": "string",
                        "minLength": 1
                    },
                    "banner": {
                        "title": "Banner",
                        "type": "string",
                        "readOnly": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/service_category"
                        },
                        "readOnly": true
                    },
                    "canonical_id": {
                        "title": "Canonical id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "current_implementation_id": {
                        "title": "Current implementation id",
                        "type": "string",
                        "minLength": 1
                    },
                    "days_since_last_update": {
                        "title": "Days since last update",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "Markdown enabled.",
                        "type": "string",
                        "minLength": 1
                    },
                    "external_url": {
                        "title": "External url",
                        "type": "string",
                        "minLength": 1
                    },
                    "hashtag": {
                        "title": "Hashtag",
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    },
                    "images": {
                        "title": "Images",
                        "type": "string",
                        "readOnly": true
                    },
                    "integration_overview_html": {
                        "title": "Integration overview html",
                        "description": "Integration overview rendered as HTML.",
                        "type": "string",
                        "nullable": true
                    },
                    "internal_id": {
                        "title": "Internal id",
                        "type": "string",
                        "minLength": 1
                    },
                    "invite_url": {
                        "title": "Invite url",
                        "description": "Signifies a pre-launch, \"upcoming\" invite only dev app page.",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "is_beta": {
                        "title": "Is beta",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_built_in": {
                        "title": "Is built in",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_featured": {
                        "title": "Is featured",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_premium": {
                        "title": "Premium",
                        "description": "Premium services are only available to paid customers.",
                        "type": "boolean"
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_upcoming": {
                        "title": "Is upcoming",
                        "type": "string",
                        "readOnly": true
                    },
                    "learn_more_url": {
                        "title": "Learn more url",
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "popularity": {
                        "title": "Popularity",
                        "type": "integer"
                    },
                    "primary_color": {
                        "title": "Primary color",
                        "type": "string",
                        "minLength": 1
                    },
                    "request_count": {
                        "title": "Request count",
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "You should **not** change this after it is public!",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1
                    },
                    "zap_usage_count": {
                        "title": "Zap usage count",
                        "description": "Steps + auths count that determines popularity/ordering.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0,
                        "nullable": true
                    }
                }
            },
            "PaginatedAppList": {
                "required": [
                    "prev",
                    "next",
                    "count",
                    "results"
                ],
                "type": "object",
                "properties": {
                    "prev": {
                        "title": "Prev",
                        "description": "The previous page of App results",
                        "type": "string",
                        "minLength": 1
                    },
                    "next": {
                        "title": "Next",
                        "description": "The next page of App results",
                        "type": "string",
                        "minLength": 1
                    },
                    "count": {
                        "title": "Count",
                        "description": "The total number of App results",
                        "type": "integer"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App"
                        }
                    }
                }
            },
            "GuidedRecipeService": {
                "required": [
                    "current_implementation_id",
                    "name",
                    "slug",
                    "app_url",
                    "learn_more_url",
                    "description",
                    "primary_color",
                    "popularity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "canonical_id": {
                        "title": "Canonical id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "current_implementation_id": {
                        "title": "Current implementation id",
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "You should **not** change this after it is public!",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "service_url": {
                        "title": "Service url",
                        "type": "string",
                        "readOnly": true
                    },
                    "app_url": {
                        "title": "App url",
                        "type": "string",
                        "minLength": 1
                    },
                    "learn_more_url": {
                        "title": "Learn more url",
                        "type": "string",
                        "minLength": 1
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/service_category"
                        },
                        "readOnly": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    },
                    "images": {
                        "title": "Images",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "Markdown enabled.",
                        "type": "string",
                        "minLength": 1
                    },
                    "banner": {
                        "title": "Banner",
                        "type": "string",
                        "readOnly": true
                    },
                    "age_in_days": {
                        "title": "Age in days",
                        "type": "string",
                        "readOnly": true
                    },
                    "days_since_last_update": {
                        "title": "Days since last update",
                        "type": "string",
                        "readOnly": true
                    },
                    "primary_color": {
                        "title": "Primary color",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_premium": {
                        "title": "Premium",
                        "description": "Premium services are only available to paid customers.",
                        "type": "boolean"
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_built_in": {
                        "title": "Is built in",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_beta": {
                        "title": "Is beta",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_featured": {
                        "title": "Is featured",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_upcoming": {
                        "title": "Is upcoming",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_requested": {
                        "title": "Is requested",
                        "type": "string",
                        "readOnly": true
                    },
                    "popularity": {
                        "title": "Popularity",
                        "type": "integer"
                    },
                    "zap_usage_count": {
                        "title": "Zap usage count",
                        "description": "Steps + auths count that determines popularity/ordering.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0,
                        "nullable": true
                    },
                    "integration_overview_html": {
                        "title": "Integration overview html",
                        "description": "Integration overview rendered as HTML.",
                        "type": "string",
                        "nullable": true
                    },
                    "hashtag": {
                        "title": "Hashtag",
                        "type": "string",
                        "readOnly": true
                    },
                    "filters": {
                        "title": "Filters",
                        "type": "string",
                        "readOnly": true
                    },
                    "reads": {
                        "title": "Reads",
                        "type": "string",
                        "readOnly": true
                    },
                    "writes": {
                        "title": "Writes",
                        "type": "string",
                        "readOnly": true
                    },
                    "searches": {
                        "title": "Searches",
                        "type": "string",
                        "readOnly": true
                    },
                    "searches_or_writes": {
                        "title": "Searches or writes",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "GuidedRecipe": {
                "required": [
                    "id",
                    "guided_recipe_url",
                    "min_url",
                    "webintent_url",
                    "description",
                    "description_html",
                    "status",
                    "head_service",
                    "tail_service",
                    "steps",
                    "services",
                    "matched_services",
                    "awesomeness",
                    "activation",
                    "used",
                    "template_root_node_id",
                    "link_hash",
                    "labels"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "minLength": 1
                    },
                    "canonical_id": {
                        "title": "Canonical id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "guided_recipe_url": {
                        "title": "Guided recipe url",
                        "type": "string",
                        "minLength": 1
                    },
                    "min_url": {
                        "title": "Min url",
                        "type": "string",
                        "minLength": 1
                    },
                    "webintent_url": {
                        "title": "Webintent url",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 128,
                        "minLength": 1,
                        "nullable": true
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title-cased. Titles are important. Mix the use case in with the functionality. Ex. \"Get Notified of Important Emails in Slack\"",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "minLength": 1
                    },
                    "description_html": {
                        "title": "Description html",
                        "type": "string",
                        "minLength": 1
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "head_service": {
                        "$ref": "#/components/schemas/GuidedRecipeService"
                    },
                    "tail_service": {
                        "$ref": "#/components/schemas/GuidedRecipeService"
                    },
                    "steps": {
                        "title": "Steps",
                        "type": "object"
                    },
                    "rank": {
                        "title": "Rank",
                        "type": "string",
                        "readOnly": true
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuidedRecipeService"
                        }
                    },
                    "matched_services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuidedRecipeService"
                        }
                    },
                    "awesomeness": {
                        "title": "Awesomeness",
                        "type": "number"
                    },
                    "activation": {
                        "title": "Activation",
                        "type": "number"
                    },
                    "used": {
                        "title": "Used",
                        "type": "integer"
                    },
                    "template_root_node_id": {
                        "title": "Template root node id",
                        "type": "integer"
                    },
                    "link_hash": {
                        "title": "Link hash",
                        "type": "string",
                        "minLength": 1
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "DiscoverZapTemplates": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "If persona, use plural. Use the triple store below to provide singular name.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "excerpt": {
                        "title": "Excerpt",
                        "description": "Zarkdown and Django template enabled. [Insecure! Trusted admins only.]",
                        "type": "string",
                        "nullable": true
                    },
                    "body": {
                        "title": "Body",
                        "description": "Zarkdown and Django template enabled. [Insecure! Trusted admins only.]",
                        "type": "string",
                        "nullable": true
                    },
                    "zap_templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuidedRecipe"
                        },
                        "readOnly": true
                    }
                }
            },
            "Authentication": {
                "required": [
                    "account_id",
                    "is_invite_only",
                    "is_private",
                    "selected_api",
                    "shared_with_all"
                ],
                "type": "object",
                "properties": {
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "groups": {
                        "title": "Groups",
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "type": "integer"
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_invite_only": {
                        "title": "Is invite only",
                        "type": "boolean"
                    },
                    "is_private": {
                        "title": "Is private",
                        "type": "boolean"
                    },
                    "is_stale": {
                        "title": "Is stale",
                        "type": "string",
                        "readOnly": true
                    },
                    "label": {
                        "title": "Label",
                        "description": "An app-provided aid to identify which account was connected here.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "marked_stale_at": {
                        "title": "Marked stale at",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "members": {
                        "title": "Members",
                        "type": "string",
                        "readOnly": true
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    },
                    "shared_with_all": {
                        "title": "Shared with all",
                        "type": "boolean"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Useful if you have multiple accounts with the same service.",
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "destination_selected_api": {
                        "title": "Destination selected api",
                        "description": "A special selected_api reference that helps us adhere to data flow restrictions (Gmail only now). You can read more at https://zapier.quip.com/ZKNWAR5wcA3z.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "is_shared": {
                        "title": "Is shared",
                        "type": "string",
                        "readOnly": true
                    },
                    "identifier": {
                        "title": "Identifier",
                        "description": "Similar to label but reserved for \"trusted\" and consistent reverse identities for an authentication. Think user_id or unique_email or username or something. Initially used for secondary auths",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "permissions": {
                        "title": "Permissions",
                        "description": "\nExplicitly signal what actions the requesting user can take\nwith the authentication returned (and thus what the front end\nmight show in the UI).\n",
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "readOnly": true
                    }
                }
            },
            "AuthCustomUserCountRequest": {
                "required": [
                    "customuser_ids"
                ],
                "type": "object",
                "properties": {
                    "customuser_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "AuthCustomUserCountResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                }
            },
            "AuthZapCountResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "zap_count": {
                        "title": "Zap count",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "SharedAuthenticationMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "TeamAuthenticationMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "AuthCallRequest": {
                "required": [
                    "type_of",
                    "action"
                ],
                "type": "object",
                "properties": {
                    "type_of": {
                        "title": "Type of",
                        "type": "string",
                        "enum": [
                            "read",
                            "search",
                            "write"
                        ]
                    },
                    "action": {
                        "title": "Action",
                        "type": "string",
                        "maxLength": 200,
                        "minLength": 1
                    },
                    "params": {
                        "title": "Params",
                        "type": "object"
                    }
                }
            },
            "AuthCallResponse": {
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            },
            "Author": {
                "required": [
                    "name",
                    "biography"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "readOnly": true
                    },
                    "biography": {
                        "title": "Biography",
                        "type": "string",
                        "minLength": 1
                    },
                    "twitter_username": {
                        "title": "Twitter username",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "BlogCategoryField": {
                "required": [
                    "title",
                    "slug",
                    "body"
                ],
                "type": "object",
                "properties": {
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "body": {
                        "title": "Body",
                        "description": "Plain text-only. Used for the blog index meta description and h2.",
                        "type": "string",
                        "minLength": 1
                    },
                    "html": {
                        "title": "Html",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Service": {
                "required": [
                    "current_implementation_id",
                    "name",
                    "slug",
                    "app_url",
                    "learn_more_url",
                    "description",
                    "primary_color",
                    "popularity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "canonical_id": {
                        "title": "Canonical id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "current_implementation_id": {
                        "title": "Current implementation id",
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "You should **not** change this after it is public!",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "service_url": {
                        "title": "Service url",
                        "type": "string",
                        "readOnly": true
                    },
                    "app_url": {
                        "title": "App url",
                        "type": "string",
                        "minLength": 1
                    },
                    "learn_more_url": {
                        "title": "Learn more url",
                        "type": "string",
                        "minLength": 1
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/service_category"
                        },
                        "readOnly": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    },
                    "images": {
                        "title": "Images",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "Markdown enabled.",
                        "type": "string",
                        "minLength": 1
                    },
                    "banner": {
                        "title": "Banner",
                        "type": "string",
                        "readOnly": true
                    },
                    "age_in_days": {
                        "title": "Age in days",
                        "type": "string",
                        "readOnly": true
                    },
                    "days_since_last_update": {
                        "title": "Days since last update",
                        "type": "string",
                        "readOnly": true
                    },
                    "primary_color": {
                        "title": "Primary color",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_premium": {
                        "title": "Premium",
                        "description": "Premium services are only available to paid customers.",
                        "type": "boolean"
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_built_in": {
                        "title": "Is built in",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_beta": {
                        "title": "Is beta",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_featured": {
                        "title": "Is featured",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_upcoming": {
                        "title": "Is upcoming",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_requested": {
                        "title": "Is requested",
                        "type": "string",
                        "readOnly": true
                    },
                    "popularity": {
                        "title": "Popularity",
                        "type": "integer"
                    },
                    "zap_usage_count": {
                        "title": "Zap usage count",
                        "description": "Steps + auths count that determines popularity/ordering.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0,
                        "nullable": true
                    },
                    "integration_overview_html": {
                        "title": "Integration overview html",
                        "description": "Integration overview rendered as HTML.",
                        "type": "string",
                        "nullable": true
                    },
                    "hashtag": {
                        "title": "Hashtag",
                        "type": "string",
                        "readOnly": true
                    },
                    "filters": {
                        "title": "Filters",
                        "type": "string",
                        "readOnly": true
                    },
                    "reads": {
                        "title": "Reads",
                        "type": "string",
                        "readOnly": true
                    },
                    "writes": {
                        "title": "Writes",
                        "type": "string",
                        "readOnly": true
                    },
                    "searches": {
                        "title": "Searches",
                        "type": "string",
                        "readOnly": true
                    },
                    "searches_or_writes": {
                        "title": "Searches or writes",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "BlogPost": {
                "required": [
                    "author",
                    "sharing_tags",
                    "published_date",
                    "last_changed_date",
                    "title",
                    "slug",
                    "image",
                    "html",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "author": {
                        "$ref": "#/components/schemas/Author"
                    },
                    "canonical_category": {
                        "$ref": "#/components/schemas/BlogCategoryField"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlogCategoryField"
                        },
                        "readOnly": true
                    },
                    "sharing_tags": {
                        "title": "Sharing tags",
                        "type": "string",
                        "minLength": 1
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "published_date": {
                        "title": "Published date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_changed_date": {
                        "title": "Last changed date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "title": {
                        "title": "Title",
                        "description": "On-page title with H1 Heading",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "minLength": 1
                    },
                    "seo_title": {
                        "title": "Seo title",
                        "description": "Title displayed on SERP and browser window. Recommended length: 50-60 characters.",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "seo_description": {
                        "title": "Seo description",
                        "description": "Short description displayed on SERP. Recommended length: 150-160 characters.",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "post_url": {
                        "title": "Post url",
                        "type": "string",
                        "readOnly": true
                    },
                    "html": {
                        "title": "Html",
                        "type": "string",
                        "minLength": 1
                    },
                    "excerpt_html": {
                        "title": "Excerpt html",
                        "type": "string",
                        "readOnly": true
                    },
                    "excerpt_text": {
                        "title": "Excerpt text",
                        "type": "string",
                        "readOnly": true
                    },
                    "images": {
                        "title": "Images",
                        "type": "string",
                        "readOnly": true
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        },
                        "readOnly": true
                    },
                    "subtitle": {
                        "title": "Subtitle",
                        "description": "If you use a subtitle, keep the title short or the design will break!",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "read_time_minutes": {
                        "title": "Read time minutes",
                        "type": "string",
                        "readOnly": true
                    },
                    "primary_service": {
                        "$ref": "#/components/schemas/Service"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "structured_data": {
                        "title": "Structured data",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Blog": {
                "required": [
                    "title",
                    "slug",
                    "description",
                    "absolute_url"
                ],
                "type": "object",
                "properties": {
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "This will be the URL for the blog. Ex.: `engineering` will be accessible at zapier.com/engineering/",
                        "type": "string",
                        "enum": [
                            "blog",
                            "engineering",
                            "jobs",
                            "case-studies"
                        ]
                    },
                    "description": {
                        "title": "Description",
                        "description": "Plain text-only. Used for the blog index meta description, h2, and RSS feeds.",
                        "type": "string",
                        "minLength": 1
                    },
                    "description_html": {
                        "title": "Description html",
                        "type": "string",
                        "readOnly": true
                    },
                    "absolute_url": {
                        "title": "Absolute url",
                        "type": "string",
                        "minLength": 1
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                }
            },
            "DataFlowCheckResponse": {
                "type": "object",
                "properties": {
                    "violations": {
                        "description": "Contains the list of dataflow violations if the dataflow is restricted, empty otherwise",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "error": {
                        "title": "Error",
                        "description": "Errors occuring during validation",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "OutageService": {
                "description": "Information about the service that was having problems",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "The id of the affected service",
                        "type": "integer"
                    },
                    "key": {
                        "title": "Key",
                        "description": "The selected_api of the affected service",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "The slug of the affected service",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "description": "The human-friendly title of the affected service",
                        "type": "string"
                    },
                    "is_healthy": {
                        "title": "Is healthy",
                        "description": "Is the service currently healthy or not?",
                        "type": "boolean"
                    },
                    "status": {
                        "title": "Status",
                        "description": "The current status of the service",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "Outage": {
                "description": "Information about an outage with the selected_api that might have been related to the error",
                "required": [
                    "name",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "The id of the outage",
                        "type": "integer"
                    },
                    "statuspageio_id": {
                        "title": "Statuspageio id",
                        "description": "The id of the outage in statuspage.io",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "The name of the outage",
                        "type": "string",
                        "minLength": 1
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the outage",
                        "type": "string",
                        "minLength": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When the outage was declared",
                        "type": "string",
                        "minLength": 1
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When the outage was most recently updated",
                        "type": "string",
                        "minLength": 1
                    },
                    "message": {
                        "title": "Message",
                        "description": "A message about the current state of the outage",
                        "type": "string",
                        "minLength": 1
                    },
                    "service": {
                        "$ref": "#/components/schemas/OutageService"
                    }
                },
                "nullable": true
            },
            "AlertEmailError": {
                "required": [
                    "count",
                    "error_text"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "title": "Count",
                        "description": "The number of times the error has occurred",
                        "type": "integer"
                    },
                    "error_text": {
                        "title": "Error text",
                        "description": "Text summarizing the error to be included in the body of the email",
                        "type": "string",
                        "minLength": 1
                    },
                    "error_type": {
                        "title": "Error type",
                        "type": "string",
                        "enum": [
                            "action",
                            "trigger"
                        ],
                        "default": "action"
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "description": "The selected api of the error step",
                        "type": "string",
                        "nullable": true
                    },
                    "outage": {
                        "$ref": "#/components/schemas/Outage"
                    }
                }
            },
            "TriggerAlertEmailBody": {
                "required": [
                    "errors",
                    "zap_id"
                ],
                "type": "object",
                "properties": {
                    "content_tag": {
                        "title": "Content tag",
                        "description": "If provided this will be used as the value for a UTM tag specific to the content of the email",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "errors": {
                        "description": "Errors to be included in the email body",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlertEmailError"
                        }
                    },
                    "zap_id": {
                        "title": "Zap id",
                        "description": "ID of the Zap that has experienced an error",
                        "type": "string",
                        "minLength": 1
                    },
                    "zap_run_id": {
                        "title": "Zap run id",
                        "description": "ID of the Zap run associated with the error(s)",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                }
            },
            "TriggerAlertEmailResponse": {
                "type": "object",
                "properties": {}
            },
            "ErrorNotificationsErrorDetails": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "title": "Field",
                        "type": "string",
                        "minLength": 1
                    },
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "minLength": 1
                    },
                    "details": {
                        "title": "Details",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "ErrorNotificationsError": {
                "required": [
                    "status",
                    "_type",
                    "_errors"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "integer"
                    },
                    "_type": {
                        "title": "type",
                        "type": "string",
                        "minLength": 1
                    },
                    "_errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorNotificationsErrorDetails"
                        }
                    }
                }
            },
            "ZapVisibilityCheckResponse": {
                "required": [
                    "account_id",
                    "customuser_id",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "account_id": {
                        "title": "Account id",
                        "description": "The account_id the Zap belongs to",
                        "type": "integer"
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "description": "The customuser the Zap is owned by",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "description": "The id of the Zap",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "FollowedApp": {
                "required": [
                    "service_slug",
                    "service_public",
                    "service_selected_api"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_id": {
                        "title": "Service id",
                        "type": "string",
                        "readOnly": true
                    },
                    "service_slug": {
                        "title": "Service slug",
                        "type": "string",
                        "minLength": 1
                    },
                    "service_public": {
                        "title": "Service public",
                        "type": "boolean"
                    },
                    "service_selected_api": {
                        "title": "Service selected api",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_active": {
                        "title": "Is active",
                        "description": "Does the user want to receive updates about this service?",
                        "type": "boolean"
                    },
                    "sources": {
                        "title": "Sources",
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Generic": {
                "required": [
                    "type",
                    "id",
                    "category_id",
                    "created_at",
                    "last_updated",
                    "published",
                    "title",
                    "slug",
                    "canonical_path",
                    "description",
                    "body_ast",
                    "_links"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "category_id": {
                        "title": "Category id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_updated": {
                        "title": "Last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "published": {
                        "title": "Published",
                        "type": "boolean"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "minLength": 1
                    },
                    "canonical_path": {
                        "title": "Canonical path",
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "minLength": 1
                    },
                    "body_ast": {
                        "title": "Body ast",
                        "type": "string"
                    },
                    "_links": {
                        "title": "links",
                        "type": "string"
                    }
                }
            },
            "Step": {
                "required": [
                    "body_ast",
                    "_links"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "body_ast": {
                        "title": "Body ast",
                        "type": "string"
                    },
                    "show_number": {
                        "title": "Show number",
                        "description": "Display a number next to this step in the list of steps",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "_links": {
                        "title": "links",
                        "type": "string"
                    }
                }
            },
            "Tutorial": {
                "required": [
                    "type",
                    "introduction_ast",
                    "steps",
                    "conclusion_ast",
                    "_links"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "category_id": {
                        "title": "Category id",
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_updated": {
                        "title": "Last updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "canonical_path": {
                        "title": "Canonical path",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description for SEO and helpdocs search results.",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "introduction_ast": {
                        "title": "Introduction ast",
                        "type": "string"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Step"
                        }
                    },
                    "conclusion_ast": {
                        "title": "Conclusion ast",
                        "type": "string"
                    },
                    "published": {
                        "title": "Published",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "_links": {
                        "title": "links",
                        "type": "string"
                    }
                }
            },
            "Video": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "subtitle": {
                        "title": "Subtitle",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "length": {
                        "title": "Length",
                        "description": "Video length in seconds.",
                        "type": "integer",
                        "readOnly": true
                    },
                    "series": {
                        "title": "Series",
                        "type": "string",
                        "enum": [
                            "Zapier University"
                        ],
                        "readOnly": true
                    }
                }
            },
            "help_category": {
                "required": [
                    "video"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "canonical_path": {
                        "title": "Canonical path",
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "video": {
                        "$ref": "#/components/schemas/Video"
                    },
                    "parent_id": {
                        "title": "Parent id",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "FAQ": {
                "required": [
                    "type",
                    "answer_ast",
                    "_links"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "category_id": {
                        "title": "Category id",
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_updated": {
                        "title": "Last updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "question": {
                        "title": "Question",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "canonical_path": {
                        "title": "Canonical path",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description for SEO and helpdocs search results.",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "answer_ast": {
                        "title": "Answer ast",
                        "type": "string"
                    },
                    "published": {
                        "title": "Published",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "_links": {
                        "title": "links",
                        "type": "string"
                    }
                }
            },
            "Feedback": {
                "required": [
                    "helpcontent"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "rating": {
                        "title": "Rating",
                        "type": "integer",
                        "enum": [
                            1,
                            -1,
                            0
                        ]
                    },
                    "negative_reason": {
                        "title": "Negative reason",
                        "type": "string",
                        "enum": [
                            "difficult_to_understand",
                            "does_not_match_seen",
                            "does_not_solve_problem",
                            "other"
                        ],
                        "nullable": true
                    },
                    "created_by": {
                        "title": "Created by",
                        "type": "integer",
                        "nullable": true
                    },
                    "resolved": {
                        "title": "Resolved",
                        "type": "boolean"
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "helpcontent": {
                        "title": "Helpcontent",
                        "type": "string"
                    },
                    "is_internal": {
                        "title": "Is internal",
                        "description": "Was this rating created by an internal user?",
                        "type": "boolean"
                    }
                }
            },
            "Reference": {
                "required": [
                    "type",
                    "introduction_ast",
                    "_links"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "category_id": {
                        "title": "Category id",
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_updated": {
                        "title": "Last updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "canonical_path": {
                        "title": "Canonical path",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description for SEO and helpdocs search results.",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "introduction_ast": {
                        "title": "Introduction ast",
                        "type": "string"
                    },
                    "steps": {
                        "title": "Steps",
                        "type": "string",
                        "readOnly": true
                    },
                    "published": {
                        "title": "Published",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "_links": {
                        "title": "links",
                        "type": "string"
                    }
                }
            },
            "Troubleshooting": {
                "required": [
                    "type",
                    "introduction_ast",
                    "steps",
                    "conclusion_ast",
                    "_links"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "category_id": {
                        "title": "Category id",
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_updated": {
                        "title": "Last updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "canonical_path": {
                        "title": "Canonical path",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description for SEO and helpdocs search results.",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "introduction_ast": {
                        "title": "Introduction ast",
                        "type": "string"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Step"
                        }
                    },
                    "conclusion_ast": {
                        "title": "Conclusion ast",
                        "type": "string"
                    },
                    "published": {
                        "title": "Published",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "_links": {
                        "title": "links",
                        "type": "string"
                    }
                }
            },
            "ImplementationMetaSearchResultsActions": {
                "type": "object",
                "properties": {
                    "read": {
                        "title": "Read",
                        "description": "The count of non-hidden \"read\" type actions.",
                        "type": "integer",
                        "default": 0
                    },
                    "read_bulk": {
                        "title": "Read bulk",
                        "description": "The count of non-hidden \"read_bulk\" type actions.",
                        "type": "integer",
                        "default": 0
                    },
                    "write": {
                        "title": "Write",
                        "description": "The count of non-hidden \"write\" type actions.",
                        "type": "integer",
                        "default": 0
                    },
                    "search": {
                        "title": "Search",
                        "description": "The count of non-hidden \"search\" type actions.",
                        "type": "integer",
                        "default": 0
                    },
                    "search_or_write": {
                        "title": "Search or write",
                        "description": "The count of non-hidden \"search_or_write\" type actions.",
                        "type": "integer",
                        "default": 0
                    },
                    "search_and_write": {
                        "title": "Search and write",
                        "description": "The count of non-hidden \"search_and_write\" type actions.",
                        "type": "integer",
                        "default": 0
                    },
                    "filter": {
                        "title": "Filter",
                        "description": "The count of non-hidden \"filter\" type actions.",
                        "type": "integer",
                        "default": 0
                    }
                }
            },
            "ServiceCategories": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "The ID of the category.",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "description": "The title of the category.",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "ImplementationMetaSearchResults": {
                "required": [
                    "id",
                    "name",
                    "banner",
                    "image",
                    "version",
                    "visibility",
                    "actions",
                    "description",
                    "primary_color",
                    "secondary_color",
                    "categories"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "The \"selected_api\" of the Implementation.",
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "The \"title\" of the related Service (if one exists), else the \"name\" of the Implementation (if specified), else the \"selected_api\" of the Implementation.",
                        "type": "string"
                    },
                    "banner": {
                        "title": "Banner",
                        "description": "An additional tag to display the status of the Implementation. Examples: beta, by-invite, premium, upcoming, deprecated.",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "The URL of the Implementation's logo icon/image.",
                        "type": "string",
                        "minLength": 1
                    },
                    "version": {
                        "title": "Version",
                        "description": "The version of the Implementation.",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "visibility": {
                        "title": "Visibility",
                        "description": "Either \"public\" or \"private\".",
                        "type": "string",
                        "minLength": 1
                    },
                    "actions": {
                        "$ref": "#/components/schemas/ImplementationMetaSearchResultsActions"
                    },
                    "description": {
                        "title": "Description",
                        "description": "The \"description\" of the related Service (if one exists), else the \"description\" of the AppVersion (if this is one) or blank.",
                        "type": "string"
                    },
                    "primary_color": {
                        "title": "Primary color",
                        "description": "The \"dashboard_large_bg_color\" of the related Service (if one exists), else the \"primary_color\" of the AppVersion (if this is one) or blank.",
                        "type": "string"
                    },
                    "secondary_color": {
                        "title": "Secondary color",
                        "description": "The \"dashboard_small_bg_color\" of the related Service (if one exists), else the \"secondary_color\" of the AppVersion (if this is one) or blank.",
                        "type": "string"
                    },
                    "categories": {
                        "description": "A list of dictionary objects for all categories related to the implementation.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceCategories"
                        }
                    }
                }
            },
            "ImplementationMetaSearchResponse": {
                "required": [
                    "results"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "title": "Count",
                        "description": "The number of search results that were found.",
                        "type": "integer",
                        "default": 0
                    },
                    "results": {
                        "description": "A list of objects each representing a search result match.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImplementationMetaSearchResults"
                        }
                    }
                }
            },
            "ImplementationMetaSearchError": {
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "Errors",
                        "type": "object"
                    }
                }
            },
            "ActionLinks": {
                "description": "A collection of URLs that are associated with the action.",
                "type": "object",
                "properties": {
                    "action_url": {
                        "title": "Action url",
                        "description": "A URL supplied by action's provider which links to the action within their system.",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "minLength": 1
                    }
                },
                "default": {}
            },
            "ActionPermissions": {
                "description": "A collection of flags that indicate the permissions granted to the caller with respect to the action.",
                "type": "object",
                "properties": {
                    "can_use": {
                        "title": "Can use",
                        "description": "Indicates whether the action is able to be used by the caller.",
                        "type": "boolean",
                        "readOnly": true,
                        "default": true
                    }
                },
                "default": {
                    "can_use": true
                }
            },
            "Action": {
                "required": [
                    "type",
                    "key",
                    "name",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "enum": [
                            "filter",
                            "read",
                            "read_bulk",
                            "run",
                            "search",
                            "search_and_write",
                            "search_or_write",
                            "write"
                        ]
                    },
                    "key": {
                        "title": "Key",
                        "description": "Machine name for this action",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Human-readable label for this action",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "noun": {
                        "title": "Noun",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "minLength": 1
                    },
                    "description_html": {
                        "title": "Description html",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_important": {
                        "title": "Is important",
                        "type": "boolean"
                    },
                    "is_hidden": {
                        "title": "Is hidden",
                        "type": "boolean"
                    },
                    "needs": {
                        "title": "Needs",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "string"
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "readOnly": true
                    },
                    "links": {
                        "$ref": "#/components/schemas/ActionLinks"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/ActionPermissions"
                    }
                }
            },
            "Implementation": {
                "required": [
                    "selected_api"
                ],
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    },
                    "app_id": {
                        "title": "App id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "auth_type": {
                        "title": "Auth type",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "auth_fields": {
                        "title": "Auth fields",
                        "type": "string"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Action"
                        },
                        "readOnly": true
                    },
                    "is_deprecated": {
                        "title": "Is deprecated",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_private_only": {
                        "title": "Is private only",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_invite_only": {
                        "title": "Is invite only",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_beta": {
                        "title": "Is beta",
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    },
                    "is_premium": {
                        "title": "Is premium",
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    },
                    "is_hidden": {
                        "title": "Is hidden",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "images": {
                        "title": "Images",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true
                    },
                    "primary_color": {
                        "title": "Primary color",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "secondary_color": {
                        "title": "Secondary color",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "current_implementation": {
                        "title": "Current implementation",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "other_implementations": {
                        "title": "Other implementations",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "NeedChoicesRequest": {
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "description": "Something like `SlackAPI` (for Python apps) or `SplitwiseCLIAPI@1.0.0` (for CLI apps). Non-public apps are fine as long as the authed user can access them.",
                        "type": "string",
                        "minLength": 1
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "description": "If the app needs auth, provide an `authentication_id` that has the `selected_api` of the app you want to run. Can be any auth visible to the user (including shared).",
                        "type": "integer"
                    },
                    "params": {
                        "title": "Params",
                        "description": "Object that matches the input the node would normally get. Has all the same keys/types as the `needs` of the action.",
                        "type": "object"
                    },
                    "page": {
                        "title": "Page",
                        "type": "integer",
                        "default": 0
                    },
                    "prefill": {
                        "title": "Prefill",
                        "description": "The prefill string to indicate what we're fetching choices for. Likely something like `spreadsheet.id.title`. Must be provided alongside `selected_api` if both `action_id` and `input_field_id` are not.",
                        "type": "string",
                        "minLength": 1
                    },
                    "action_id": {
                        "title": "Action id",
                        "description": "The id that will be used to lookup the Action for prefill lookup. If provided, `input_field_id` is required, else `prefill` must be provided.",
                        "type": "string",
                        "minLength": 1
                    },
                    "input_field_id": {
                        "title": "Input field id",
                        "description": "The id (key) of the input field (Need) that dynamic choices are being retrieved for. If provided, `action_id` is required, else `prefill` must be provided.",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "NeedChoices": {
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string",
                        "minLength": 1
                    },
                    "label": {
                        "title": "Label",
                        "type": "string",
                        "minLength": 1
                    },
                    "sample": {
                        "title": "Sample",
                        "type": "string",
                        "minLength": 1
                    },
                    "value": {
                        "title": "Value",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "NeedChoicesResponseMeta": {
                "description": "This object contains pagination meta data specific to external actions and will only be present for Choice responses from external action providers.",
                "type": "object",
                "properties": {
                    "page": {
                        "title": "Page",
                        "description": "The current page of results being returned. Could be `null` in cases where the provider doesn't implement pagination, for example.",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "NeedChoicesResponseLinks": {
                "description": "This object contains the URLs to call to retrieve the next and/or previous page of results (if any) It is specific to external actions, so it should be used if returned, otherwise a follow up request should be made using the `next_page` value in the request body.",
                "type": "object",
                "properties": {
                    "next": {
                        "title": "Next",
                        "description": "The URL of the next page of paginated results.",
                        "type": "string",
                        "format": "uri",
                        "minLength": 1
                    },
                    "prev": {
                        "title": "Prev",
                        "description": "The URL of the previous page of paginated results.",
                        "type": "string",
                        "format": "uri",
                        "minLength": 1
                    }
                }
            },
            "NeedChoicesResponse": {
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "Check this first to see the success state. If true, there will be `choices` (which still could be empty), and a status code of 200. If false, there will be an array of `errors`.",
                        "type": "boolean"
                    },
                    "choices": {
                        "description": "Could be empty, but will return choices for the supplied field key",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NeedChoices"
                        }
                    },
                    "next_page": {
                        "title": "Next page",
                        "type": "integer"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/NeedChoicesResponseMeta"
                    },
                    "links": {
                        "$ref": "#/components/schemas/NeedChoicesResponseLinks"
                    }
                }
            },
            "GivesRequest": {
                "required": [
                    "selected_api",
                    "action",
                    "type_of"
                ],
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "description": "Something like `SlackAPI` (for Python apps) or `SplitwiseCLIAPI@1.0.0` (for CLI apps). Non-public apps are fine as long as the authed user can access them.",
                        "type": "string",
                        "minLength": 1
                    },
                    "action": {
                        "title": "Action",
                        "description": "Such as `new_contact`.",
                        "type": "string",
                        "minLength": 1
                    },
                    "type_of": {
                        "title": "Type of",
                        "type": "string",
                        "enum": [
                            "read_bulk",
                            "write",
                            "read",
                            "search_or_write",
                            "search",
                            "run",
                            "filter",
                            "search_and_write"
                        ]
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "description": "If the app needs auth, provide an `authentication_id` that has the `selected_api` of the app you want to run. Can be any auth visible to the user (including shared).",
                        "type": "integer"
                    },
                    "params": {
                        "title": "Params",
                        "description": "Object that matches the input the node would normally get. Has all the same keys/types as the `needs` of the action.",
                        "type": "object"
                    },
                    "system_context": {
                        "title": "System context",
                        "description": "A dictionary of contextual values that will be included in logs and emitted events.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "read_result": {
                        "title": "Read result",
                        "description": "Sample read in place of a Nodes sample read to help construct gives",
                        "type": "object"
                    }
                }
            },
            "Give": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string",
                        "minLength": 1
                    },
                    "label": {
                        "title": "Label",
                        "type": "string",
                        "minLength": 1
                    },
                    "score": {
                        "title": "Score",
                        "type": "number"
                    },
                    "subscore": {
                        "title": "Subscore",
                        "type": "number"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "enum": [
                            "integer",
                            "string",
                            "text",
                            "datetime",
                            "boolean",
                            "file",
                            "decimal",
                            "copy",
                            "password",
                            "dict",
                            "code",
                            "filter",
                            "json"
                        ],
                        "default": "string"
                    },
                    "zap_meta_sample": {
                        "title": "Zap meta sample",
                        "type": "object"
                    },
                    "custom_field": {
                        "title": "Custom field",
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    },
                    "important": {
                        "title": "Important",
                        "type": "boolean"
                    },
                    "from_search": {
                        "title": "From search",
                        "type": "boolean"
                    }
                }
            },
            "GivesResponse": {
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "Check this first to see the success state. If true, there will be `gives` (which still could be empty). If false, there will be an array of `errors`.",
                        "type": "boolean"
                    },
                    "gives": {
                        "description": "Could be empty, even if the gives were successfully gathered.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Give"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            },
            "InvokeRequest": {
                "required": [
                    "selected_api",
                    "action",
                    "type_of"
                ],
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "description": "Something like `SlackAPI` (for Python apps) or `SplitwiseCLIAPI@1.0.0` (for CLI apps). Non-public apps are fine as long as the authed user can access them.",
                        "type": "string",
                        "minLength": 1
                    },
                    "action": {
                        "title": "Action",
                        "description": "Such as `new_contact`.",
                        "type": "string",
                        "minLength": 1
                    },
                    "type_of": {
                        "title": "Type of",
                        "type": "string",
                        "enum": [
                            "read_bulk",
                            "write",
                            "read",
                            "search_or_write",
                            "search",
                            "run",
                            "filter",
                            "search_and_write"
                        ]
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "description": "If the app needs auth, provide an `authentication_id` that has the `selected_api` of the app you want to run. Can be any auth visible to the user (including shared).",
                        "type": "integer"
                    },
                    "params": {
                        "title": "Params",
                        "description": "Object that matches the input the node would normally get. Has all the same keys/types as the `needs` of the action.",
                        "type": "object",
                        "default": {}
                    },
                    "system_context": {
                        "title": "System context",
                        "description": "A dictionary of contextual values that will be included in logs and emitted events.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "raw_params": {
                        "title": "Raw params",
                        "description": "Like params, this is the object matches the input but before the {{}} are rendered. Useful for some legacy apps like Web Builder that rely on `action_fields_raw` in the bundle.",
                        "type": "object"
                    },
                    "previous_output": {
                        "title": "Previous output",
                        "description": "An object that represents the previous steps' output. Useful for some legacy apps like Webhook, MongoDB, or AWS SNS which expect raw_data, or in Web Builder with trigger_data.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "idempotency_id": {
                        "title": "Idempotency id",
                        "description": "A client chosen string that identifies the specific invocation. If this endpoint sees the same idempotency ID twice within some reasonable window, it is expected to ignore the second invoke. The workflow engine uses this to encode some task routing information for the response event.",
                        "type": "string",
                        "minLength": 1
                    },
                    "attempt_id": {
                        "title": "Attempt id",
                        "description": "A UUID that identifies the broader execution of an invocation, a corollary to \"attempt\" IDs in the former runner. Intended to \"connect\" multiple invocations.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "execution_id": {
                        "title": "Execution id",
                        "description": "DEPRECATED: This field is being deprecated in favor of using the attempt id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "zap_id": {
                        "title": "Zap id",
                        "description": "A stringified int or UUID that identifies the Zap that is running this invocation.",
                        "type": "string",
                        "minLength": 1
                    },
                    "timeout": {
                        "title": "Timeout",
                        "description": "While we endeavour to reliably run actions, after this number of seconds, you can safely assume that a retry / replay with new idempotency_id is needed, as we guarantee we will not **generate** a response for the prior idempotency_id past this time.",
                        "type": "integer",
                        "maximum": 259200,
                        "minimum": 1
                    },
                    "page": {
                        "title": "Page",
                        "description": "Allow individual apps to fetch a particular page of results. Defaults to None, starts at 0. If you want to fetch dynamic drop downs, you will need to include this parameter.",
                        "type": "integer"
                    },
                    "paging_token": {
                        "title": "Paging token",
                        "description": "When using bulk read action types, this denotes the state of the paging behavior. Defaults to None, and is given in the InvokeResponse.",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_sampling": {
                        "title": "Is sampling",
                        "description": "Set to True to make a sampling request. Defaults to False.",
                        "type": "boolean",
                        "default": false
                    },
                    "test_poll": {
                        "title": "Test poll",
                        "description": "Allow individual apps to loosen the requirements on fetching samples. Defaults to false.",
                        "type": "boolean",
                        "default": false
                    },
                    "sync": {
                        "title": "Sync",
                        "description": "**Deprecated flag** - Server will respond with 403 if set to true. Will be removed soon.",
                        "type": "boolean",
                        "default": false
                    },
                    "filter_referenced_output": {
                        "title": "Filter referenced output",
                        "description": "An object that represents the key/values referenced in a filter step's filter_criteria. Only used by FilterAPI and BranchingAPI filter actions to send over the outputs being tested. Ignored for all other action types.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "is_bulk_read": {
                        "title": "Is bulk read",
                        "description": "('Set to True to make a bulk read (e.g. Transfer) request against any paginating read action.This can be a legacy Python/CLI bulk read action (type_of=\"bulk_read\") with \"paging_token\", or it can be aregular Python/CLI/WB read action (type_of=\"read\") that may or may not support pagination using either\"meta.page\" number or the CLI cursor store. Defaults to False.',)",
                        "type": "boolean",
                        "default": false
                    },
                    "context_id": {
                        "title": "Context id",
                        "description": "Provide an identifier that will be included in related events. May be used to uniquely identify the result of this invocation.",
                        "type": "string",
                        "minLength": 1
                    },
                    "destination_selected_apis": {
                        "description": "List of destination apis to check against, each one should look like an instance of `selected_api`. If any of these does not exist the endpoint will 404",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    }
                }
            },
            "InvokeAsyncResponse": {
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "rate_limit_max_requests": {
                        "title": "Rate limit max requests",
                        "description": "Maximum number of requests before rate limit kicks in. Absent if selected_api does not define a limit",
                        "type": "integer"
                    },
                    "rate_limit_remaining_requests": {
                        "title": "Rate limit remaining requests",
                        "description": "Number of remaining requests before rate limiting. Absent if selected_api does not define a limit",
                        "type": "integer"
                    },
                    "rate_limit_reset": {
                        "title": "Rate limit reset",
                        "description": "If currently under rate limiting, marks the epoch when the period ends. Absent if no rate limiting currently applies.",
                        "type": "integer"
                    },
                    "response_uuid": {
                        "title": "Response uuid",
                        "description": "(Deprecated name for invocation_id as it diverged from produced Events).",
                        "type": "string",
                        "format": "uuid"
                    },
                    "invocation_id": {
                        "title": "Invocation id",
                        "description": "The UUID a client can use to poll for async InvokeResults.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "success": {
                        "title": "Success",
                        "description": "Check this first to see if the invoke behaved as expected. If true there will either be an array of `results` if a synchronous call, or a `response_uuid` if asynchronous. If false, there will be an array of `errors`. This is distinct from the response status, which represents the action behavior.",
                        "type": "boolean"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            },
            "InvokeResponse": {
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "rate_limit_max_requests": {
                        "title": "Rate limit max requests",
                        "description": "Maximum number of requests before rate limit kicks in. Absent if selected_api does not define a limit",
                        "type": "integer"
                    },
                    "rate_limit_remaining_requests": {
                        "title": "Rate limit remaining requests",
                        "description": "Number of remaining requests before rate limiting. Absent if selected_api does not define a limit",
                        "type": "integer"
                    },
                    "rate_limit_reset": {
                        "title": "Rate limit reset",
                        "description": "If currently under rate limiting, marks the epoch when the period ends. Absent if no rate limiting currently applies.",
                        "type": "integer"
                    },
                    "response_uuid": {
                        "title": "Response uuid",
                        "description": "(Deprecated name for invocation_id as it diverged from produced Events).",
                        "type": "string",
                        "format": "uuid"
                    },
                    "invocation_id": {
                        "title": "Invocation id",
                        "description": "The UUID a client can use to poll for async InvokeResults.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "success": {
                        "title": "Success",
                        "description": "Check this first to see if the invoke behaved as expected. If true there will either be an array of `results` if a synchronous call, or a `response_uuid` if asynchronous. If false, there will be an array of `errors`. This is distinct from the response status, which represents the action behavior.",
                        "type": "boolean"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the action call itself, influenced by the partner action. IE: you could have a success=True (Zapier succeeded) and status=error (the partner raise an error).",
                        "type": "string",
                        "enum": [
                            "delayed",
                            "error",
                            "halted",
                            "filtered",
                            "success",
                            "digested"
                        ]
                    },
                    "results": {
                        "description": "Could be empty, even if the action was successfully run.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "paging_token": {
                        "title": "Paging token",
                        "description": "When using bulk read action types, this denotes the state of the paging utilities. Pass it back into the invoke endpoint.",
                        "type": "string",
                        "minLength": 1
                    },
                    "error_type": {
                        "title": "Error type",
                        "description": "Error type of the InvokeResult object, as defined in the avro schemas. Value must be a valid member of the InvokeFailure enum",
                        "type": "string",
                        "enum": [
                            "user",
                            "authentication",
                            "partner",
                            "system",
                            "throttled",
                            "system_throttled",
                            "hydration"
                        ]
                    },
                    "throttle_delay": {
                        "title": "Throttle delay",
                        "description": "('When a partner throttled the invoke call, this value will hold the number of seconds to wait before retrying. Otherwise not present in the response.',)",
                        "type": "integer"
                    }
                }
            },
            "NeedsRequest": {
                "required": [
                    "selected_api",
                    "action",
                    "type_of"
                ],
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "description": "Something like `SlackAPI` (for Python apps) or `SplitwiseCLIAPI@1.0.0` (for CLI apps). Non-public apps are fine as long as the authed user can access them.",
                        "type": "string",
                        "minLength": 1
                    },
                    "action": {
                        "title": "Action",
                        "description": "Such as `new_contact`.",
                        "type": "string",
                        "minLength": 1
                    },
                    "type_of": {
                        "title": "Type of",
                        "type": "string",
                        "enum": [
                            "read_bulk",
                            "write",
                            "read",
                            "search_or_write",
                            "search",
                            "run",
                            "filter",
                            "search_and_write"
                        ]
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "description": "If the app needs auth, provide an `authentication_id` that has the `selected_api` of the app you want to run. Can be any auth visible to the user (including shared).",
                        "type": "integer"
                    },
                    "params": {
                        "title": "Params",
                        "description": "Object that matches the input the node would normally get. Has all the same keys/types as the `needs` of the action.",
                        "type": "object"
                    },
                    "system_context": {
                        "title": "System context",
                        "description": "A dictionary of contextual values that will be included in logs and emitted events.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "invalidate_cache": {
                        "title": "Invalidate cache",
                        "description": "Needs can be cached, provide this flag to disable it at a potential performance hit.",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "Need": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "alters_custom_fields": {
                        "title": "Alters custom fields",
                        "type": "boolean",
                        "nullable": true
                    },
                    "capabilities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    },
                    "choices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NeedChoices"
                        }
                    },
                    "computed": {
                        "title": "Computed",
                        "description": "This value is only returned if the `computed` key is explicitly defined in the integration's need.",
                        "type": "boolean",
                        "nullable": true
                    },
                    "custom_field": {
                        "title": "Custom field",
                        "type": "boolean",
                        "default": false
                    },
                    "default": {
                        "title": "Default",
                        "type": "string",
                        "minLength": 1
                    },
                    "depends_on": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    },
                    "format": {
                        "title": "Format",
                        "type": "string",
                        "enum": [
                            "SELECT"
                        ]
                    },
                    "from_search": {
                        "title": "From search",
                        "type": "boolean",
                        "default": false
                    },
                    "from_write": {
                        "title": "From write",
                        "type": "boolean",
                        "default": false
                    },
                    "help_text": {
                        "title": "Help text",
                        "type": "string",
                        "minLength": 1
                    },
                    "help_text_html": {
                        "title": "Help text html",
                        "type": "string",
                        "minLength": 1
                    },
                    "input_format": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "key": {
                        "title": "Key",
                        "type": "string",
                        "minLength": 1
                    },
                    "label": {
                        "title": "Label",
                        "type": "string",
                        "minLength": 1
                    },
                    "language": {
                        "title": "Language",
                        "type": "string",
                        "minLength": 1
                    },
                    "parent_key": {
                        "title": "Parent key",
                        "type": "string",
                        "minLength": 1
                    },
                    "placeholder": {
                        "title": "Placeholder",
                        "type": "string",
                        "minLength": 1
                    },
                    "prefill": {
                        "title": "Prefill",
                        "type": "string",
                        "minLength": 1
                    },
                    "required": {
                        "title": "Required",
                        "type": "boolean",
                        "default": false
                    },
                    "searchfill": {
                        "title": "Searchfill",
                        "type": "string",
                        "minLength": 1
                    },
                    "send_in_json": {
                        "title": "Send in json",
                        "type": "boolean",
                        "default": true
                    },
                    "regex": {
                        "title": "Regex",
                        "type": "string",
                        "minLength": 1
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "enum": [
                            "integer",
                            "string",
                            "text",
                            "datetime",
                            "boolean",
                            "file",
                            "decimal",
                            "copy",
                            "password",
                            "dict",
                            "code",
                            "filter",
                            "json"
                        ],
                        "default": "string"
                    },
                    "list": {
                        "title": "List",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "NeedsResponse": {
                "required": [
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "Check this first to see the success state. If true, there will be `needs` (which still could be empty). If false, there will be an array of `errors`.",
                        "type": "boolean"
                    },
                    "needs": {
                        "description": "Could be empty, even if the needs were successfully gathered.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Need"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "last_fetched_at": {
                        "title": "Last fetched at",
                        "description": "A timestamp representing when needs were last fetched from partners.",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "InternalAccount": {
                "required": [
                    "created_at",
                    "is_team_account",
                    "unlimited_until",
                    "is_trialing",
                    "is_trialing_teams",
                    "is_trialing_companies",
                    "is_trialing_enterprise",
                    "is_chat_eligible",
                    "is_premier_chat_eligible",
                    "team_account_end_date",
                    "company_account_end_date",
                    "enterprise_account_end_date",
                    "has_modern_pricing_plan"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "default": "Personal Account",
                        "minLength": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_team_account": {
                        "title": "Is team account",
                        "type": "boolean"
                    },
                    "customer_id": {
                        "title": "Customer id",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "is_unlimited": {
                        "title": "Is unlimited",
                        "type": "string",
                        "readOnly": true
                    },
                    "unlimited_until": {
                        "title": "Unlimited until",
                        "type": "string",
                        "format": "date-time"
                    },
                    "period_start": {
                        "title": "Period start",
                        "type": "string",
                        "readOnly": true
                    },
                    "period_end": {
                        "title": "Period end",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_trialing": {
                        "title": "Is trialing",
                        "type": "boolean"
                    },
                    "is_trialing_teams": {
                        "title": "Is trialing teams",
                        "type": "boolean"
                    },
                    "is_trialing_companies": {
                        "title": "Is trialing companies",
                        "type": "boolean"
                    },
                    "is_trialing_enterprise": {
                        "title": "Is trialing enterprise",
                        "type": "boolean"
                    },
                    "trial_end_date": {
                        "title": "Trial end date",
                        "description": "Behaves like \"unlimited until\" but shows a trial banner to the user and only works for users on a free plan.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "cannot_reset_trial": {
                        "title": "Cannot reset trial",
                        "type": "string",
                        "readOnly": true
                    },
                    "plan_group": {
                        "title": "Plan group",
                        "type": "string",
                        "readOnly": true
                    },
                    "plan": {
                        "title": "Plan",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_chat_eligible": {
                        "title": "Is chat eligible",
                        "type": "boolean"
                    },
                    "is_premier_chat_eligible": {
                        "title": "Is premier chat eligible",
                        "type": "boolean"
                    },
                    "team_account_end_date": {
                        "title": "Team account end date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "company_account_end_date": {
                        "title": "Company account end date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "enterprise_account_end_date": {
                        "title": "Enterprise account end date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "has_modern_pricing_plan": {
                        "title": "Has modern pricing plan",
                        "type": "boolean"
                    },
                    "_links": {
                        "title": "links",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "CustomUser": {
                "required": [
                    "first_name",
                    "last_name",
                    "date_joined",
                    "is_developer",
                    "is_expert"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "readOnly": true
                    },
                    "slack_handle": {
                        "title": "Slack handle",
                        "type": "string",
                        "readOnly": true
                    },
                    "first_name": {
                        "title": "First name",
                        "type": "string",
                        "minLength": 1
                    },
                    "last_name": {
                        "title": "Last name",
                        "type": "string",
                        "minLength": 1
                    },
                    "date_joined": {
                        "title": "Date joined",
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_developer": {
                        "title": "Is developer",
                        "type": "boolean"
                    },
                    "is_expert": {
                        "title": "Is expert",
                        "type": "boolean"
                    },
                    "alert_triggers": {
                        "title": "Alert triggers",
                        "type": "string",
                        "enum": [
                            "never",
                            "repeated",
                            "always",
                            "only_trigger"
                        ],
                        "readOnly": true
                    },
                    "alert_actions": {
                        "title": "Alert actions",
                        "type": "string",
                        "enum": [
                            "never",
                            "repeated",
                            "always",
                            "only_trigger"
                        ],
                        "readOnly": true
                    },
                    "timezone": {
                        "title": "Timezone",
                        "description": "A valid <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\">IANA TZ database name</a>.",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "aliases": {
                        "title": "Aliases",
                        "type": "string",
                        "readOnly": true
                    },
                    "account_memberships": {
                        "title": "Account memberships",
                        "type": "string",
                        "readOnly": true
                    },
                    "_links": {
                        "title": "links",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "BillingExemptZapsRequest": {
                "required": [
                    "is_billing_exempt"
                ],
                "type": "object",
                "properties": {
                    "is_billing_exempt": {
                        "title": "Is billing exempt",
                        "type": "boolean"
                    }
                }
            },
            "BillingExemptZapsResponse": {
                "type": "object",
                "properties": {}
            },
            "InvitationAccount": {
                "required": [
                    "logo_url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 200
                    },
                    "logo_url": {
                        "title": "Logo url",
                        "type": "string",
                        "format": "uri",
                        "minLength": 1
                    },
                    "has_saml_sso": {
                        "title": "Has saml sso",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "InvitationCode": {
                "required": [
                    "email",
                    "code",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email",
                        "maxLength": 254,
                        "minLength": 1
                    },
                    "email_found": {
                        "title": "Email found",
                        "type": "string",
                        "readOnly": true
                    },
                    "code": {
                        "title": "Code",
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "sso_url": {
                        "title": "Sso url",
                        "type": "string",
                        "readOnly": true
                    },
                    "account": {
                        "$ref": "#/components/schemas/InvitationAccount"
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/Member"
                    }
                }
            },
            "JWTTokenExchangeRequest": {
                "required": [
                    "customuser_id",
                    "account_id"
                ],
                "type": "object",
                "properties": {
                    "customuser_id": {
                        "title": "Customuser id",
                        "type": "integer"
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    }
                }
            },
            "JWTTokenExchangeResponse": {
                "required": [
                    "account_id",
                    "jwt"
                ],
                "type": "object",
                "properties": {
                    "account_id": {
                        "title": "Account id",
                        "type": "string",
                        "minLength": 1
                    },
                    "jwt": {
                        "title": "Jwt",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "MasqueradeLinkRequest": {
                "required": [
                    "entity_type",
                    "entity_id"
                ],
                "type": "object",
                "properties": {
                    "entity_type": {
                        "title": "Entity type",
                        "type": "string",
                        "enum": [
                            "customuser",
                            "fork",
                            "node",
                            "webapp",
                            "cli",
                            "email",
                            "visual_builder",
                            "template"
                        ]
                    },
                    "entity_id": {
                        "title": "Entity id",
                        "type": "string",
                        "minLength": 1
                    },
                    "account_context": {
                        "title": "Account context",
                        "type": "string"
                    },
                    "next_url": {
                        "title": "Next url",
                        "type": "string"
                    },
                    "next_url_subdomain": {
                        "title": "Next url subdomain",
                        "type": "string"
                    },
                    "common_note": {
                        "title": "Common note",
                        "type": "string"
                    },
                    "note": {
                        "title": "Note",
                        "type": "string"
                    },
                    "zendesk_ticket_id": {
                        "title": "Zendesk ticket id",
                        "type": "string"
                    },
                    "intercom_ticket_id": {
                        "title": "Intercom ticket id",
                        "type": "string"
                    }
                }
            },
            "MasqueradeLinkResponse": {
                "required": [
                    "is_staff"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "minLength": 1
                    },
                    "next": {
                        "title": "Next",
                        "type": "string",
                        "minLength": 1
                    },
                    "next_subdomain": {
                        "title": "Next subdomain",
                        "type": "string",
                        "minLength": 1
                    },
                    "detail": {
                        "title": "Detail",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_staff": {
                        "title": "Is staff",
                        "type": "boolean"
                    },
                    "customuser_email": {
                        "title": "Customuser email",
                        "type": "string",
                        "format": "email",
                        "minLength": 1
                    }
                }
            },
            "NounStepConnection": {
                "required": [
                    "selected_api",
                    "type_of",
                    "action"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    },
                    "type_of": {
                        "title": "Type of",
                        "type": "string",
                        "enum": [
                            "read",
                            "search",
                            "write",
                            "search_or_write",
                            "filter"
                        ]
                    },
                    "action": {
                        "title": "Action",
                        "type": "string",
                        "maxLength": 120,
                        "minLength": 1
                    },
                    "needs_mapping": {
                        "title": "Needs mapping",
                        "description": "\nMap _from_ a Noun _to_ the APIs needs.\n\nJSON should be in the format of `{\"fname\": \"{{@first_name}}\"}`\nwhere \"fname\" is the api's needs field key and \"@first_name\" is\nthe noun field key.\n\nThis is generally used more for actions/writes. Custom fields\nshould not be used here.\n",
                        "type": "string"
                    },
                    "gives_mapping": {
                        "title": "Gives mapping",
                        "description": "\nMap from an API's gives fields _to_ a Noun.\n\nJSON should be in the format of `{\"@first_name\": \"{{Field1}}\"}`\nwhere \"@first_name\" is the noun field key and \"Field1\" is the\napi's gives fields.\n\nThis is generally more used for triggers/reads. Custom fields\nshould not be used here.\n",
                        "type": "string"
                    },
                    "noun_slug": {
                        "title": "Noun slug",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Noun": {
                "required": [
                    "slug",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 50,
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "nullable": true
                    },
                    "fields": {
                        "title": "Fields",
                        "description": "\nA dictionary of `{\"@key\": {\"label\": \"Key\"}}` that this noun\ncontains.\n\nCareful if you edit this, for example, removing/renaming a key can\nbreak noun step connections!\n",
                        "type": "string"
                    }
                }
            },
            "OAuthApplication": {
                "required": [
                    "allowlist_domains",
                    "redirect_uris"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "client_id": {
                        "title": "Client id",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "allowlist_domains": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "redirect_uris": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "authorization_grant_type": {
                        "title": "Authorization grant type",
                        "type": "string",
                        "enum": [
                            "authorization-code",
                            "implicit",
                            "password",
                            "client-credentials"
                        ],
                        "readOnly": true
                    }
                }
            },
            "OAuthApplicationExtended": {
                "required": [
                    "allowlist_domains",
                    "redirect_uris"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "readOnly": true
                    },
                    "client_id": {
                        "title": "Client id",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "allowlist_domains": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "redirect_uris": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "authorization_grant_type": {
                        "title": "Authorization grant type",
                        "type": "string",
                        "enum": [
                            "authorization-code",
                            "implicit",
                            "password",
                            "client-credentials"
                        ],
                        "readOnly": true
                    },
                    "client_secret": {
                        "title": "Client secret",
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "OauthTokenExchangeRequest": {
                "required": [
                    "oauth_token",
                    "scopes"
                ],
                "type": "object",
                "properties": {
                    "oauth_token": {
                        "title": "Oauth token",
                        "type": "string"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            },
            "_JWT": {
                "required": [
                    "account_id",
                    "jwt"
                ],
                "type": "object",
                "properties": {
                    "account_id": {
                        "title": "Account id",
                        "type": "string",
                        "minLength": 1
                    },
                    "jwt": {
                        "title": "Jwt",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "_Service": {
                "required": [
                    "slug"
                ],
                "type": "object",
                "properties": {
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "minLength": 1
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "_OAuthApplication": {
                "required": [
                    "client_id"
                ],
                "type": "object",
                "properties": {
                    "client_id": {
                        "title": "Client id",
                        "type": "string",
                        "minLength": 1
                    },
                    "service": {
                        "$ref": "#/components/schemas/_Service"
                    }
                }
            },
            "OauthTokenExchangeResponse": {
                "required": [
                    "jwts",
                    "oauth_application",
                    "customuser_id"
                ],
                "type": "object",
                "properties": {
                    "jwts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/_JWT"
                        }
                    },
                    "oauth_application": {
                        "$ref": "#/components/schemas/_OAuthApplication"
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "type": "integer"
                    }
                }
            },
            "Onboarding": {
                "required": [
                    "customuser"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "complete",
                            "skipped",
                            "started"
                        ],
                        "nullable": true
                    },
                    "intent": {
                        "title": "Intent",
                        "type": "string",
                        "enum": [
                            "general",
                            "specific",
                            "uncertain"
                        ],
                        "nullable": true
                    },
                    "intent_detail": {
                        "title": "Intent detail",
                        "type": "string",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "customuser": {
                        "title": "Customuser",
                        "type": "integer"
                    }
                }
            },
            "PersistedModal": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    },
                    "modal_data": {
                        "title": "Modal data",
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "Policy": {
                "required": [
                    "title",
                    "slug",
                    "published_at"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "A unique slug for the policy. If blank, autogenerated from the title of the policy.",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "published_at": {
                        "title": "Published at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                }
            },
            "PendingPolicy": {
                "required": [
                    "title",
                    "slug",
                    "content",
                    "tldr",
                    "published_at"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "A unique slug for the policy. If blank, autogenerated from the title of the policy.",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "content": {
                        "title": "Content",
                        "type": "integer"
                    },
                    "tldr": {
                        "title": "Tldr",
                        "type": "string",
                        "minLength": 1
                    },
                    "published_at": {
                        "title": "Published at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                }
            },
            "Agreement": {
                "required": [
                    "user",
                    "policy_content"
                ],
                "type": "object",
                "properties": {
                    "user": {
                        "title": "User",
                        "type": "integer"
                    },
                    "policy_content": {
                        "title": "Policy content",
                        "type": "integer"
                    },
                    "agreed_at": {
                        "title": "Agreed at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PolicyContent": {
                "required": [
                    "title",
                    "slug",
                    "tldr",
                    "content",
                    "body",
                    "published_at"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "A unique slug for the policy. If blank, autogenerated from the title of the policy.",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "tldr": {
                        "title": "Tldr",
                        "type": "string",
                        "minLength": 1
                    },
                    "content": {
                        "title": "Content",
                        "type": "integer"
                    },
                    "body": {
                        "title": "Body",
                        "type": "string",
                        "minLength": 1
                    },
                    "published_at": {
                        "title": "Published at",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PressPageArticle": {
                "required": [
                    "date_published",
                    "read_time",
                    "read_time_minutes",
                    "article_title",
                    "article_excerpt",
                    "article_url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "date_published": {
                        "title": "Date published",
                        "description": "The date the article was published.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "read_time": {
                        "title": "Read time",
                        "description": "Estimated time to read the article, in seconds. Will be shown in MM:SS format, ex. 90 seconds will show as 1:30. ",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "read_time_minutes": {
                        "title": "Read time in minutes",
                        "description": "The read_time field in minutes, in the format MM:SS",
                        "type": "string",
                        "minLength": 1
                    },
                    "article_title": {
                        "title": "Article title",
                        "description": "Press page title.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "article_excerpt": {
                        "title": "Article excerpt",
                        "description": "Press page excerpt, appears below title.",
                        "type": "string",
                        "minLength": 1
                    },
                    "article_url": {
                        "title": "Article url",
                        "description": "The link to the article.",
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1
                    },
                    "article_author": {
                        "title": "Article author",
                        "description": "The author of the article (optional).",
                        "type": "string",
                        "maxLength": 500
                    },
                    "article_publisher": {
                        "title": "Article publisher",
                        "description": "The publisher of the article (optional). If not specified, the domain from the article_url will be used instead.",
                        "type": "string",
                        "maxLength": 500
                    },
                    "is_public": {
                        "title": "Is public",
                        "description": "Indicates whether we should show the article on the press page.",
                        "type": "boolean"
                    },
                    "headline_image_url": {
                        "title": "Headline image url",
                        "description": "Link the optimized image URL.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "title": "Order",
                        "description": "The ascending order of the press page articles.",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                    }
                }
            },
            "CompanySize": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "display_range": {
                        "title": "Display range",
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "title": "Is active",
                        "type": "boolean"
                    }
                }
            },
            "Role": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "canonical_id": {
                        "title": "Canonical id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 50,
                        "nullable": true
                    }
                }
            },
            "Links": {
                "description": "The links object returned in paginated response bodies.",
                "type": "object",
                "properties": {
                    "next": {
                        "title": "Next",
                        "description": "The URL of the next page of paginated results.",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "prev": {
                        "title": "Prev",
                        "description": "The URL of the previous page of paginated results.",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    }
                }
            },
            "Meta": {
                "description": "The meta object returned in paginated response bodies.",
                "required": [
                    "count",
                    "limit",
                    "offset"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "title": "Count",
                        "description": "The total number of objects in the collection represented by the endpoint.",
                        "type": "integer",
                        "minimum": 0
                    },
                    "limit": {
                        "title": "Limit",
                        "description": "The limit value used in the request.",
                        "type": "integer",
                        "minimum": 1
                    },
                    "offset": {
                        "title": "Offset",
                        "description": "The offset value used in the request.",
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            "ExternalAction": {
                "required": [
                    "id",
                    "key",
                    "provider",
                    "provider_id",
                    "selected_api",
                    "type",
                    "name",
                    "description",
                    "scope",
                    "owner",
                    "customusers",
                    "accounts",
                    "status",
                    "tag"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "minLength": 1
                    },
                    "key": {
                        "title": "Key",
                        "type": "string",
                        "minLength": 1
                    },
                    "provider": {
                        "title": "Provider",
                        "type": "string",
                        "minLength": 1
                    },
                    "provider_id": {
                        "title": "Provider id",
                        "type": "string",
                        "minLength": 1
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "type": "string",
                        "minLength": 1
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "minLength": 1
                    },
                    "scope": {
                        "title": "Scope",
                        "type": "string",
                        "minLength": 1
                    },
                    "owner": {
                        "title": "Owner",
                        "type": "integer",
                        "nullable": true
                    },
                    "customusers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ]
                    },
                    "tag": {
                        "title": "Tag",
                        "type": "string"
                    }
                }
            },
            "ActionListResponse": {
                "required": [
                    "links",
                    "meta",
                    "actions"
                ],
                "type": "object",
                "properties": {
                    "links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "actions": {
                        "description": "The data field returning a list of actions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalAction"
                        }
                    }
                }
            },
            "ActionCreate": {
                "required": [
                    "provider",
                    "provider_id",
                    "selected_api",
                    "type",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "provider": {
                        "title": "Provider",
                        "description": "The provider of the action.",
                        "type": "string",
                        "enum": [
                            "ae",
                            "bin"
                        ]
                    },
                    "provider_id": {
                        "title": "Provider id",
                        "description": "The backlink (i.e. the id of the action in the provider's system).",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "description": "The selected API of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "type": {
                        "title": "Type",
                        "description": "The type of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "The name of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "description": "The description of the action.",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "description": "The scope of the action.",
                        "type": "string"
                    },
                    "owner": {
                        "title": "Owner",
                        "description": "The customuser ID of the action's owner.",
                        "type": "integer"
                    },
                    "customusers": {
                        "description": "A list of customuser IDs that can use the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "accounts": {
                        "description": "A list of account IDs that can use the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the action (always private initially).",
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ],
                        "readOnly": true
                    },
                    "tag": {
                        "title": "Tag",
                        "description": "An immutable value that must be unique across versions of an action. This field will become required in the future, so action providers should specify it when creating action versions.",
                        "type": "string",
                        "pattern": "^[a-z0-9.]*$",
                        "default": "prod",
                        "maxLength": 255,
                        "minLength": 1
                    }
                }
            },
            "ActionCreateOrUpdateResponse": {
                "required": [
                    "provider",
                    "provider_id",
                    "selected_api",
                    "type",
                    "name",
                    "id",
                    "key"
                ],
                "type": "object",
                "properties": {
                    "provider": {
                        "title": "Provider",
                        "description": "The provider of the action.",
                        "type": "string",
                        "enum": [
                            "ae",
                            "bin"
                        ]
                    },
                    "provider_id": {
                        "title": "Provider id",
                        "description": "The backlink (i.e. the id of the action in the provider's system).",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "description": "The selected API of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "type": {
                        "title": "Type",
                        "description": "The type of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "The name of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "description": "The description of the action.",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "description": "The scope of the action.",
                        "type": "string"
                    },
                    "owner": {
                        "title": "Owner",
                        "description": "The customuser ID of the action's owner.",
                        "type": "integer"
                    },
                    "customusers": {
                        "description": "A list of customuser IDs that can use the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "accounts": {
                        "description": "A list of account IDs that can use the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the action (always private initially).",
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ],
                        "readOnly": true
                    },
                    "tag": {
                        "title": "Tag",
                        "description": "An immutable value that must be unique across versions of an action. This field will become required in the future, so action providers should specify it when creating action versions.",
                        "type": "string",
                        "pattern": "^[a-z0-9.]*$",
                        "default": "prod",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "id": {
                        "title": "Id",
                        "description": "The ID of the action",
                        "type": "string",
                        "minLength": 1
                    },
                    "key": {
                        "title": "Key",
                        "description": "The key of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    }
                }
            },
            "ActionDetail": {
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "The name of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "description": "The description of the action.",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "description": "The scope of the action.",
                        "type": "string"
                    },
                    "customusers": {
                        "description": "A list of custom user ids that have access to the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "accounts": {
                        "description": "A list of account ids that have access to the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the action. Use the 'publish' endpoint to change an action's status from private to public.",
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ],
                        "readOnly": true
                    }
                }
            },
            "ActionDetailResponse": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "The name of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "description": {
                        "title": "Description",
                        "description": "The description of the action.",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "description": "The scope of the action.",
                        "type": "string"
                    },
                    "customusers": {
                        "description": "A list of custom user ids that have access to the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "accounts": {
                        "description": "A list of account ids that have access to the action.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the action. Use the 'publish' endpoint to change an action's status from private to public.",
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ],
                        "readOnly": true
                    },
                    "key": {
                        "title": "Key",
                        "description": "The key of the action.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    }
                }
            },
            "ActionRoleAssignments": {
                "required": [
                    "id",
                    "role",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "The ID of the entity whose type is specified in `type`.",
                        "type": "integer"
                    },
                    "role": {
                        "title": "Role",
                        "description": "The role to assign the entity in relation to the action. Use `none` to remove the entity.",
                        "type": "string",
                        "enum": [
                            "viewer",
                            "none"
                        ]
                    },
                    "type": {
                        "title": "Type",
                        "description": "The type of entity the action is being shared with.",
                        "type": "string",
                        "enum": [
                            "customuser",
                            "account"
                        ]
                    }
                }
            },
            "ActionShareRequest": {
                "required": [
                    "role_assignments"
                ],
                "type": "object",
                "properties": {
                    "role_assignments": {
                        "description": "A list of mappings denoting the role that each entity will be granted for the action.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActionRoleAssignments"
                        }
                    }
                }
            },
            "Photo": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Images are not modified. Upload images as close to the size you want to use them at as possible.",
                        "type": "string",
                        "readOnly": true,
                        "format": "uri"
                    }
                }
            },
            "ReviewPage": {
                "required": [
                    "review_author",
                    "last_changed",
                    "homepage_screenshot",
                    "photos",
                    "service",
                    "related_apps",
                    "similar_apps"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "seo_title": {
                        "title": "Seo title",
                        "description": "Title displayed on SERP & browser window. Max length: 50-60 characters.",
                        "type": "string",
                        "maxLength": 60,
                        "nullable": true
                    },
                    "seo_description": {
                        "title": "Seo description",
                        "description": "Short description displayed on SERP. Max length: 150-160 characters.",
                        "type": "string",
                        "maxLength": 160,
                        "nullable": true
                    },
                    "review": {
                        "title": "Review",
                        "type": "string"
                    },
                    "review_html": {
                        "title": "Review html",
                        "type": "string",
                        "readOnly": true
                    },
                    "review_summary": {
                        "title": "Review summary",
                        "type": "string",
                        "nullable": true
                    },
                    "review_summary_html": {
                        "title": "Review summary html",
                        "type": "string",
                        "readOnly": true
                    },
                    "review_author": {
                        "$ref": "#/components/schemas/Author"
                    },
                    "last_changed": {
                        "title": "Last changed",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pricing": {
                        "title": "Pricing",
                        "type": "string"
                    },
                    "pricing_html": {
                        "title": "Pricing html",
                        "type": "string",
                        "readOnly": true
                    },
                    "features": {
                        "title": "Features",
                        "type": "string"
                    },
                    "features_html": {
                        "title": "Features html",
                        "type": "string",
                        "readOnly": true
                    },
                    "site_url": {
                        "title": "Site url",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "rating": {
                        "title": "Rating",
                        "description": "Min 1, Max 5 | 5 = Exeptional | 4 = Baseline | 3 = OK but not great",
                        "type": "number",
                        "nullable": true
                    },
                    "homepage_screenshot": {
                        "$ref": "#/components/schemas/Photo"
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Photo"
                        }
                    },
                    "service": {
                        "$ref": "#/components/schemas/Service"
                    },
                    "related_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        }
                    },
                    "similar_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        }
                    }
                }
            },
            "SampleRequest": {
                "required": [
                    "selected_api",
                    "account_id",
                    "customuser_id",
                    "action",
                    "type_of",
                    "params"
                ],
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "description": "Something like `SlackAPI` (for Python apps) or `SplitwiseCLIAPI@1.0.0` (for CLI apps). Non-public apps are fine as long as the authed user can access them.",
                        "type": "string",
                        "minLength": 1
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "description": "If the app needs auth, provide an `authentication_id` that has the `selected_api` of the app you want to run. Can be any auth visible to the user (including shared).",
                        "type": "integer"
                    },
                    "account_id": {
                        "title": "Account id",
                        "description": "An `Account` id to be associated with the sample.",
                        "type": "integer"
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "description": "A `Customuser` id to be associated with the sample.",
                        "type": "integer"
                    },
                    "action": {
                        "title": "Action",
                        "description": "Such as `new_contact`",
                        "type": "string",
                        "minLength": 1
                    },
                    "type_of": {
                        "title": "Type of",
                        "description": "Such as `read` or `write`. For a sample in this instance, this will always be `read`",
                        "type": "string",
                        "minLength": 1
                    },
                    "params": {
                        "title": "Params",
                        "description": "Object that matches the input the node would normally get. Has all the same keys/types as the `needs` of the action. If the selected API is a static hook, `seed` information must be included in the params.",
                        "type": "object"
                    },
                    "raw_params": {
                        "title": "Raw params",
                        "description": "Like params, this is the object matches the input but before the {{}} are rendered. Useful for some legacy apps like Web Builder that rely on `action_fields_raw` in the bundle.",
                        "type": "object"
                    }
                }
            },
            "SampleResponse": {
                "required": [
                    "session_id",
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "session_id": {
                        "title": "Session id",
                        "description": "An id representing either an attempt or a trigger subscription claim. An id prepended with `a.<uuid>` is an attempt id. An id prepended with `c.<uuid>` is a trigger subscription claim id.",
                        "type": "string",
                        "minLength": 1
                    },
                    "metadata": {
                        "title": "Metadata",
                        "description": "Any additional information relevant to the sample. In most cases, this will be `null`. If the sample is for a static hook trigger, a `static_hook_url` will be returned in this field.",
                        "type": "object"
                    }
                }
            },
            "SampleErrorResponse": {
                "type": "object",
                "properties": {
                    "error_message": {
                        "title": "Error message",
                        "type": "string",
                        "minLength": 1
                    },
                    "field_errors": {
                        "title": "Field errors",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "SampleResultsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "description": "List containing the results from the sample. Could be empty",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                }
            },
            "SampleResultsErrorResponse": {
                "type": "object",
                "properties": {
                    "error_message": {
                        "title": "Error message",
                        "description": "Error message from the sampling attempt.",
                        "type": "string",
                        "minLength": 1
                    },
                    "error_type": {
                        "title": "Error type",
                        "description": "Error type - one of user, auth, partner, or system.",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "SEOData": {
                "required": [
                    "path",
                    "cannonical_path"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "path": {
                        "title": "Path",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "cannonical_path": {
                        "title": "Cannonical path",
                        "type": "string",
                        "minLength": 1
                    },
                    "canonical_path": {
                        "title": "Canonical path",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "lastmod_override": {
                        "title": "Lastmod override",
                        "description": "Adjusts the lastmod in the sitemap.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "should_redirect": {
                        "title": "Should redirect",
                        "type": "boolean"
                    },
                    "seo_index_tag_override": {
                        "title": "Seo index tag override",
                        "type": "string",
                        "readOnly": true
                    },
                    "seo_title_override": {
                        "title": "Seo title override",
                        "description": "8-10 words max with title case. Overrides the title tag of the page.",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "seo_description_override": {
                        "title": "Seo description override",
                        "description": "Overrides the meta name=\"description\" tag of the page.",
                        "type": "string",
                        "nullable": true
                    },
                    "seo_h1_override": {
                        "title": "Seo h1 override",
                        "description": "Overrides the h1 tag of the page.",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "seo_structured_data": {
                        "title": "Seo structured data",
                        "description": "Structured data, represented as LD+JSON, to render in the head of the page.",
                        "type": "object",
                        "nullable": true
                    },
                    "seo_override_enabled": {
                        "title": "Seo override enabled",
                        "type": "boolean"
                    },
                    "seo_experiment_name": {
                        "title": "Seo experiment name",
                        "description": "An experiment name for use in SEO experiments.",
                        "type": "string",
                        "maxLength": 128,
                        "nullable": true
                    },
                    "seo_experiment_lane": {
                        "title": "Seo experiment lane",
                        "description": "An experiment lane name for use in SEO experiments.",
                        "type": "string",
                        "maxLength": 128,
                        "nullable": true
                    }
                }
            },
            "CommentAuthor": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "AppAlternativeCommentVote": {
                "required": [
                    "user"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "vote": {
                        "title": "Vote",
                        "type": "boolean",
                        "nullable": true
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string",
                        "nullable": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/CommentAuthor"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "AppAlternative": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "comparison": {
                        "title": "Comparison",
                        "type": "string",
                        "readOnly": true
                    },
                    "comment_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppAlternativeCommentVote"
                        },
                        "readOnly": true
                    },
                    "comments": {
                        "title": "Comments",
                        "type": "string",
                        "readOnly": true
                    },
                    "score": {
                        "title": "Score",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "AppMedia": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "readOnly": true
                    },
                    "caption": {
                        "title": "Caption",
                        "type": "string",
                        "nullable": true
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "string",
                        "readOnly": true
                    },
                    "featured": {
                        "title": "Featured",
                        "type": "boolean"
                    }
                }
            },
            "ServicePairSerializerV2": {
                "required": [
                    "id",
                    "canonical_id",
                    "current_implementation_id",
                    "name",
                    "slug",
                    "app_url",
                    "learn_more_url",
                    "description",
                    "banner",
                    "age_in_days",
                    "days_since_last_update",
                    "primary_color",
                    "is_premium",
                    "is_public",
                    "is_built_in",
                    "is_beta",
                    "is_featured",
                    "is_upcoming",
                    "popularity",
                    "zap_usage_count",
                    "integration_overview_html",
                    "hashtag",
                    "filters",
                    "reads",
                    "writes",
                    "searches",
                    "searches_or_writes",
                    "canonical_url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "canonical_id": {
                        "title": "Canonical id",
                        "type": "string",
                        "minLength": 1
                    },
                    "current_implementation_id": {
                        "title": "Current implementation id",
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "minLength": 1
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "readOnly": true
                    },
                    "service_url": {
                        "title": "Service url",
                        "type": "string",
                        "readOnly": true
                    },
                    "app_url": {
                        "title": "App url",
                        "type": "string",
                        "minLength": 1
                    },
                    "learn_more_url": {
                        "title": "Learn more url",
                        "type": "string",
                        "minLength": 1
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/service_category"
                        },
                        "readOnly": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    },
                    "images": {
                        "title": "Images",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "minLength": 1
                    },
                    "banner": {
                        "title": "Banner",
                        "type": "string",
                        "minLength": 1
                    },
                    "age_in_days": {
                        "title": "Age in days",
                        "type": "integer"
                    },
                    "days_since_last_update": {
                        "title": "Days since last update",
                        "type": "integer"
                    },
                    "primary_color": {
                        "title": "Primary color",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_premium": {
                        "title": "Is premium",
                        "type": "boolean"
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "boolean"
                    },
                    "is_built_in": {
                        "title": "Is built in",
                        "type": "boolean"
                    },
                    "is_beta": {
                        "title": "Is beta",
                        "type": "boolean"
                    },
                    "is_featured": {
                        "title": "Is featured",
                        "type": "boolean"
                    },
                    "is_upcoming": {
                        "title": "Is upcoming",
                        "type": "boolean"
                    },
                    "popularity": {
                        "title": "Popularity",
                        "type": "integer"
                    },
                    "zap_usage_count": {
                        "title": "Zap usage count",
                        "type": "integer"
                    },
                    "integration_overview_html": {
                        "title": "Integration overview html",
                        "type": "string",
                        "minLength": 1
                    },
                    "hashtag": {
                        "title": "Hashtag",
                        "type": "string",
                        "minLength": 1
                    },
                    "filters": {
                        "title": "Filters",
                        "type": "string",
                        "minLength": 1
                    },
                    "reads": {
                        "title": "Reads",
                        "type": "string",
                        "minLength": 1
                    },
                    "writes": {
                        "title": "Writes",
                        "type": "string",
                        "minLength": 1
                    },
                    "searches": {
                        "title": "Searches",
                        "type": "string",
                        "minLength": 1
                    },
                    "searches_or_writes": {
                        "title": "Searches or writes",
                        "type": "string",
                        "minLength": 1
                    },
                    "integrations_count": {
                        "title": "Integrations count",
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "should_index": {
                        "title": "Should index",
                        "description": "Indicates whether or not to include this service pair in the sitemaps.",
                        "type": "boolean",
                        "readOnly": true,
                        "nullable": true
                    },
                    "canonical_url": {
                        "title": "Canonical url",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "ServicePricingPlan": {
                "required": [
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of pricing plan.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "unit": {
                        "title": "Unit",
                        "description": "Unit of pricing plan, example: Monthly or Annually",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "title": "Description",
                        "description": "Optional description of the pricing plan",
                        "type": "string"
                    },
                    "features": {
                        "title": "Features",
                        "description": "An array of features",
                        "type": "object",
                        "nullable": true
                    },
                    "price": {
                        "title": "Price",
                        "type": "string",
                        "minLength": 1
                    },
                    "is_active": {
                        "title": "Is Active?",
                        "description": "Used to catalog a Service's pricing history over time",
                        "type": "boolean"
                    },
                    "published": {
                        "title": "Published",
                        "description": "If True, the pricing plan will be publicly visible.",
                        "type": "boolean"
                    }
                }
            },
            "ServiceRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "company": {
                        "title": "Company",
                        "type": "string",
                        "readOnly": true
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "photo_url": {
                        "title": "Photo url",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "SessionTokenExchangeRequest": {
                "required": [
                    "session_token"
                ],
                "type": "object",
                "properties": {
                    "session_token": {
                        "title": "Session token",
                        "description": "A session token, either from the ssoid or zapsession cookies, depending on what is specified in the session_token_source field",
                        "type": "string",
                        "minLength": 1
                    },
                    "session_token_kind": {
                        "title": "Session token kind",
                        "description": "The kind of session token to exchange for a JWT. Use zapsession for JWT token exchange from a subpath (the default) for the zap session cookie. Use ssoid for JWT token exchange from a subdomain for the ssoid cookie.",
                        "type": "string",
                        "enum": [
                            "zapsession",
                            "ssoid"
                        ],
                        "default": "zapsession"
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "SessionTokenExchangeResponse": {
                "required": [
                    "account_id",
                    "jwt",
                    "customuser_id"
                ],
                "type": "object",
                "properties": {
                    "account_id": {
                        "title": "Account id",
                        "type": "string",
                        "minLength": 1
                    },
                    "jwt": {
                        "title": "Jwt",
                        "type": "string",
                        "minLength": 1
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "SharedZapCreator": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "gravatar_url": {
                        "title": "Gravatar url",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "SharedZapGuidedRecipe": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 128,
                        "minLength": 1,
                        "nullable": true
                    }
                }
            },
            "SharedZap": {
                "required": [
                    "link_hash",
                    "creator",
                    "guided_recipe"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "zuid": {
                        "title": "Zuid",
                        "type": "string",
                        "maxLength": 36,
                        "minLength": 1,
                        "nullable": true
                    },
                    "link_hash": {
                        "title": "Link hash",
                        "type": "string",
                        "maxLength": 40,
                        "minLength": 1
                    },
                    "app_slugs": {
                        "title": "App slugs",
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "description": "The title of the Shared Zap",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "description": {
                        "title": "Description",
                        "description": "A lengthy description about what this Zap does and how it does it. ",
                        "type": "string",
                        "nullable": true
                    },
                    "share_visibility": {
                        "title": "Share visibility",
                        "type": "string",
                        "readOnly": true
                    },
                    "origin_divergence_state": {
                        "title": "Origin divergence state",
                        "type": "string",
                        "readOnly": true
                    },
                    "pending_selected_api_changes": {
                        "title": "Pending selected api changes",
                        "type": "string",
                        "readOnly": true
                    },
                    "creator": {
                        "$ref": "#/components/schemas/SharedZapCreator"
                    },
                    "guided_recipe": {
                        "$ref": "#/components/schemas/SharedZapGuidedRecipe"
                    },
                    "node_id": {
                        "title": "Node id",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "SharingStats": {
                "required": [
                    "installation_count",
                    "installation_count_for_similar",
                    "setup_time_minutes",
                    "saved_time_hours"
                ],
                "type": "object",
                "properties": {
                    "installation_count": {
                        "title": "Installation count",
                        "type": "integer"
                    },
                    "installation_count_for_similar": {
                        "title": "Installation count for similar",
                        "type": "integer"
                    },
                    "setup_time_minutes": {
                        "title": "Setup time minutes",
                        "type": "string",
                        "format": "decimal"
                    },
                    "saved_time_hours": {
                        "title": "Saved time hours",
                        "type": "string",
                        "format": "decimal"
                    }
                }
            },
            "SupportNote": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "description": "Titles are shown at the top of each note when rendered. Titles are also used for selecting notes inside the admin.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "nullable": true
                    },
                    "status": {
                        "title": "Status",
                        "description": "Should this note be visible on the site and in search?",
                        "type": "string",
                        "enum": [
                            "draft",
                            "published"
                        ],
                        "nullable": true
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 128,
                        "minLength": 1,
                        "nullable": true
                    },
                    "text": {
                        "title": "Text",
                        "description": "Markdown and Django template enabled text box. The title of the note will automatically be included as an H1 tags (\"#\"). Use H2 tags (\"##\") as your top level heading. Use {{base_url}} to cross link between docs.",
                        "type": "string",
                        "minLength": 1
                    },
                    "html": {
                        "title": "Html",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Testimonial": {
                "required": [
                    "id",
                    "name",
                    "company",
                    "quote"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "company": {
                        "title": "Company",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "quote": {
                        "title": "Quote",
                        "type": "string",
                        "minLength": 1
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    },
                    "featured": {
                        "title": "Featured",
                        "type": "boolean"
                    },
                    "order": {
                        "title": "Order",
                        "type": "integer",
                        "maximum": 4294967295,
                        "minimum": 0
                    }
                }
            },
            "TriggerSubscriptionClaimDetail": {
                "required": [
                    "claim_id",
                    "claimed_until",
                    "initialized",
                    "trigger_type",
                    "claimed_at"
                ],
                "type": "object",
                "properties": {
                    "claim_id": {
                        "title": "Claim id",
                        "description": "A TriggerSubscriptionClaim id.",
                        "type": "string",
                        "minLength": 1
                    },
                    "claimed_until": {
                        "title": "Claimed until",
                        "description": "A time stamp representing when the claim will become expired",
                        "type": "string",
                        "format": "date-time"
                    },
                    "initialized": {
                        "title": "Initialized",
                        "description": "A boolean value representing whether or not the related `TriggerSubscription`has been initialized. \nIf `False` the caller should listen for [InitializationSuccessEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationSuccessEvent)/[InitializationFailureEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationFailureEvent) events emitted as a side effect of this request. \nIf `True`, the caller can begin to listen for [ProduceSuccessEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationFailureEvent)/[ProduceFailureEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.ProduceFailureEvent) events",
                        "type": "boolean"
                    },
                    "metadata": {
                        "title": "Metadata",
                        "description": "Consists any additional claim information. For example\n        ```\n        {\n            \"claim_id\": \"017be128-702e-47c7-a5d3-f60156b0a8b6\",\n            \"trigger_type\": \"hook_subscription\",\n            \"created_at\": 1631570128,\n            \"initialized\": false,\n            \"hook_url\": \"http://localhost:8000/hooks/standard/167367/6ecdda1e92a14c4fa2ad8bbc3ced04c0/\",\n            \"expires_at\": null\n        }\n        ```\n",
                        "type": "object"
                    },
                    "trigger_type": {
                        "title": "Trigger type",
                        "description": "The type of trigger subscription claim, which reflects the trigger underlying it.",
                        "type": "string",
                        "enum": [
                            "polling",
                            "hook_subscription",
                            "hook_to_poll",
                            "hook_static",
                            "hook_special"
                        ]
                    },
                    "hook_url": {
                        "title": "Hook url",
                        "description": "The URL for the hook trigger types, will be null for polling.",
                        "type": "string",
                        "minLength": 1
                    },
                    "claimed_at": {
                        "title": "Claimed at",
                        "description": "A time stamp representing when the claim was created.",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TriggerSubscriptionClaimDetailResponse": {
                "required": [
                    "claims"
                ],
                "type": "object",
                "properties": {
                    "claims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TriggerSubscriptionClaimDetail"
                        }
                    }
                }
            },
            "TriggerSubscriptionRequest": {
                "required": [
                    "selected_api",
                    "type_of",
                    "action",
                    "params"
                ],
                "type": "object",
                "properties": {
                    "selected_api": {
                        "title": "Selected api",
                        "description": "Something like `SlackAPI` (for Python apps) or `SplitwiseCLIAPI@1.0.0` (for CLI apps). Non-public apps are fine as long as the authed user can access them.",
                        "type": "string",
                        "minLength": 1
                    },
                    "type_of": {
                        "title": "Type of",
                        "description": "Must be `read` currently, though may support other types of trigger in the future.",
                        "type": "string",
                        "minLength": 1
                    },
                    "action": {
                        "title": "Action",
                        "description": "Such as `new_contact`.",
                        "type": "string",
                        "minLength": 1
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "description": "If the app needs auth, provide an `authentication_id` that has the `selected_api` of the app you want to run. Can be any auth visible to the user (including shared).",
                        "type": "integer"
                    },
                    "claim_for_seconds": {
                        "title": "Claim for seconds",
                        "description": "Number of seconds until the claim should be recognized as expired. Returned as a datetime in the `claimed_until` field of the response. \nIf this field is excluded from the request body, it will be assumed that the claim has no expiration date. Passing in a `null` value will result in error.",
                        "type": "integer"
                    },
                    "params": {
                        "title": "Params",
                        "description": "Object that matches the input the node would normally get. Has all the same keys/types as the `needs` of the action.",
                        "type": "object"
                    },
                    "claimant": {
                        "title": "Claimant",
                        "description": "The name of who is making this claim. The claimant name is a value created and assigned by App Platform. If you have not been provided one then omit this field.",
                        "type": "string",
                        "minLength": 1
                    },
                    "idempotency_id": {
                        "title": "Idempotency id",
                        "description": "A unique string to identify this claim request, if another request is made with the same idempotency_id a 200 response is returned, but no further claims are created.  You can check for an Idempotent-Replayed:True header to see if this was the case. If no ID is provided each request will be treated as unique and a claim created.",
                        "type": "string",
                        "minLength": 1
                    },
                    "destination_selected_apis": {
                        "description": "A set of selected_apis that are allowed to have data passed in",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            },
            "TriggerSubscriptionClaimResponse": {
                "required": [
                    "claim_id",
                    "claimed_until",
                    "initialized"
                ],
                "type": "object",
                "properties": {
                    "claim_id": {
                        "title": "Claim id",
                        "description": "A TriggerSubscriptionClaim id",
                        "type": "string",
                        "minLength": 1
                    },
                    "claimed_until": {
                        "title": "Claimed until",
                        "description": "A time stamp representing when the claim will become expired",
                        "type": "string",
                        "format": "date-time"
                    },
                    "initialized": {
                        "title": "Initialized",
                        "description": "A boolean value representing whether or not the related `TriggerSubscription`has been initialized. \nIf `False` the caller should listen for [InitializationSuccessEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationSuccessEvent)/[InitializationFailureEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationFailureEvent) events emitted as a side effect of this request. \nIf `True`, the caller can begin to listen for [ProduceSuccessEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.InitializationFailureEvent)/[ProduceFailureEvent](https://docs.k8s.zapier.com/avro-schemas/#/schema/event.zapier.app_platform.trigger.ProduceFailureEvent) events",
                        "type": "boolean"
                    },
                    "metadata": {
                        "title": "Metadata",
                        "description": "Consists any additional claim information. For example\n        ```\n        {\n            \"claim_id\": \"017be128-702e-47c7-a5d3-f60156b0a8b6\",\n            \"trigger_type\": \"hook_subscription\",\n            \"created_at\": 1631570128,\n            \"initialized\": false,\n            \"hook_url\": \"http://localhost:8000/hooks/standard/167367/6ecdda1e92a14c4fa2ad8bbc3ced04c0/\",\n            \"expires_at\": null\n        }\n        ```\n",
                        "type": "object"
                    }
                }
            },
            "TriggerSubscriptionError": {
                "type": "object",
                "properties": {
                    "field_errors": {
                        "title": "Field errors",
                        "type": "object"
                    },
                    "error_message": {
                        "title": "Error message",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "Update": {
                "required": [
                    "title",
                    "description",
                    "image",
                    "author"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "description": "8-10 words max with title case.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "lastchanged": {
                        "title": "Lastchanged",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "maxLength": 128,
                        "nullable": true
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "draft",
                            "for-review",
                            "published"
                        ]
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "minLength": 1
                    },
                    "excerpt": {
                        "title": "Excerpt",
                        "type": "string",
                        "readOnly": true
                    },
                    "excerpt_text": {
                        "title": "Excerpt text",
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "images": {
                        "title": "Images",
                        "type": "string",
                        "readOnly": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "minLength": 1
                    },
                    "author": {
                        "$ref": "#/components/schemas/Author"
                    }
                }
            },
            "UseCase": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "canonical_id": {
                        "title": "Canonical id",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string",
                        "format": "slug",
                        "pattern": "^[-a-zA-Z0-9_]+$",
                        "readOnly": true,
                        "minLength": 1,
                        "nullable": true
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "summary_line": {
                        "title": "Summary line",
                        "description": "Terser is better. To be used as a summary line, like \"instantly follow up with new leads or customers\", phrased to come after \"So you can\".",
                        "type": "string",
                        "readOnly": true,
                        "minLength": 1
                    },
                    "icon_name": {
                        "title": "Icon name",
                        "type": "string",
                        "readOnly": true
                    },
                    "icon_color": {
                        "title": "Icon color",
                        "type": "string",
                        "readOnly": true
                    },
                    "used_by_count": {
                        "title": "Used by count",
                        "type": "integer",
                        "readOnly": true
                    },
                    "steps": {
                        "title": "Steps",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "UseCaseStepAction": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string",
                        "minLength": 1
                    },
                    "app_implementation_id": {
                        "title": "App implementation id",
                        "type": "string",
                        "readOnly": true
                    },
                    "app_slug": {
                        "title": "App slug",
                        "type": "string",
                        "readOnly": true
                    },
                    "app_name": {
                        "title": "App name",
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "readOnly": true
                    },
                    "image": {
                        "title": "Image",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "SkillLevelAction": {
                "required": [
                    "name",
                    "key"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "description": "Human-readable label to present to user",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                    },
                    "key": {
                        "title": "Key",
                        "description": "Semi-human-readable string to identify via API. Changes here may require FE code changes.",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                    },
                    "order": {
                        "title": "Order",
                        "type": "string",
                        "readOnly": true
                    },
                    "completed": {
                        "title": "Completed",
                        "type": "string",
                        "readOnly": true
                    },
                    "completion_url": {
                        "title": "Completion url",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Zap": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    }
                }
            },
            "DeleteZapsRequest": {
                "required": [
                    "zap_ids"
                ],
                "type": "object",
                "properties": {
                    "zap_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "TransferZapsRequest": {
                "required": [
                    "zap_ids",
                    "customuser_id",
                    "account_id"
                ],
                "type": "object",
                "properties": {
                    "zap_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "type": "integer"
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    }
                }
            },
            "ZapTransferObjectserializer": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "TransferZapsResponse": {
                "required": [
                    "successes",
                    "failures"
                ],
                "type": "object",
                "properties": {
                    "successes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZapTransferObjectserializer"
                        }
                    },
                    "failures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZapTransferObjectserializer"
                        }
                    }
                }
            },
            "ExportZapsRequest": {
                "type": "object",
                "properties": {
                    "zap_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    }
                }
            },
            "ImportZapsRequest": {
                "type": "object",
                "properties": {
                    "destination_folder_id": {
                        "title": "Destination folder id",
                        "type": "integer"
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    }
                }
            },
            "MoveZapsRequest": {
                "required": [
                    "zap_ids",
                    "target_account_id"
                ],
                "type": "object",
                "properties": {
                    "zap_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "target_account_id": {
                        "title": "Target account id",
                        "type": "integer"
                    }
                }
            },
            "ChoiceResponse": {
                "type": "object",
                "properties": {
                    "objects": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "readOnly": true
                    }
                }
            },
            "ConvertZDLToNodes": {
                "required": [
                    "zdl",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "zdl": {
                        "title": "Zdl",
                        "description": "A valid ZDL v0.4 zap definition.",
                        "type": "object"
                    },
                    "account_id": {
                        "title": "Account id",
                        "description": "The Account ID to execute ZDL with. Defaults to primary if it exists.",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title to display in the Zap List.",
                        "type": "string",
                        "minLength": 1
                    },
                    "enable": {
                        "title": "Enable",
                        "description": "Whether to enable (unpause) the Zap.",
                        "type": "boolean",
                        "default": false
                    },
                    "dry_run": {
                        "title": "Dry run",
                        "description": "Whether to not actually create any Nodes. Useful for validation",
                        "type": "boolean",
                        "default": false
                    },
                    "draft": {
                        "title": "Draft",
                        "description": "Whether to skip enable (unpause) checks.",
                        "type": "boolean",
                        "default": false
                    },
                    "samples": {
                        "title": "Samples",
                        "description": "A dictionary with samples to use instead of the default 'skipped' ones. Keys should match the step IDs in the ZDL.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "default": {}
                    }
                }
            },
            "ConvertZDLToNodesResponseSuccess": {
                "required": [
                    "paused"
                ],
                "type": "object",
                "properties": {
                    "paused": {
                        "title": "Paused",
                        "description": "Whether the Zap was unpaused.",
                        "type": "boolean"
                    },
                    "root_id": {
                        "title": "Root id",
                        "description": "The Node ID of the root node.",
                        "type": "integer"
                    }
                }
            },
            "Error": {
                "required": [
                    "detail"
                ],
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "description": "Summary of the error.",
                        "type": "string",
                        "minLength": 1
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Optional context for the error.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "ConvertZDLToNodesResponseFailure": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "List of errors.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ZDLRunPublished": {
                "required": [
                    "zap",
                    "version",
                    "payload",
                    "account"
                ],
                "type": "object",
                "properties": {
                    "zap": {
                        "title": "Zap",
                        "description": "The id of the Zap you wish to run.",
                        "type": "string",
                        "minLength": 1
                    },
                    "version": {
                        "title": "Version",
                        "description": "The version id of the Zap you want to run.",
                        "type": "string",
                        "minLength": 1
                    },
                    "payload": {
                        "title": "Payload",
                        "description": "The trigger payload to be run.",
                        "type": "object"
                    },
                    "account": {
                        "title": "Account",
                        "description": "The account id the Zap is owned by.",
                        "type": "integer"
                    }
                }
            },
            "ZDLValidateRequest": {
                "required": [
                    "zdl"
                ],
                "type": "object",
                "properties": {
                    "zdl": {
                        "title": "Zdl",
                        "description": "The ZDL to be validated.",
                        "type": "object"
                    }
                }
            },
            "ZDLValidateResponseError": {
                "required": [
                    "errors"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "Errors",
                        "description": "A dict of validation errors.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "ZHTaskUsageAggregate": {
                "type": "object",
                "properties": {
                    "billable": {
                        "title": "Billable",
                        "description": "Count of billable tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "delayed": {
                        "title": "Delayed",
                        "description": "Count of delayed tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "error": {
                        "title": "Error",
                        "description": "Count of errored tasks",
                        "type": "integer"
                    },
                    "filtered": {
                        "title": "Filtered",
                        "description": "Count of filtered tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "halted": {
                        "title": "Halted",
                        "description": "Count of halted tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "held": {
                        "title": "Held",
                        "description": "Count of held tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "pending": {
                        "title": "Pending",
                        "description": "Count of pending tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "scheduled": {
                        "title": "Scheduled",
                        "description": "Count of scheduled tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "skipped": {
                        "title": "Skipped",
                        "description": "Count of skipped tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "success": {
                        "title": "Success",
                        "description": "Count of successful tasks",
                        "type": "integer",
                        "default": 0
                    },
                    "throttled": {
                        "title": "Throttled",
                        "description": "Count of throttled tasks",
                        "type": "integer",
                        "default": 0
                    }
                }
            },
            "ZHTaskUsageBucket": {
                "required": [
                    "date",
                    "tasks"
                ],
                "type": "object",
                "properties": {
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "format": "date"
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/ZHTaskUsageAggregate"
                    }
                }
            },
            "ZHTaskUsageResponse": {
                "required": [
                    "interval",
                    "tasks_by_date",
                    "tasks_by_status",
                    "total_tasks_count"
                ],
                "type": "object",
                "properties": {
                    "interval": {
                        "title": "Interval",
                        "type": "string",
                        "enum": [
                            "day",
                            "month"
                        ]
                    },
                    "tasks_by_date": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZHTaskUsageBucket"
                        }
                    },
                    "tasks_by_status": {
                        "$ref": "#/components/schemas/ZHTaskUsageAggregate"
                    },
                    "total_tasks_count": {
                        "title": "Total tasks count",
                        "type": "integer"
                    }
                }
            },
            "ZHTopZapsTasks": {
                "required": [
                    "billable"
                ],
                "type": "object",
                "properties": {
                    "billable": {
                        "title": "Billable",
                        "description": "Count of billable tasks",
                        "type": "integer"
                    },
                    "delayed": {
                        "title": "Delayed",
                        "description": "Count of delayed tasks",
                        "type": "integer"
                    },
                    "error": {
                        "title": "Error",
                        "description": "Count of errored tasks",
                        "type": "integer"
                    },
                    "filtered": {
                        "title": "Filtered",
                        "description": "Count of filtered tasks",
                        "type": "integer"
                    },
                    "halted": {
                        "title": "Halted",
                        "description": "Count of halted tasks",
                        "type": "integer"
                    },
                    "held": {
                        "title": "Held",
                        "description": "Count of held tasks",
                        "type": "integer"
                    },
                    "pending": {
                        "title": "Pending",
                        "description": "Count of pending tasks",
                        "type": "integer"
                    },
                    "scheduled": {
                        "title": "Scheduled",
                        "description": "Count of scheduled tasks",
                        "type": "integer"
                    },
                    "skipped": {
                        "title": "Skipped",
                        "description": "Count of skipped tasks",
                        "type": "integer"
                    },
                    "success": {
                        "title": "Success",
                        "description": "Count of successful tasks",
                        "type": "integer"
                    },
                    "throttled": {
                        "title": "Throttled",
                        "description": "Count of throttled tasks",
                        "type": "integer"
                    }
                }
            },
            "ZHTopZapsZaps": {
                "required": [
                    "zap_id",
                    "tasks",
                    "last_run"
                ],
                "type": "object",
                "properties": {
                    "zap_id": {
                        "title": "Zap id",
                        "type": "string",
                        "minLength": 1
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/ZHTopZapsTasks"
                    },
                    "last_run": {
                        "title": "Last run",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ZHTopZaps": {
                "required": [
                    "count",
                    "objects"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "title": "Count",
                        "description": "Count of Zaps fitting the filter criteria which ran during the specified period",
                        "type": "integer"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZHTopZapsZaps"
                        }
                    }
                }
            },
            "ErrorRateByZapDetails": {
                "required": [
                    "zap_id",
                    "error_rate",
                    "percent_change",
                    "error_total"
                ],
                "type": "object",
                "properties": {
                    "zap_id": {
                        "title": "Zap id",
                        "type": "string",
                        "minLength": 1
                    },
                    "error_rate": {
                        "title": "Error rate",
                        "type": "number",
                        "minimum": 0
                    },
                    "percent_change": {
                        "title": "Percent change",
                        "type": "number",
                        "nullable": true
                    },
                    "error_total": {
                        "title": "Error total",
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "nullable": true
            },
            "ErrorRateByZapTableResponse": {
                "required": [
                    "details"
                ],
                "type": "object",
                "properties": {
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorRateByZapDetails"
                        },
                        "nullable": true
                    }
                }
            },
            "TaskUsageByAppDetails": {
                "required": [
                    "task_count",
                    "percent_change",
                    "percent_of_total",
                    "app_id"
                ],
                "type": "object",
                "properties": {
                    "task_count": {
                        "title": "Task count",
                        "type": "integer",
                        "minimum": 0
                    },
                    "percent_change": {
                        "title": "Percent change",
                        "type": "number",
                        "nullable": true
                    },
                    "percent_of_total": {
                        "title": "Percent of total",
                        "type": "number",
                        "minimum": 0
                    },
                    "app_id": {
                        "title": "App id",
                        "type": "string",
                        "minLength": 1
                    }
                },
                "nullable": true
            },
            "ZapHistoryAnalyticsSummaryBase": {
                "required": [
                    "task_count",
                    "remaining_count",
                    "percent_of_total",
                    "percent_change"
                ],
                "type": "object",
                "properties": {
                    "task_count": {
                        "title": "Task count",
                        "type": "integer",
                        "minimum": 0
                    },
                    "remaining_count": {
                        "title": "Remaining count",
                        "type": "integer",
                        "minimum": 0
                    },
                    "percent_of_total": {
                        "title": "Percent of total",
                        "type": "number",
                        "nullable": true
                    },
                    "percent_change": {
                        "title": "Percent change",
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "TaskUsageByAppTableResponse": {
                "required": [
                    "details",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskUsageByAppDetails"
                        },
                        "nullable": true
                    },
                    "total": {
                        "$ref": "#/components/schemas/ZapHistoryAnalyticsSummaryBase"
                    }
                }
            },
            "TaskUsageByOwnerDetails": {
                "required": [
                    "task_count",
                    "percent_change",
                    "percent_of_total",
                    "customuser_id"
                ],
                "type": "object",
                "properties": {
                    "task_count": {
                        "title": "Task count",
                        "type": "integer",
                        "minimum": 0
                    },
                    "percent_change": {
                        "title": "Percent change",
                        "type": "number",
                        "nullable": true
                    },
                    "percent_of_total": {
                        "title": "Percent of total",
                        "type": "number",
                        "minimum": 0
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "type": "string",
                        "minLength": 1
                    }
                },
                "nullable": true
            },
            "TaskUsageByOwnerTableResponse": {
                "required": [
                    "details",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskUsageByOwnerDetails"
                        },
                        "nullable": true
                    },
                    "total": {
                        "$ref": "#/components/schemas/ZapHistoryAnalyticsSummaryBase"
                    }
                }
            },
            "TaskUsageByZapDetails": {
                "required": [
                    "task_count",
                    "percent_change",
                    "percent_of_total",
                    "zap_id"
                ],
                "type": "object",
                "properties": {
                    "task_count": {
                        "title": "Task count",
                        "type": "integer",
                        "minimum": 0
                    },
                    "percent_change": {
                        "title": "Percent change",
                        "type": "number",
                        "nullable": true
                    },
                    "percent_of_total": {
                        "title": "Percent of total",
                        "type": "number",
                        "minimum": 0
                    },
                    "zap_id": {
                        "title": "Zap id",
                        "type": "string",
                        "minLength": 1
                    }
                },
                "nullable": true
            },
            "TaskUsageByZapTableResponse": {
                "required": [
                    "details",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskUsageByZapDetails"
                        },
                        "nullable": true
                    },
                    "total": {
                        "$ref": "#/components/schemas/ZapHistoryAnalyticsSummaryBase"
                    }
                }
            },
            "MetaObject": {
                "required": [
                    "count",
                    "total_actionable"
                ],
                "type": "object",
                "properties": {
                    "offset": {
                        "title": "Offset",
                        "type": "integer"
                    },
                    "limit": {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "count": {
                        "title": "Count",
                        "description": "The total number of Zap runs matching the filter parameters (up to the maximum number the service can retrieve)",
                        "type": "integer"
                    },
                    "total_actionable": {
                        "title": "Total actionable",
                        "description": "The number of Zap runs that can be used in mass actions",
                        "type": "integer"
                    }
                }
            },
            "StepErrorV2": {
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "error_msg": {
                        "title": "Error msg",
                        "description": "Human-readable description of the error",
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "title": "Title",
                        "description": "Short text describing the step error",
                        "type": "string",
                        "nullable": true
                    },
                    "code": {
                        "title": "Code",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "title": "Status",
                        "description": "HTTP status code returned by the step",
                        "type": "string",
                        "nullable": true
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "nullable": true
            },
            "StepExecutionV2": {
                "description": "Contains the execution details of each step: status, input, output, etc",
                "required": [
                    "type",
                    "app",
                    "step_id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "enum": [
                            "write",
                            "read",
                            "filter",
                            "search",
                            "search_or_write",
                            "search_and_write",
                            "run"
                        ]
                    },
                    "zap_run_id": {
                        "title": "Zap run id",
                        "description": "Zap run id associated with this step. Steps with zap_run_id are usually part of paths or loops.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "app": {
                        "title": "App",
                        "type": "string",
                        "nullable": true
                    },
                    "action": {
                        "title": "Action",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "authentication_id": {
                        "title": "Authentication id",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "params": {
                        "title": "Params",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true
                    },
                    "parent_id": {
                        "title": "Parent id",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "step_id": {
                        "title": "Step id",
                        "type": "string",
                        "minLength": 1
                    },
                    "frame_id": {
                        "title": "Frame id",
                        "description": "UUID of the execution frame of this step. Steps with null frame_id are usually part of paths or loops.",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "status": {
                        "title": "Status",
                        "description": "Execution status of the step. It can be null if the step belongs to a child fork.",
                        "type": "string",
                        "enum": [
                            "delayed",
                            "scheduled",
                            "pending",
                            "error",
                            "error_handled",
                            "halted",
                            "throttled",
                            "held",
                            "filtered",
                            "skipped",
                            "success"
                        ],
                        "nullable": true
                    },
                    "input": {
                        "title": "Input",
                        "type": "object",
                        "nullable": true
                    },
                    "invocation_id": {
                        "title": "Invocation id",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "output": {
                        "title": "Output",
                        "type": "object",
                        "nullable": true
                    },
                    "start_time": {
                        "title": "Start time",
                        "description": "Datetime when the step was executed",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "order": {
                        "title": "Order",
                        "description": "Number representing the order of the Zap steps",
                        "type": "integer"
                    },
                    "step_errors": {
                        "$ref": "#/components/schemas/StepErrorV2"
                    }
                },
                "nullable": true
            },
            "ZapRunV2": {
                "required": [
                    "id",
                    "zap_id",
                    "status",
                    "zap_title",
                    "stop_reason",
                    "has_paths",
                    "zdl_version",
                    "account_id",
                    "billable_count",
                    "total_billable_count",
                    "held_plan_limit",
                    "steps_executions"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Zap Run ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "zap_id": {
                        "title": "Zap id",
                        "description": "Zap id. Could be a node ID or a UUID in ZDL form",
                        "type": "string",
                        "minLength": 1
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "enum": [
                            "delayed",
                            "scheduled",
                            "pending",
                            "error",
                            "error_handled",
                            "halted",
                            "throttled",
                            "held",
                            "filtered",
                            "skipped",
                            "success"
                        ]
                    },
                    "zap_title": {
                        "title": "Zap title",
                        "description": "The title of the Zap at the time it ran",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "stop_reason": {
                        "title": "Stop reason",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true
                    },
                    "has_paths": {
                        "title": "Has paths",
                        "type": "boolean"
                    },
                    "can_replay": {
                        "title": "Can replay",
                        "type": "boolean"
                    },
                    "zdl_version": {
                        "title": "Zdl version",
                        "description": "Version of the ZDL document at the time of the run",
                        "type": "string",
                        "minLength": 1
                    },
                    "zap_version_id": {
                        "title": "Zap version id",
                        "type": "string",
                        "nullable": true
                    },
                    "zap_version_name": {
                        "title": "Zap version name",
                        "type": "string",
                        "nullable": true
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    },
                    "billable_count": {
                        "title": "Billable count",
                        "description": "Amount of billable tasks of the current run",
                        "type": "integer"
                    },
                    "total_billable_count": {
                        "title": "Total billable count",
                        "description": "Total amount of billable tasks of the current run and its children.",
                        "type": "integer"
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "description": "Owner of the Zap that ran",
                        "type": "integer"
                    },
                    "held_plan_limit": {
                        "title": "Held plan limit",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "held_stale_auth_id": {
                        "title": "Held stale auth id",
                        "type": "integer",
                        "nullable": true
                    },
                    "held_reason": {
                        "title": "Held reason",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "held_plan_id": {
                        "title": "Held plan id",
                        "type": "integer",
                        "nullable": true
                    },
                    "held_payment_issue": {
                        "title": "Held payment issue",
                        "type": "boolean",
                        "nullable": true
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "rescheduled_time": {
                        "title": "Rescheduled time",
                        "description": "Date time when the zap will run after being scheduled",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "steps_executions": {
                        "description": "Contains the execution details of each step: status, input, output, etc",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StepExecutionV2"
                        },
                        "nullable": true
                    },
                    "timezone": {
                        "title": "Timezone",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    }
                }
            },
            "ZapRunsV2Response": {
                "required": [
                    "meta",
                    "results"
                ],
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/MetaObject"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZapRunV2"
                        }
                    }
                }
            },
            "ErrorDetailsV2": {
                "required": [
                    "status",
                    "code",
                    "detail"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "code": {
                        "title": "Code",
                        "type": "string",
                        "minLength": 1
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "minLength": 1
                    },
                    "detail": {
                        "title": "Detail",
                        "type": "string",
                        "minLength": 1
                    },
                    "_source": {
                        "title": "source",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "ZapHistoryErrorV2": {
                "required": [
                    "_errors"
                ],
                "type": "object",
                "properties": {
                    "_errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetailsV2"
                        }
                    }
                }
            },
            "DeleteBody": {
                "required": [
                    "account_id"
                ],
                "type": "object",
                "properties": {
                    "offset": {
                        "title": "Offset",
                        "type": "integer"
                    },
                    "limit": {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    },
                    "from_date": {
                        "title": "From date",
                        "description": "Start datetime for query; ISO-8601",
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_date": {
                        "title": "To date",
                        "description": "Start datetime for query; ISO-8601",
                        "type": "string",
                        "format": "date-time"
                    },
                    "customuser_ids": {
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "folder_ids": {
                        "description": "Comma-separated list of folder_id values to filter by",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "kinds": {
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workflow",
                                "transfer"
                            ]
                        }
                    },
                    "selected_apis": {
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "zap_ids": {
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "channel_error": {
                        "title": "Channel error",
                        "type": "string",
                        "minLength": 1
                    },
                    "held_reason": {
                        "title": "Held reason",
                        "type": "string",
                        "minLength": 1
                    },
                    "query": {
                        "title": "Query",
                        "description": "Search query to be used for filtering Zap runs",
                        "type": "string",
                        "minLength": 1
                    },
                    "statuses": {
                        "description": "Comma-separated list of zap run statuses used for filtering",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "delayed",
                                "scheduled",
                                "pending",
                                "error",
                                "error_handled",
                                "halted",
                                "throttled",
                                "held",
                                "filtered",
                                "skipped",
                                "success"
                            ]
                        }
                    },
                    "zap_run_ids": {
                        "description": "Comma-separated list of task stream IDs",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "zap_run_limit": {
                        "title": "Zap run limit",
                        "description": "Maximum amount of task streams to be deleted",
                        "type": "integer"
                    }
                }
            },
            "ZapRunsMassActionResponse": {
                "required": [
                    "failures"
                ],
                "type": "object",
                "properties": {
                    "pendings": {
                        "title": "Pendings",
                        "type": "integer"
                    },
                    "failures": {
                        "title": "Failures",
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        }
                    },
                    "channel": {
                        "title": "Channel",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    }
                }
            },
            "ReplayBody": {
                "required": [
                    "account_id"
                ],
                "type": "object",
                "properties": {
                    "offset": {
                        "title": "Offset",
                        "type": "integer"
                    },
                    "limit": {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    },
                    "from_date": {
                        "title": "From date",
                        "description": "Start datetime for query; ISO-8601",
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_date": {
                        "title": "To date",
                        "description": "Start datetime for query; ISO-8601",
                        "type": "string",
                        "format": "date-time"
                    },
                    "customuser_ids": {
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "folder_ids": {
                        "description": "Comma-separated list of folder_id values to filter by",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "kinds": {
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workflow",
                                "transfer"
                            ]
                        }
                    },
                    "selected_apis": {
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "zap_ids": {
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "channel_error": {
                        "title": "Channel error",
                        "type": "string",
                        "minLength": 1
                    },
                    "held_reason": {
                        "title": "Held reason",
                        "type": "string",
                        "minLength": 1
                    },
                    "query": {
                        "title": "Query",
                        "description": "Search query to be used for filtering Zap runs",
                        "type": "string",
                        "minLength": 1
                    },
                    "statuses": {
                        "description": "Comma-separated list of zap run statuses used for filtering",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "delayed",
                                "scheduled",
                                "pending",
                                "error",
                                "error_handled",
                                "halted",
                                "throttled",
                                "held",
                                "filtered",
                                "skipped",
                                "success"
                            ]
                        }
                    },
                    "zap_run_ids": {
                        "description": "Comma-separated list of task stream IDs",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "zap_run_limit": {
                        "title": "Zap run limit",
                        "description": "Maximum amount of task streams to be replayed",
                        "type": "integer"
                    }
                }
            },
            "ExportBody": {
                "required": [
                    "account_id"
                ],
                "type": "object",
                "properties": {
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    },
                    "from_date": {
                        "title": "From date",
                        "description": "Start datetime for query; ISO-8601",
                        "type": "string",
                        "format": "date-time"
                    },
                    "to_date": {
                        "title": "To date",
                        "description": "Start datetime for query; ISO-8601",
                        "type": "string",
                        "format": "date-time"
                    },
                    "customuser_ids": {
                        "description": "Comma-separated list of customuser_id values to filter by",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "folder_ids": {
                        "description": "Comma-separated list of folder_id values to filter by",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "kinds": {
                        "description": "Comma-separated list of Zap kind values to filter by",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workflow",
                                "transfer"
                            ]
                        }
                    },
                    "selected_apis": {
                        "description": "Comma-separated list of apps (selected APIs) values to filter by",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "zap_ids": {
                        "description": "Comma-separated list of Zap IDs (numeric or UUID)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "channel_error": {
                        "title": "Channel error",
                        "type": "string",
                        "minLength": 1
                    },
                    "held_reason": {
                        "title": "Held reason",
                        "type": "string",
                        "minLength": 1
                    },
                    "query": {
                        "title": "Query",
                        "description": "Search query to be used for filtering Zap runs",
                        "type": "string",
                        "minLength": 1
                    },
                    "statuses": {
                        "description": "Comma-separated list of zap run statuses used for filtering",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "delayed",
                                "scheduled",
                                "pending",
                                "error",
                                "error_handled",
                                "halted",
                                "throttled",
                                "held",
                                "filtered",
                                "skipped",
                                "success"
                            ]
                        }
                    },
                    "zap_run_ids": {
                        "description": "Comma-separated list of task stream IDs",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "channel_id": {
                        "title": "Channel id",
                        "type": "string",
                        "minLength": 1
                    },
                    "export_format": {
                        "title": "Export format",
                        "type": "string",
                        "default": "JSON",
                        "minLength": 1
                    },
                    "callback_url": {
                        "title": "Callback url",
                        "type": "string",
                        "format": "uri",
                        "minLength": 1
                    }
                }
            },
            "ExportResponse": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "CountsByAuthV2": {
                "required": [
                    "id",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Zap ID",
                        "type": "string",
                        "minLength": 1
                    },
                    "total": {
                        "title": "Total",
                        "description": "The number of runs held for this Authentication.",
                        "type": "integer"
                    }
                }
            },
            "CountsByRestrictedAppV2": {
                "required": [
                    "app",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "app": {
                        "title": "App",
                        "description": "The selected_api value of a restricted App.",
                        "type": "string",
                        "minLength": 1
                    },
                    "total": {
                        "title": "Total",
                        "description": "The number of runs that were held due to this restricted App.",
                        "type": "integer"
                    }
                }
            },
            "CountsByTaskLimitV2": {
                "required": [
                    "limit",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "limit": {
                        "title": "Limit",
                        "description": "Number representing the task limit of an account.",
                        "type": "string",
                        "minLength": 1
                    },
                    "total": {
                        "title": "Total",
                        "description": "The number of runs that were held due to this task limit.",
                        "type": "integer"
                    }
                }
            },
            "CountsByZapV2": {
                "required": [
                    "id",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Authentication ID",
                        "type": "string",
                        "minLength": 1
                    },
                    "total": {
                        "title": "Total",
                        "description": "The number of runs held for this Zap.",
                        "type": "integer"
                    }
                }
            },
            "ReasonCountsV2": {
                "description": "A list of objects that represent the breakdown of held run counts by reason.",
                "required": [
                    "reason_type"
                ],
                "type": "object",
                "properties": {
                    "payment_issue_held_count": {
                        "title": "Payment issue held count",
                        "description": "A count of how many held runs are due to payment issues.             This applies to the reasons of task_limit, step_limit and blacklisted_app.",
                        "type": "integer"
                    },
                    "reason_type": {
                        "title": "Reason type",
                        "description": "The type of reason the held counts represent.",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "totals_by_auth_id": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountsByAuthV2"
                        }
                    },
                    "totals_by_restricted_app": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountsByRestrictedAppV2"
                        }
                    },
                    "totals_by_task_limit": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountsByTaskLimitV2"
                        }
                    },
                    "totals_by_zap_id": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountsByZapV2"
                        }
                    },
                    "total": {
                        "title": "Total",
                        "description": "The total count of runs that have been held for this reason type.",
                        "type": "integer",
                        "default": 0
                    }
                }
            },
            "ZapCountsV2": {
                "description": "A list of objects that represent the breakdown of held run counts for Zaps",
                "required": [
                    "zap_id"
                ],
                "type": "object",
                "properties": {
                    "zap_id": {
                        "title": "Zap id",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "reasons": {
                        "description": "A list of objects that represent the breakdown of held run counts for a Zap by reason.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReasonCountsV2"
                        }
                    },
                    "total": {
                        "title": "Total",
                        "description": "The total number of held run counts for a Zap.",
                        "type": "integer",
                        "default": 0
                    },
                    "starts_expiring": {
                        "title": "Starts expiring",
                        "description": "An estimate of when the held runs for this Zap will start to expire.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "HeldRunCountsV2Response": {
                "type": "object",
                "properties": {
                    "reasons": {
                        "description": "A list of objects that represent the breakdown of held run counts by reason.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReasonCountsV2"
                        }
                    },
                    "zaps": {
                        "description": "A list of objects that represent the breakdown of held run counts for Zaps",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZapCountsV2"
                        }
                    },
                    "total": {
                        "title": "Total",
                        "description": "The number of held run counts returned.",
                        "type": "integer",
                        "default": 0
                    },
                    "starts_expiring": {
                        "title": "Starts expiring",
                        "description": "An estimate of when the held runs for this response will start to expire.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "ZapHistoryRequestLogsResponse": {
                "required": [
                    "account_id",
                    "customuser_id",
                    "request_data",
                    "request_duration_ms",
                    "request_headers",
                    "request_method",
                    "request_params",
                    "request_url",
                    "response_content",
                    "response_headers",
                    "response_status_code",
                    "selected_api"
                ],
                "type": "object",
                "properties": {
                    "account_id": {
                        "title": "Account id",
                        "type": "integer"
                    },
                    "customuser_id": {
                        "title": "Customuser id",
                        "type": "integer"
                    },
                    "request_data": {
                        "title": "Request data",
                        "description": "String representation of the data sent as part of the HTTP request, potentially JSON-encoded",
                        "type": "object",
                        "nullable": true
                    },
                    "request_duration_ms": {
                        "title": "Request duration ms",
                        "description": "The duration of the HTTP request in milliseconds",
                        "type": "integer",
                        "nullable": true
                    },
                    "request_headers": {
                        "title": "Request headers",
                        "description": "Headers for the HTTP request",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "request_method": {
                        "title": "Request method",
                        "description": "Method of the HTTP request",
                        "type": "string",
                        "minLength": 1
                    },
                    "request_params": {
                        "title": "Request params",
                        "description": "Query parameters sent as part of the HTTP request",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "request_url": {
                        "title": "Request url",
                        "description": "The URL of the HTTP request",
                        "type": "string",
                        "minLength": 1
                    },
                    "response_content": {
                        "title": "Response content",
                        "description": "String representation of the response content of the HTTP request, potentially JSON-encoded",
                        "type": "object",
                        "nullable": true
                    },
                    "response_headers": {
                        "title": "Response headers",
                        "description": "String representation of the HTTP response headers. If null, there was probably an error with the HTTP request (timeout, for example)",
                        "type": "string",
                        "minLength": 1,
                        "nullable": true
                    },
                    "response_status_code": {
                        "title": "Response status code",
                        "description": "Numeric status code of the HTTP response. If null, there was an error with the HTTP request (timeout, for example)",
                        "type": "integer",
                        "nullable": true
                    },
                    "selected_api": {
                        "title": "Selected api",
                        "description": "Internal name of the integration related to the action that performed the HTTP request",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "TopZapsByRunsV2": {
                "required": [
                    "zap_id",
                    "count"
                ],
                "type": "object",
                "properties": {
                    "zap_id": {
                        "title": "Zap id",
                        "description": "Zap id. Could be a node ID or a UUID in ZDL form",
                        "type": "string",
                        "minLength": 1
                    },
                    "count": {
                        "title": "Count",
                        "description": "The count of matching documents found",
                        "type": "integer"
                    }
                }
            },
            "TopZapsByRunsV2Response": {
                "required": [
                    "meta",
                    "results"
                ],
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/MetaObject"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopZapsByRunsV2"
                        }
                    }
                }
            },
            "GetZapRunsUsageResponse": {
                "required": [
                    "usage"
                ],
                "type": "object",
                "properties": {
                    "usage": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                }
            },
            "Status": {
                "required": [
                    "status",
                    "count"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    }
                }
            },
            "TopLevelZap": {
                "required": [
                    "zap_id",
                    "count"
                ],
                "type": "object",
                "properties": {
                    "zap_id": {
                        "title": "Zap id",
                        "type": "string",
                        "minLength": 1
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Status"
                        }
                    }
                }
            },
            "ZapRunCountZapSerializer": {
                "required": [
                    "zap_id",
                    "count"
                ],
                "type": "object",
                "properties": {
                    "zap_id": {
                        "title": "Zap id",
                        "type": "string",
                        "minLength": 1
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    }
                }
            },
            "TopLevelStatus": {
                "required": [
                    "status",
                    "count"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "minLength": 1
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "zaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ZapRunCountZapSerializer"
                        }
                    }
                }
            },
            "ZapRunCountsV2Response": {
                "required": [
                    "total"
                ],
                "type": "object",
                "properties": {
                    "total": {
                        "title": "Total",
                        "type": "integer"
                    },
                    "zaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopLevelZap"
                        }
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopLevelStatus"
                        }
                    }
                }
            }
        }
    }
}
